QuestionId,Title,Tags,Body,AnswerBody,AcceptedAnswerId,QuestionScore,ViewCount,AnswerCount,CommentCount,FavoriteCount,QuestionCreationDate,LastEditDate,LastActivityDate,ClosedDate
"54504153","Clang with CLion: Cannot get compiler information","<c++><cmake><clang><clion><azerothcore>","<p>I tried to switch from gcc to clang in CLion by changing the <strong>Toolchains</strong> preference:</p>

<p><a href=""https://i.stack.imgur.com/TpbNO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TpbNO.png"" alt=""clang clion""></a></p>

<p>But now the cmake fails with the following:</p>

<pre><code>Cannot get compiler information:
Compiler exited with error code 1: /usr/bin/clang++ -xc++ -DENABLE_EXTRAS ...
clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)
Target: x86_64-pc-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
Found candidate GCC installation: /usr/bin/../lib/gcc/i686-linux-gnu/8
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/8
Found candidate GCC installation: /usr/lib/gcc/i686-linux-gnu/8
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.3.0
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8
Selected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7.3.0
</code></pre>

<p>If I manually run CMake in a terminal using <code>-DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++</code> then it will work, only in CLion it doesn't.</p>
","","","2","5013","1","3","","2019-02-03 15:02:33","2019-02-03 15:08:40","2019-03-21 13:18:37",""
"54669959","CLion with ""source shellscript.sh""","<c++><clion>","<p>(Note: I am completely new to CLion)</p>

<p>I have an application which builds fine, but when I run it from the shell, I need to do</p>

<pre><code>make
source shellscript.sh
./applicationBinary
</code></pre>

<p>for it to run, otherwise libraries and similar won't be found</p>

<p>How do I do the <code>source shellscript.sh</code> within CLion (project from CMakeLists.txt)? I tried with External tools, before launch, but it will say that it cannot find the program ""source"".</p>

<p>The shellscript in question does some export calls, but they are dependent on a different built which is done beforehand, and the paths are not fixed, and instead get written to that script.</p>

<pre><code>DYLD_LIBRARY_PATH=""...""
export DYLD_LIBRARY_PATH
LD_LIBRARY_PATH=""...""
export LD_LIBRARY_PATH
etc.
</code></pre>
","","","1","406","1","6","","2019-02-13 12:14:11","","2021-06-11 11:11:44",""
"55633603","CLion Full Remote Mode with FreeBSD as the remote host","<c++><c><remote-debugging><freebsd><clion>","<p>Currently, the <a href=""https://blog.jetbrains.com/clion/2018/09/initial-remote-dev-support-clion/"" rel=""nofollow noreferrer"">Full Remote Mode</a> of CLion only supports Linux as a remote host OS. Is it possible to have a FreeBSD remote host?</p>
","<p>Yes, you can!</p>

<p>However, note that I'm recalling these steps retrospectively, so probably I have missed one step or two. Should you encounter any problem, please feel free to leave a comment below.</p>

<ol>
<li><p>Rent a FreeBSD server, of course :)</p></li>
<li><p>Update your system to the latest release. Otherwise, you may get weird errors like <code>""libdl.so.1"" not found</code> when installing packages. The one I'm using is FreeBSD 12.0-RELEASE-p3.</p></li>
<li><p>Create a user account. Don't forget to make it a member of <code>wheel</code>, and uncomment the <code>%wheel ALL=(ALL) ALL</code> line in <code>/usr/local/etc/sudoers</code>.</p></li>
<li><p>Set up SSH. This step is especially tricky, because we need to use both public-key and password authentication.</p>

<ol>
<li>Due to a <a href=""https://youtrack.jetbrains.com/issue/CPP-14580"" rel=""nofollow noreferrer"">known bug</a>, in some cases, the remote host must use password authentication, or you'll get an error when setting up the toolchain. You can enable password authentication by setting <code>PasswordAuthentication yes</code> in <code>/etc/ssh/sshd_config</code>, followed by a <code>sudo /etc/rc.d/sshd restart</code>.</li>
<li>It appears that CLion synchronizes files between the local and remote host with <code>rsync</code> and SSH. For some reasons I cannot explain, this process will hang forever if the host server doesn't support passphrase-less SSH key login. Follow <a href=""https://serverfault.com/a/241593/431150"">this answer</a> to create an SSH key as an additional way of authentication.</li>
</ol></li>
<li><p>CLion assumes the remote host OS to be Linux, so we must fix some incompatibilities between GNU/Linux and FreeBSD.</p>

<ol>
<li>Install GNU utilities with <code>sudo pkg install coreutils</code>.</li>
<li>Rename the BSD utility <code>stat</code> with <code>sudo mv /usr/bin/stat /usr/bin/_stat</code>.</li>
<li>Create a ""new"" file <code>/usr/bin/stat</code> with the content in <strong>Snippet 1</strong>. This hack exploits the fact that CLion sets the environment variable <code>JETBRAINS_REMOTE_RUN</code> to <code>1</code> before running commands on the remote server.</li>
<li>Do <code>sudo chmod a+x /usr/bin/stat</code> to make it executable.</li>
<li>Again, rename the BSD utility <code>ls</code> with <code>sudo mv /bin/ls /bin/_ls</code>.</li>
<li>Create a ""new"" file <code>/bin/ls</code> with the content in <strong>Snippet 2</strong>, like before.</li>
<li>Lastly, <code>sudo chmod a+x /bin/ls</code>.</li>
</ol></li>
<li><p>Install the dependencies with <code>sudo pkg install rsync cmake gcc gdb gmake</code>.</p></li>
<li>Now you can follow the <a href=""https://www.jetbrains.com/help/clion/remote-projects-support.html"" rel=""nofollow noreferrer"">official instructions</a>, and connect to your shiny FreeBSD host!</li>
</ol>

<p><a href=""https://i.stack.imgur.com/y1uMQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/y1uMQ.png"" alt=""enter image description here""></a></p>

<hr>

<p><strong>Snippet 1</strong></p>

<pre><code>#!/bin/sh
if [ -z ""$JETBRAINS_REMOTE_RUN"" ]
then
        exec ""/usr/bin/_stat"" ""$@""
else
        exec ""/usr/local/bin/gnustat"" ""$@""
fi
</code></pre>

<p><strong>Snippet 2</strong></p>

<pre><code>#!/bin/sh
if [ -z ""$JETBRAINS_REMOTE_RUN"" ]
then
        exec ""/bin/_ls"" ""$@""
else
        exec ""/usr/local/bin/gls"" ""$@""
fi
</code></pre>
","55633604","2","1005","3","1","","2019-04-11 13:24:32","","2020-08-30 15:45:43",""
"55690326","CLion: how to build locally, copy binary to remote and debug it with","<remote-debugging><clion><gdbserver>","<p>Currently I run configuration ""Build binary"" in CLion, <code>scp</code> it to the remote machine, start gdbserver there for the binary, and then I switch to the ""Debug binary"" configuration and press the Debug button.</p>

<p>Is there any way to simplify/automate this in CLion? I can't even make the ""Debug binary"" call the ""Build binary"" configuration: since I'm pressing the ""Debug"" button, it will try to debug the ""Build binary"".</p>
","","","1","102","0","0","1","2019-04-15 13:30:42","","2019-04-15 13:30:42",""
"55856917","CLion: run script after running target","<clion>","<p>I would like to run some commands after my target executable has been run.</p>

<p>I know that I can add ""Before launch"" tasks; is there such a thing as an ""After launch"" task?</p>
","","","5","143","0","1","1","2019-04-25 20:10:27","","2019-04-25 20:10:27",""
"56070028","How do I export .c file using Clion, I need it to be in a timeshare terminal","<c><clion>","<p>I have written code for an assignment using Clion. First of all I am having trouble with run configurations using in.txt and having output to out.txt. I figured if I can't figure that out I should try testing through the terminal but I don't know how to export my .c project. There is an option to export via HTML but that configuration will not work on the terminal. If any clarification is needed lmk!</p>

<p>This is for a Clion Windows 10 version. This is one of our first assignments in C so I have been primarily using Eclipse for java purposes. I also couldn't figure out Eclipses C version, even just to create a new C project.</p>

<p>in.txt
abc h63 8ur-)(<em>&amp;yhq!~ `xbv
JKL</em>()#$$%345~!@? >

<p>then upon doing % charType in out, the file out will contain the lines:
out.txt: 
line 1 contains:
12 alphabetic characters: abchuryhqxbv
3 numeric characters: 638
8 punctuation characters: -)(*&amp;!~`
5 whitespace characters:
line 2 contains:
6 alphabetic characters: JKLmnb
3 numeric characters: 345
13 punctuation characters: *()#$$%~!@?>&lt;
2 whitespace characters:
line 3 contains:
10 alphabetic characters: afsteyYDNC
2 numeric characters: 64
1 punctuation character: &amp;
6 whitespace characters:
line 4 contains:
9 alphabetic characters: hfdjstreL
1 numeric character: 9
8 punctuation characters: *&amp;^^%$"":
1 whitespace character:</p>
","","","1","437","1","1","","2019-05-10 02:46:37","2019-05-10 06:31:42","2019-05-10 06:31:42",""
"56252534","CLion new C++ Class file template","<c++><ide><clion><file-templates>","<p>CLion has file template to generate C++ Class, which generates source file and header. In my project I have handler classes that have same code part, and i want to generate them by file templates. And templates that i created can't do this:</p>

<ol>
<li><p>Set file names for class MyHandlerClass i want my_handler_class.cpp and .hpp</p></li>
<li><p>From one class name i want to generate 2 files header and source, don't know how to do that.</p></li>
<li>I also want to have string like MyClass -> my-class, found function <code>$lowercaseAndDash($NAME)</code> but don't know why its not works</li>
</ol>

<p>I have template for header:</p>

<pre><code>#pragma once
// includes

namespace handlers {

class ${NAME}: public Parent {
  public:
  // methods
};

}
</code></pre>

<p>I tried to solve first problem by setting the file name like this: <code>#set ($FILE_NAME = ""test_class.hpp"")</code>. But i don't know hot to set CamelCase to snake, and this don't works.</p>

<p>Also find in <a href=""https://www.jetbrains.com/help/clion/template-variables.html"" rel=""nofollow noreferrer"">docs</a> function to snake case, but its not works for me in file template.</p>
","<ol>
<li><p>Its impossible to change file name from template. When you create a C++ Class, you set <strong>class name</strong> and <strong>select file name encoding</strong>. When you <strong>create file</strong> from template its <strong>saves file with your file name</strong>. I found solution this way, enter file_name (in snake case), and with Velocity create CamelCaseName for class name:</p>
<p><code>#set( $CamelCaseName = &quot;&quot; )</code></p>
<p><code>#set( $part = &quot;&quot; )</code></p>
<p><code>#foreach($part in $NAME.split(&quot;_&quot;))</code></p>
<p><code>    #set( $CamelCaseName = &quot;${CamelCaseName}$part.substring(0,1).toUpperCase()$part.substring(1).toLowerCase()&quot; )</code></p>
<p><code>#end</code></p>
</li>
<li><p>Its impossible to generate 2 files from one click like it do C++ Class template. I have to templates, and use them both.</p>
</li>
<li><p>This function is for liveTemplates, for FileTemplate i used velocity: <code>#set( $NeededString = $NAME.replaceAll('_', '-') )</code></p>
<p>To include header file from cpp use <code>#[[#include]]# &quot;${NAME}.hpp&quot;</code></p>
</li>
</ol>
","56255833","1","1507","1","0","","2019-05-22 08:33:10","2019-05-22 08:50:16","2019-05-22 11:28:28",""
"56257486","CLion formatter breaks MOCK_METHOD lines","<c++><formatting><googletest><clion><gmock>","<p>I am using gmock in CLion, whenever I format my file, all the MOCK_METHOD macros are broken up with unnecessary line breaks. like this:</p>

<p>Before:</p>

<pre><code>    class MockObservableExecutor : public IObservableExecutor {
        MOCK_METHOD1(registerExecutor, void(IObserverExecutor*));
        MOCK_METHOD2(sendMessage, void(const std::string&amp;, const std::string&amp;));
    };
</code></pre>

<p>After:</p>

<pre><code>    class MockObservableExecutor : public IObservableExecutor {
        MOCK_METHOD1(registerExecutor, void(IObserverExecutor
                *));

        MOCK_METHOD2(sendMessage, void(
                const std::string&amp;, const std::string&amp;));
    };
</code></pre>

<p>I see no reason that the single asterisk should get a line of its own, how can I tell CLion to stop its shenanigans? Why does it decide that it should break the line there?</p>

<p>For now I have added <code>//@formatter:off</code> and <code>//@formatter:on</code> statemenst around my mock but I do want formatting to work for some of the stuff in my mock.</p>
","","","1","93","1","0","","2019-05-22 13:04:18","","2020-01-30 10:33:12",""
"59512214","Execute rustfmt on file save in IntelliJ or CLion","<intellij-idea><rust><ide><clion><rustfmt>","<p>How do I run <code>rustfmt</code> automatically when I save a file in IntelliJ or CLion?</p>
","","","7","2382","2","0","","2019-12-28 15:27:54","","2020-03-17 18:37:35",""
"59524505","Cannot build CLion project with .asm file","<c><assembly><cmake><x86-64><clion>","<p>running <code>CLion</code> on <code>Linux</code>, I've been trying to get .asm files to work. This is how my test project looks like (it worked <code>100%</code> on <code>Windows/Mac</code>, only had to add <code>.intel_syntax</code> in the <code>.asm</code> file).</p>

<p>Installed the <code>NASM</code> Assembly Support plugin.</p>

<p>main.c:</p>

<pre><code>#include &lt;stdio.h&gt;

extern long tes(long);

int main() {
    printf(""%ld"", tes(5));
    printf(""Hello, World!\n"");
    return 0;
}
</code></pre>

<p>tes.asm:</p>

<pre><code>.text:

.global tes

tes:
    mov rax, edi
    ret
</code></pre>

<p>CMakeLists.txt:</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(Testt C)
enable_language(C ASM)

set(CMAKE_C_STANDARD 99)

set ( SOURCES 
        main.c 
        tes.asm)

add_executable(program  ${SOURCES} )
</code></pre>

<p>How do I configure <code>CLion</code> so as to use <code>tes</code> as a method in <code>C</code>? I'm expecting <code>tes(x) = x</code>, but somehow, my project doesn't compile:</p>

<pre><code> ====================[ Build | program | Debug ]=================================
/snap/clion/99/bin/cmake/linux/bin/cmake --build /home/user/CLionProjects/Testt/cmake-build-debug --target program -- -j 4
make: *** No rule to make target 'program'.  Stop.
</code></pre>

<p>Any help is appreciated!</p>
","","","1","998","1","6","","2019-12-30 00:26:26","2020-01-01 13:43:08","2020-01-01 13:43:08",""
"57175380","How to make CLion auto format C++ code with Google code style, and pass the google cpplint check","<c++><clion>","<p>I need to auto format my C++ code with google code style, and pass the cpplint check.</p>

<p>I have used  +  + L to auto format my code in CLion, but the code after format still not follow the google code style.</p>

<p>And I installed the CLion-cpplint plugin, this plugin only tell me where it does not follow the style. But I need a tool to auto format it.</p>

<p>Thanks.</p>
","","","1","1410","1","0","","2019-07-24 04:40:43","","2019-07-25 10:31:55",""
"57681780","CLion: permanent language injections based on raw string literal?","<c++><intellij-idea><clion>","<p>Given a raw string literal like:</p>

<pre><code>const string&amp; myproto = R""prototext(
    notification_target: FOO
    notification_type: 99
prototext)prototext"";
</code></pre>

<p>Can I configure CLion to always inject the <code>prototext</code> lang into raw strings beginning with ""prototext""?</p>

<p>I know I can do it temporarily via the lightbulb:</p>

<p><a href=""https://i.stack.imgur.com/wJpv3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wJpv3.png"" alt=""enter image description here""></a></p>

<p>But I can't figure out how to do it via the settings:</p>

<p><a href=""https://i.stack.imgur.com/b4un8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/b4un8.png"" alt=""enter image description here""></a></p>

<p>I think PhpStorm/WebStorm can do it for JS tagged template strings, so I don't see why we can't do it for C++ raw strings.</p>
","<p>Currently it's not possible. Feel free to create a feature request in CLion's tracker: <a href=""https://youtrack.jetbrains.com/issues/CPP"" rel=""nofollow noreferrer"">https://youtrack.jetbrains.com/issues/CPP</a>.</p>
","57691609","2","174","1","0","","2019-08-27 20:24:34","","2019-08-28 11:41:52",""
"58360707","How include ASIO C++ in CLion?","<c++><cmake><clion><asio>","<p>I used different options, but all of them didn't work:</p>

<p>1) CMake:</p>

<pre><code>cmake_minimum_required(VERSION 3.14)
project(Client)

set(CMAKE_CXX_STANDARD 17)

include(FetchContent)

FetchContent_Declare(
        asio
        GIT_REPOSITORY https://github.com/chriskohlhoff/asio
        GIT_TAG asio-1-14-0
        UPDATE_DISCONNECTED 1
)

FetchContent_Populate(asio)
include_directories(${asio_SOURCE_DIR}/asio/include/)

add_executable(${PROJECT_NAME} main.cpp)
</code></pre>

<p>main.cpp:</p>

<pre><code>#define  ASIO_STANDALONE
#include &lt;iostream&gt;
#include ""asio.hpp""

int main(){std::cout&lt;&lt;""Hello, World!""&lt;&lt;std::endl;return 0;}
</code></pre>

<p>Error:</p>

<pre><code>CMakeFiles\Client.dir/objects.a(main.cpp.obj): In function `ZN4asio6detail17winsock_init_base7startupERNS1_4dataEhh':
C:/Users/Danila/Documents/Programming/C++/Client/cmake-build-debug/_deps/asio-src/asio/include/asio/detail/impl/winsock_init.ipp:38: undefined reference to `_imp__WSAStartup@8'
CMakeFiles\Client.dir/objects.a(main.cpp.obj): In function `ZN4asio6detail17winsock_init_base7cleanupERNS1_4dataE':
C:/Users/Danila/Documents/Programming/C++/Client/cmake-build-debug/_deps/asio-src/asio/include/asio/detail/impl/winsock_init.ipp:55: undefined reference to `_imp__WSACleanup@0'
collect2.exe: error: ld returned 1 exit status
mingw32-make.exe[3]: *** [Client.exe] Error 1
</code></pre>

<p>2) Download ASIO in project.</p>

<p>CMake:</p>

<pre><code>cmake_minimum_required(VERSION 3.14)
project(Client)

set(CMAKE_CXX_STANDARD 17)

include(FetchContent)

add_executable(${PROJECT_NAME} main.cpp)
</code></pre>

<p>main.cpp</p>

<pre><code>#define  ASIO_STANDALONE
#include &lt;iostream&gt;
#include ""asio-master/asio/include/asio.hpp""

int main(){std::cout&lt;&lt;""Hello, World!""&lt;&lt;std::endl;return 0;}
</code></pre>

<p>Error:</p>

<pre><code>In file included from C:\Users\Danila\Documents\Programming\C++\Client\asio-master/asio/include/asio.hpp:18:0,
                     from C:\Users\Danila\Documents\Programming\C++\Client\main.cpp:3:
    C:\Users\Danila\Documents\Programming\C++\Client\asio-master/asio/include/asio/associated_allocator.hpp:18:34: fatal error: asio/detail/config.hpp: No such file or directory
    compilation terminated.
    CMakeFiles\Client.dir\build.make:61: recipe for target 'CMakeFiles/Client.dir/main.cpp.obj' failed
    mingw32-make.exe[3]: *** [CMakeFiles/Client.dir/main.cpp.obj] Error 1
</code></pre>

<p>What I do wrong?</p>

<p>Also, I tried to install and include asio through boost, but it doesn't work too.</p>
","<p>The first method is working. But in windows for mingw need to add <code>link_libraries(ws2_32 wsock32)</code> after <code>include_directories(${asio_SOURCE_DIR}/asio/include/)</code>.
In linux need add:<code>SET(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -DASIO_STANDALONE -pthread"")</code>.</p>
","58365352","1","662","1","0","","2019-10-13 04:56:20","","2019-10-17 05:37:32",""
"58404168","How can I set up OpenCV on Clion for mac?","<c++><macos><opencv><clion>","<p>I cannot for the life of me add OpenCV to clion for mac and it driving me crazy. I looked at every resource available online and there is almost no documentation for setting it up on clion.</p>

<p>Any help or tips would be much appreciated!</p>

<p>Thank you :)</p>
","","","1","313","1","0","","2019-10-16 00:26:00","","2021-03-25 00:29:27",""
"58577196","Import hierarchy of Visual Studio project to CLion","<c++><visual-studio><clion>","<p>I want to import many (100+ file) VS projects to CLion.<br>
My main difficulty is to import all <strong>Filter</strong> information.</p>

<p>Here is an example.  I have a <code>projectTest</code>.<br>
The project contains <code>NewFilter1\NewFilter2\lalala.cpp</code>.</p>

<p><a href=""https://i.stack.imgur.com/dvtjV.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/dvtjV.png"" alt=""enter image description here""></a></p>

<p>Filter in VS is like a virtual directory.<br>
The <code>lalala.cpp</code> is still in project directory e.g. <code>C:\projectTest</code>, not <code>C:\NewFilter1\NewFilter2</code>.<br>
The filter information is stored in <code>*.filter</code> as.</p>

<pre><code>&lt;Filter Include=""NewFilter1\NewFilter2""&gt;
&lt;UniqueIdentifier&gt;{147f0a04-1541-be34-301a-5810a0d02301}&lt;/UniqueIdentifier&lt;/Filter&gt; 
...
&lt;ClCompile Include=""lalala.cpp""&gt; &lt;Filter&gt;NewFilter1\NewFilter2&lt;/Filter&gt; &lt;/ClCompile&gt;
</code></pre>

<p>How to import this information to CLion?</p>
","","","6","4786","0","5","","2019-10-27 06:56:21","2019-10-27 08:54:13","2021-04-09 12:30:52",""
"58818529","Math library linking error in CLion on Linux","<c><gcc><cmake><linker-errors><clion>","<p>To do my homework I need <code>#include ""math.h""</code>, but after updating GCC and CMake, CLion  can't link my project files. What should I do to fix this problem?</p>

<p>In <code>Settings -> Build, Execution and Deployment -> Toolchains</code> CLion says that CMake version is <code>3.15.3</code> and GDB version is <code>8.3</code> and it's OK.
I already tired to reinstall GCC, CMake and CLion, but it didn't work. Also I tired to search  some info  on StackOverflow, but still nothing works.</p>

<p>Main.c:</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
int main() {
    FILE *output;
    output = fopen(""/home/vadimsam/CLionProjects/untitled/data.txt"", ""w"");

    double x=0.,v=0.,t=0.,m=0.,k=0.,dt = 1e-5,xn,vn;

    while (t &lt; 1e1) {
        vn = -x*sqrt((k/m))*cos(sqrt((k/m))*t)+v*cos(sqrt((k/m))*t);
        xn = -x*cos(sqrt((k/m))*t)+(v/sqrt((k/m)))*sin(sqrt((k/m))*t);
        t += dt; x = xn; v = vn;
        fprintf(output, ""%lf %lf %lf\n"", t, x, v);
    }
    fclose(output);
    return 0;
}
</code></pre>

<p>CMakeLists.txt:</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(untitled2 C)
set(CMAKE_C_STANDARD 11)
add_executable(untitled2 main.c)
</code></pre>

<p>Compiler output:</p>

<pre><code>====================[ Build | untitled2 | Debug ]===============================
/home/vadimsam/.local/share/JetBrains/Toolbox/apps/CLion/ch-0/193.5096.27/bin/cmake/linux/bin/cmake --build /home/vadimsam/CLionProjects/untitled2/cmake-build-debug --target untitled2 -- -j 8
Scanning dependencies of target untitled2
[ 50%] Building C object CMakeFiles/untitled2.dir/main.c.o
[100%] Linking C executable untitled2
CMakeFiles/untitled2.dir/main.c.o: In function `main':
/home/vadimsam/CLionProjects/untitled2/main.c:10: undefined reference to `sqrt'
/home/vadimsam/CLionProjects/untitled2/main.c:10: undefined reference to `sqrt'
/home/vadimsam/CLionProjects/untitled2/main.c:10: undefined reference to `cos'
/home/vadimsam/CLionProjects/untitled2/main.c:10: undefined reference to `sqrt'
/home/vadimsam/CLionProjects/untitled2/main.c:10: undefined reference to `cos'
/home/vadimsam/CLionProjects/untitled2/main.c:11: undefined reference to `sqrt'
/home/vadimsam/CLionProjects/untitled2/main.c:11: undefined reference to `cos'
/home/vadimsam/CLionProjects/untitled2/main.c:11: undefined reference to `sqrt'
/home/vadimsam/CLionProjects/untitled2/main.c:11: undefined reference to `sqrt'
/home/vadimsam/CLionProjects/untitled2/main.c:11: undefined reference to `sin'
collect2: error: ld returned 1 exit status
CMakeFiles/untitled2.dir/build.make:83: recipe for target 'untitled2' failed
make[3]: *** [untitled2] Error 1
CMakeFiles/Makefile2:75: recipe for target 'CMakeFiles/untitled2.dir/all' failed
make[2]: *** [CMakeFiles/untitled2.dir/all] Error 2
CMakeFiles/Makefile2:82: recipe for target 'CMakeFiles/untitled2.dir/rule' failed
make[1]: *** [CMakeFiles/untitled2.dir/rule] Error 2
Makefile:118: recipe for target 'untitled2' failed
make: *** [untitled2] Error 2

</code></pre>

<p>I need to compile my project.</p>
","<p>The math library is usually linked as a separate library (conveniently named <code>m</code>) that you explicitly need to link with.</p>

<p>You tell CLion (through its <code>CMakeLists.txt</code> file) to link with libraries with the <a href=""https://cmake.org/cmake/help/latest/command/target_link_libraries.html"" rel=""nofollow noreferrer""><code>target_link_libraries</code></a> command:</p>

<pre><code>target_link_libraries(untitled2 m)
</code></pre>
","58818622","1","2098","1","0","","2019-11-12 12:14:09","","2019-11-12 12:19:23","2019-11-12 14:16:14"
"58824275","How to step through ispc source files in Visual Studio or CLion debugger?","<c++><visual-studio><debugging><debug-symbols><ispc>","<p>I'm getting started with <a href=""https://ispc.github.io/"" rel=""nofollow noreferrer"">ispc</a> (Intel SPMD Program Compiler), and I'm able to compile and run the examples provided with the distribution. What I'd like to do next is to be able to step through an <code>.ispc</code> file inside the Visual Studio (or CLion) debugger.</p>

<p>According to <a href=""https://ispc.github.io/ispc.html#debugging"" rel=""nofollow noreferrer"">the documentation</a>, the <code>ispc</code> compiler can be instructed to emit debugging symbols with the <code>-g</code> option. I've added that to the provided <code>CMakeLists.txt</code>, but I can't seem to get Visual Studio to actually step into an ispc function. </p>

<p>For example, I set a breakpoint in the <code>simple</code> example here: <a href=""https://github.com/ispc/ispc/blob/master/examples/simple/simple.cpp#L49"" rel=""nofollow noreferrer"">https://github.com/ispc/ispc/blob/master/examples/simple/simple.cpp#L49</a></p>

<p>When clicking ""step into"", I'd expect Visual Studio to step into the definition of that function, here: <a href=""https://github.com/ispc/ispc/blob/master/examples/simple/simple.ispc#L35"" rel=""nofollow noreferrer"">https://github.com/ispc/ispc/blob/master/examples/simple/simple.ispc#L35</a>. Instead, Visual Studio steps over and continues on with <code>simple.cpp</code>. </p>

<p>I suspect that Visual Studio either can't locate the debugging symbols generated by the <code>ispc</code> compiler, and/or doesn't know that those symbols are associated with the <code>simple.ispc</code> file.</p>

<p>I found <a href=""http://richg42.blogspot.com/2018/04/a-few-intels-spmd-compiler-ispc-cc.html"" rel=""nofollow noreferrer"">this blog post</a> from last year which says, among other things:</p>

<blockquote>
  <p>The latest version of ispc (1.9.2) supports limited debugging with Visual Studio. Examining struct's with bool's doesn't seem to work, the locals window is very iffy but more or less works. Single stepping works. Profiling works but seems a little iffy.</p>
</blockquote>

<p>So it seems clear that this is possible; I just don't know enough about how compilers, debuggers, and IDEs interact to make this happen. Does anyone know how to accomplish this?</p>

<p>Running Windows 10 (v1903) with Visual Studio 2017 (v15.9.17)</p>

<pre><code>$ ispc --version
Intel(r) SPMD Program Compiler (ispc), 1.12.0 (build date Aug 15 2019, LLVM 8.0.0)
Supported Visual Studio versions: Visual Studio 2015 and later.
</code></pre>
","","","1","548","1","0","","2019-11-12 18:03:03","2019-11-12 19:28:31","2019-11-14 13:02:15",""
"58829992","Cannot Open .png file with CImg on CLion (macOS)","<c++><macos><png><clion><cimg>","<p>I've tried including libpng16/png.h and #define cimg_use_png, but none of them solved the error. Also, I have main.cpp, lenna.jpg and CImg.h in the same directory.</p>

<p>CMakeLists.txt:</p>

<pre><code>cmake_minimum_required(VERSION 3.6)
project(HelloWorld)

set(CMAKE_CXX_STANDARD 17)

set(SOURCE_FILES main.cpp)
add_executable(HelloWorld ${SOURCE_FILES})

set(YOU_NEED_X11 1)
set(YOU_NEED_PNG 1)

if (${YOU_NEED_PNG} EQUAL 1)
    message(STATUS ""Looking for libpng..."")
    find_package(PNG REQUIRED)
    include_directories(${PNG_INCLUDE_DIR})
    target_link_libraries (HelloWorld ${PNG_LIBRARY})
    target_compile_definitions(HelloWorld PRIVATE cimg_use_png=1)
endif()

if (${YOU_NEED_X11} EQUAL 1)
    message(STATUS ""Looking for X11..."")
    find_package(X11 REQUIRED)
    include_directories(${X11_INCLUDE_DIR})
    target_link_libraries(HelloWorld ${X11_LIBRARIES})
else()
    target_compile_definitions(HelloWorld PRIVATE cimg_display=0)
endif()
</code></pre>

<p>main.cpp:</p>

<pre><code>#include &lt;iostream&gt;
#include ""CImg.h""

using namespace cimg_library;

int main() {

    CImg&lt;unsigned char&gt; img(""lenna.png"");

    int h = img.height();
    int w = img.width();
    int s = img.spectrum();

    std::cout &lt;&lt; ""h: "" &lt;&lt; h &lt;&lt; "" w: "" &lt;&lt; w &lt;&lt; "" s: "" &lt;&lt; s &lt;&lt; std::endl;

    return 0;
}
</code></pre>

<p>The error:</p>

<pre><code>[CImg] *** CImgIOException *** [instance(0,0,0,0,0x0,non-shared)] CImg&lt;unsigned char&gt;::load(): Failed to open file 'lenna.png'.
libc++abi.dylib: terminating with uncaught exception of type cimg_library::CImgIOException: [instance(0,0,0,0,0x0,non-shared)] CImg&lt;unsigned char&gt;::load(): Failed to open file 'lenna.png'.

Process finished with exit code 6
</code></pre>
","","","2","294","1","8","","2019-11-13 03:40:55","","2019-11-13 05:23:25",""
"59070673","Program received Segmentation fault while debug in CLion","<c++><debugging><segmentation-fault><clion>","<p>I have the challenge to implement simplex-method (or simplex algorithm). Simplex-method is a popular algorithm for linear programming which is based on rebuilding matrices. My program should return an optimal solution. I have a C++ project in Clion. It works correctly when I run the program, but during the debug I get a SIGSEGV Signal (Segmentation Fault) in one of the methods. It happens when I try to allocate memory for the matrix. Here is the part of code:   </p>

<pre><code>double **newTable;
    newTable = new double *[rows];
    for (int i = 0; i &lt; rows; ++i) {
        for (int j = 0; j &lt; cols; ++j) {
            newTable[i] = new double [cols];
        }
    }
</code></pre>

<p>I free the memory at the end of the method using delete[], but it doesn’t work. 
I’ve already tried to run the program in another IDE (CodeBlocks), but it works properly too, and I have no idea why it happens and where the problem occurs. </p>
","<p>No need for this nested loop. You only need one loop to allocate memory for this jagged array:</p>

<pre><code>int main() {
    int rows = 5, cols = 10;
    double **newTable;
    newTable = new double *[rows];
    for (int i = 0; i &lt; rows; ++i) 
        newTable[i] = new double[cols];

    for (int i = 0; i &lt; rows; ++i)
        delete newTable[i];
    delete newTable;
}
</code></pre>

<p>The way your code is now it will leak memory, but that alone won't cause a segmentation fault. There might be a mistake with how you're freeing the memory, too.</p>

<hr>

<p>Also, since this is C++, may I recommend using <code>std::vector</code> instead?</p>

<pre><code>#include &lt;vector&gt;
int main() {
    std::vector&lt;std::vector&lt;double&gt;&gt; newTable(5, std::vector&lt;double&gt;(10));
}
</code></pre>
","59070737","1","2994","1","3","","2019-11-27 12:51:29","2019-11-27 14:36:53","2019-11-27 14:36:53",""
"59309045","C Program behaves differently if compiled using CLion rather than using gcc directly. Why?","<c><gcc><clion>","<p>I'm writing a program to play 4 in a row using C90.</p>

<p>I made a UI for the Console using ASCII characters.</p>

<p>If I compile the program using C Lion I get the following output:</p>

<p><a href=""https://i.stack.imgur.com/oC7Cb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oC7Cb.png"" alt=""Screenshot C Lion Output""></a></p>

<p>If I compile it using gcc main.c and then run ./a.out I get the following result:</p>

<p><a href=""https://i.stack.imgur.com/AHt2k.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AHt2k.png"" alt=""Screenshot Terminal Output""></a></p>

<p>So obviously this dot character is sized differently if I compile it using gcc directly.</p>

<p>Has anyone any idea how this could possibly happen?</p>

<p>The code that is responsible for printing the game lines looks like this:</p>

<pre><code>void printGameLine(int line[7]) {
    int i;
    printf(""┃"");
    for (i = 0; i &lt; 7; ++i) {
        printColor(line[i]);
        line[i] == 0 ? printf(""    "") : printf("" ⬤ "");
        printColor(0);
        printf(""┃"");
    }
    printf(""\n"");
}
</code></pre>

<p>The code responsible for the colors looks like this: (If this makes any difference)</p>

<pre><code>/**
 * prints the color
 * @param player -1 First player, 0 neutral, 1 Second Player
 */
void printColor(int player) {
    switch (player) {
        case 1:
            printf(""\033[0;31m""); /*red*/
            break;
        case -1:
            printf(""\033[0;33m"");/*yellow*/
            break;
        default:
            printf(""\033[0m"");/*neutral*/
            break;
    }
}
</code></pre>
","","","3","195","1","15","","2019-12-12 16:34:28","2019-12-12 17:24:43","2020-12-02 14:43:10",""
"54495864","Clion unable to find project executable when using valgrind with CLion on windows","<c><windows><valgrind><clion>","<p>I'm trying to use valgrind with clion in my windows machine. I've gone through the steps of <a href=""https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-clion.html"" rel=""nofollow noreferrer"">setting up WSL</a> and <a href=""https://www.jetbrains.com/help/clion/memory-profiling-with-valgrind.html"" rel=""nofollow noreferrer"">valgrind</a> on windows. 
Although when I try to 'run with valgrind memcheck' in my 'UnixAssembler' project I get the following error:</p>

<p><code>Error running 'UnixAssembler': File not found: /cygdrive/c/Users/natan/Desktop/UnixAssembler/cmake-build-debug/UnixAssembler.exe</code></p>

<p>The actual exe is located in <code>c/Users/natan/Desktop/UnixAssembler/cmake-build-debug/UnixAssembler.exe</code>, so I don't know why It's looking in this <code>cygdrive</code> folder. </p>

<p>I'm not sure what to try from here onwards. Any ideas?</p>
","<p>Solved:<br>
- Go to <strong>File -> Settings -> Build, Execution, Deployment</strong><br>
- Remove any Toolchains other than WSL (making WSL the default will probably work as well)<br>
- Profit</p>
","54498552","2","1841","1","0","","2019-02-02 17:58:29","","2019-02-02 23:32:08",""
"54538020","What is the correct way to include llvm library in CLion?","<c++><cmake><clion><llvm-ir>","<p>I recently installed LLVM 7, and tried to include the necessary files to start a project using llvm library in CLion. 
However, it complains that some files are not found.</p>

<p>My CMakeLists.txt file has the following: </p>

<pre><code>cmake_minimum_required(VERSION 3.12)
project(TestCmake)
set(CMAKE_CXX_STANDARD 11)

link_directories(llvm/build/include/) # linked wrongly..
include_directories(llvm/llvm/include/) #linked wrongly.

set(BUILD_2 main_2)
set(SOURCE_FILES_2
        # testing. llvm files.
        tests/codegen_tests/fac.cpp
)

add_executable(${BUILD_2} ${SOURCE_FILES_2})
</code></pre>

<p>I know the way am linking is wrong, but I don't know how to fix it.
I let it like this, because CLion can find the defined libraries (so I can see when I call functions of the libraries that don't exist, and if it's available I get a pop-up). </p>

<p>Am currently getting the following error when I run the project: </p>

<pre><code>   In file included from c4/llvm/llvm/include/llvm/IR/Module.h:23:0,
                 from c4/tests/codegen_tests/fac.cpp:1:
c4/llvm/llvm/include/llvm/IR/Attributes.h:74:38: fatal error: llvm/IR/Attributes.inc: No such file or directory
compilation terminated.
CMakeFiles/main_2.dir/build.make:62: recipe for target 'CMakeFiles/main_2.dir/tests/codegen_tests/fac.cpp.o' failed
make[3]: *** [CMakeFiles/main_2.dir/tests/codegen_tests/fac.cpp.o] Error 1
CMakeFiles/Makefile2:109: recipe for target 'CMakeFiles/main_2.dir/all' failed
make[2]: *** [CMakeFiles/main_2.dir/all] Error 2
CMakeFiles/Makefile2:121: recipe for target 'CMakeFiles/main_2.dir/rule' failed
make[1]: *** [CMakeFiles/main_2.dir/rule] Error 2
Makefile:153: recipe for target 'main_2' failed
make: *** [main_2] Error 2
</code></pre>

<p>The project structure is shown here <a href=""https://i.stack.imgur.com/wVjHS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wVjHS.png"" alt=""Project Structure""></a></p>

<p>Any help on this, is greatly appreciated. Thanks.</p>
","","","2","1408","1","4","","2019-02-05 15:40:54","","2020-04-05 17:34:22",""
"59567758","CLion says 'Process finished with exit code 127'","<c><cmake><compilation><clion>","<p>So I am running a sample c code Hello World project that appears when you make a new c project:</p>

<p><code>main.c</code>:</p>

<pre><code>#include &lt;stdio.h&gt;

int main() {
    printf(""Hello, World!\n"");
    return 0;
}
</code></pre>

<p><code>CMakeLists.txt:</code></p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(untitled1 C)
set(CMAKE_C_STANDARD 99) 
add_library(untitled1 library.c library.h main.c)
</code></pre>

<p>When I press Run, earlier it was giving me ""error 12, permission denied"" so I modified the file permissions. Now I am getting the following in the Run window:</p>

<pre><code>/Users/alan/CLionProjects/untitled1/library.c

Process finished with exit code 127
</code></pre>

<p>I googled but cant seem to find any solution. </p>

<p>The following is the image of the preferences:</p>

<p><a href=""https://i.stack.imgur.com/PDoLE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PDoLE.png"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/sa7Lf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sa7Lf.png"" alt=""enter image description here""></a></p>
","<p>You are trying to run a library. Modifying file permissions by hand is not the way to make it work, you could as well try running an arbitrary random file.</p>

<p>In order to make an executable, you need to use <a href=""https://cmake.org/cmake/help/latest/command/add_executable.html"" rel=""nofollow noreferrer""><code>add_executable</code></a>.</p>

<p>What you are running is not called an object file. I recommend reading some introduction like <a href=""https://medium.com/@meghamohan/everything-you-need-to-know-about-libraries-in-c-e8ad6138cbb4"" rel=""nofollow noreferrer"">this one</a>.</p>

<p>Also, if you want to create a library and link against it, you need to describe it with <code>add_library</code> using <code>library.c</code>, and then an executable with <code>add_executable</code> using <code>main.c</code>. Then link the executable to the library with <a href=""https://cmake.org/cmake/help/latest/command/target_link_libraries.html"" rel=""nofollow noreferrer""><code>target_link_libraries</code></a>. Here's a <a href=""http://derekmolloy.ie/hello-world-introductions-to-cmake/"" rel=""nofollow noreferrer"">CMake tutorial</a> that may help.</p>
","59596618","1","5662","1","17","","2020-01-02 17:49:32","2020-01-05 02:47:49","2020-01-05 02:58:32",""
"54776607","Is there a way to import color schemes from JetBrains CLion into Android Studio?","<android-studio><clion>","<p>I have and am fond of the color schemes in JetBrains CLion, but noticed that Android Studio doesn't have many of them (Default and Darcula)</p>

<p>Is there a way to import color schemes from CLion into Android Studio?</p>
","<p>Export in <code>Settings -&gt; Editor -&gt; Color Scheme -&gt; Export</code>, Import from <code>Settings -&gt; Editor -&gt; Color Scheme -&gt; Import Scheme</code>.</p>

<p>However, I want to know if you have forgotten to install the <a href=""https://plugins.jetbrains.com/plugin/8006-material-theme-ui"" rel=""nofollow noreferrer"">Material Theme UI</a> plugin in your Android Studio?</p>
","54777999","1","308","1","0","","2019-02-19 23:40:33","","2019-02-20 02:35:29",""
"59631551","Cmake (Clion) cant link QT5 UiTools","<qt><cmake><qt5><clion>","<p>I have a cmake file for various dummy Qt5 applications.</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(Qt_demo)

set(CMAKE_CXX_STANDARD 17)

# Tell cmake where Qt is located
set(Qt5_DIR ""~/Code/Cpp/Qt/5.12.6/gcc_64/lib/cmake/Qt5"")

#enable mocking compiler
set(CMAKE_AUTOMOC ON)

#enable ui compiler
set(CMAKE_AUTOUIC ON)

#enable resources
set(CMAKE_AUTORCC ON)


# Tell cmake to find the modules Qt5Core and Qt5widgets
find_package(Qt5 COMPONENTS Core Widgets UiTools REQUIRED)

get_target_property(QtUiTools_location Qt5::UiTools LOCATION)

message(""${QtUiTools_location}"")


add_executable(screenshot_demo screenshot/screenshot_main.cpp screenshot/screenshot.cpp)
# Link the library to the executable
target_link_libraries(screenshot_demo Qt5::Core Qt5::Widgets)

qt5_add_resources(RC_SRC ""application/application.qrc"")
add_executable(application_demo application/main.cpp application/mainwindow.cpp ${RC_SRC})
qt5_use_modules(application_demo Core Widgets)

qt5_add_resources(CALC_RC_SRC ""calculator_builder/calculatorbuilder.qrc"")
add_executable(calculator_builder_demo calculator_builder/main.cpp calculator_builder/calculatorbuilder.cpp ${CALC_RC_SRC})
target_link_libraries(calculator_builder_demo Qt5::UiTools Qt5::Core Qt5::Widgets )
</code></pre>

<p>Furthermore I added the Qt5 desinger as an external tool in clion as per <a href=""https://creekorful.me/setup-qt-with-clion-easily/"" rel=""nofollow noreferrer"">setup</a></p>

<p>The first two projects compile and run just fine. However in the last project (calculator builder) I am trying to use UITools which is a Qt5 Addon. When I hit the compile button I get the following error:</p>

<pre><code>[ 28%] Linking CXX executable calculator_builder_demo
/home/marc/Code/Cpp/Qt/5.12.6/gcc_64/lib/libQt5UiTools.a(properties.o): In function `QFormInternal::variantToDomProperty(QFormInternal::QAbstractFormBuilder*, QMetaObject const*, QString const&amp;, QVariant const&amp;)':
/home/qt/work/qt/qttools/src/designer/src/uitools/../lib/uilib/properties.cpp:594: undefined reference to `QString::arg(QLatin1String, int, QChar) const'
/home/marc/Code/Cpp/Qt/5.12.6/gcc_64/lib/libQt5UiTools.a(formbuilderextra.o): In function `QFormInternal::QFormBuilderExtra::readUi(QIODevice*)':
/home/qt/work/qt/qttools/src/designer/src/uitools/../lib/uilib/formbuilderextra.cpp:145: undefined reference to `QVersionNumber::fromString(QStringView, int*)'
/home/qt/work/qt/qttools/src/designer/src/uitools/../lib/uilib/formbuilderextra.cpp:150: undefined reference to `QString::arg(QStringView, int, QChar) const'
collect2: error: ld returned 1 exit status
CMakeFiles/calculator_builder_demo.dir/build.make:137: recipe for target 'calculator_builder_demo' failed
make[3]: *** [calculator_builder_demo] Error 1
CMakeFiles/Makefile2:82: recipe for target 'CMakeFiles/calculator_builder_demo.dir/all' failed
make[2]: *** [CMakeFiles/calculator_builder_demo.dir/all] Error 2
CMakeFiles/Makefile2:89: recipe for target 'CMakeFiles/calculator_builder_demo.dir/rule' failed
make[1]: *** [CMakeFiles/calculator_builder_demo.dir/rule] Error 2
Makefile:118: recipe for target 'calculator_builder_demo' failed
make: *** [calculator_builder_demo] Error 2
</code></pre>

<p>I am totally lost. Any help would be greatly appreciated</p>
","","","1","197","0","0","","2020-01-07 15:39:37","2020-01-07 15:54:55","2020-01-07 15:54:55",""
"59794643","Problem with including Eigen library in Clion CMake","<c++><linux><cmake><eigen>","<p>I have a problem with the Eigen library. I use Clion on Linux and my project can't find the Eigen library (I have it in a folder on my desktop).</p>

<p>I have CMake in two configurations:</p>

<p>First:</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(TestFEM)

set(CMAKE_CXX_STANDARD 17)

set(EIGEN_DIR ""~/Desktop/eigen-3.3.7"")
include_directories(${EIGEN_DIR})

add_executable(TestFEM main.cpp FEM/FEM.cpp FEM/FEM.h)
</code></pre>

<p>And second:</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(TestFEM)

set(CMAKE_CXX_STANDARD 17)

list(APPEND CMAKE_MODULE_PATH ""${CMAKE_CURRENT_SOURCE_DIR}"")
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})

add_executable(TestFEM main.cpp FEM/FEM.cpp FEM/FEM.h)
</code></pre>

<p>All the time, I have an error like this: </p>

<pre><code>fatal error: Eigen\Dense: No such file or directory
</code></pre>

<p>How can I fix it?</p>
","<p>First, try using the <strong>full</strong> path to the Eigen directory (without <code>~</code>). </p>

<pre><code>set(EIGEN_DIR ""/home/xxxx/Desktop/eigen-3.3.7"")
include_directories(${EIGEN_DIR})
</code></pre>

<p>Also, check to be sure that path actually contains <code>Eigen/Dense</code>, so the full file path would be:</p>

<pre><code>/home/xxxx/Desktop/eigen-3.3.7/Eigen/Dense
</code></pre>

<p>A better approach would be to use CMake to <strong>verify</strong> that path exists before using it:</p>

<pre><code>set(EIGEN_DIR ""/home/xxxx/Desktop/eigen-3.3.7"")
if(NOT EXISTS ${EIGEN_DIR})
    message(FATAL_ERROR ""Please check that the set Eigen directory is valid!"")
endif()
include_directories(${EIGEN_DIR})
</code></pre>

<p>But you can be even more safe by verifying you are in the correct location <em>within</em> the Eigen repository by using <a href=""https://cmake.org/cmake/help/v3.16/command/find_path.html"" rel=""nofollow noreferrer""><code>find_path()</code></a>. The Eigen repository has a dummy file <code>signature_of_eigen3_matrix_library</code> that you can use to verify you indeed found Eigen's top-level directory. Just use the <code>PATHS</code> clause to tell CMake where to look:</p>

<pre><code>find_path(EIGEN_DIR NAMES signature_of_eigen3_matrix_library
    PATHS
    /home/xxxx/Desktop/eigen-3.3.7
    PATH_SUFFIXES eigen3 eigen
)
include_directories(${EIGEN_DIR})
</code></pre>
","59794905","2","822","1","0","2","2020-01-17 20:46:27","2020-01-17 22:17:28","2020-01-17 22:17:28",""
"59957140","CLion Linker Error with Standard Library and GCC","<c++><gcc><compiler-errors><clion><undefined-symbol>","<p>I am taking a class which requires the use of GCC as the compiler. I am trying to ensure CLion is using GCC, but I no matter what I do I keep getting the following error upon trying to run my file: </p>

<pre><code>Scanning dependencies of target Sandbox
[ 50%] Building CXX object CMakeFiles/Sandbox.dir/main.cpp.o
[100%] Linking CXX executable Sandbox
Undefined symbols for architecture x86_64:
  ""std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::operator&lt;&lt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; (*)(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;))"", referenced from:
      printSquare(double) in main.cpp.o
  ""std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::operator&lt;&lt;(double)"", referenced from:
      printSquare(double) in main.cpp.o
  ""std::ios_base::Init::Init()"", referenced from:
      __static_initialization_and_destruction_0(int, int) in main.cpp.o
  ""std::ios_base::Init::~Init()"", referenced from:
      __static_initialization_and_destruction_0(int, int) in main.cpp.o
  ""std::cout"", referenced from:
      printSquare(double) in main.cpp.o
  ""std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::endl&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;)"", referenced from:
      printSquare(double) in main.cpp.o
  ""std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*)"", referenced from:
      printSquare(double) in main.cpp.o
ld: symbol(s) not found for architecture x86_64
collect2: error: ld returned 1 exit status
make[3]: *** [Sandbox] Error 1
make[2]: *** [CMakeFiles/Sandbox.dir/all] Error 2
make[1]: *** [CMakeFiles/Sandbox.dir/rule] Error 2
make: *** [Sandbox] Error 2
</code></pre>

<p>Here is my very simple main.cpp file I have been using to test GCC:</p>

<pre><code>#include &lt;iostream&gt;

using namespace std;

double square(double x) {
    return x * x;
}

void printSquare(double x) {
    cout &lt;&lt; ""The square of "" &lt;&lt; x &lt;&lt; "" is "" &lt;&lt; square(x) &lt;&lt; endl;
}

int main() {
    printSquare(10.9);
}
</code></pre>

<p>as well as my CMakeLists.txt file:</p>

<pre><code>project(Sandbox)

set(CMAKE_CXX_STANDARD 14)

add_executable(Sandbox main.cpp)
</code></pre>

<p>In preferences, under Build, Execution, Deployment | Toolchains | C++ Compiler, the path is <code>/usr/local/bin/gcc-9</code>.</p>

<p>I have tried using Homebrew update and reinstall GCC, and I couldn't find any other questions on the site which had a similar problem. I am running on MacOS Catalina 10.15.2. Thank you for the help.</p>
","","","2","705","1","0","","2020-01-28 21:15:19","","2020-07-25 16:31:53",""
"55131451","Is there a way to run the program (using keyboard shortcut) in the activated tab in PyCharm / IntelliJ / Clion?","<intellij-idea><pycharm><clion>","<p>The current problem is that I have two Tabs. Tab 1 and Tab 2.
When I run the program in tab 1 using the shortcut then it runs the program in Tab 1. 
But when I switch the view to tab 2 and use the shortcut to run the program in tab 2, the last run program, that means the program in tab 1 gets executed.</p>

<p>But this time I wanted to run the program in the current tab.</p>

<p>How do I solve this problem? </p>
","","","1","38","1","0","","2019-03-12 22:15:54","2019-03-13 08:47:43","2019-03-13 08:47:43",""
"55187155","How to prevent CLion from debugging into C++ source files","<clion>","<p>So when I am debugging my program in CLion I use F7 to see where my program travels step by step. But sometimes, the program moves into source files like ""unique_ptr.h"", which I am not interested in seeing. Is there a way to prevent the debugger from inspecting those files? I only want to see my own source code.</p>
","","","1","189","1","2","","2019-03-15 16:42:35","","2019-03-18 16:28:49",""
"60532259","CMake failing to link Boost regex library in Clion","<c++><boost><cmake><ld><clion>","<p>I am trying to get Boost 1.72 release ready to use in my C++ project. OS is Windows 10. I use Clion as an IDE and CMake 3.17 and gcc 8.1.0 as toolchain. I tried to follow lots of different instruction on the web trying to &quot;install&quot; Boost properly, and I ended up with these steps (all italic folders names are valid full-qualified paths):</p>
<ol>
<li><p>Unpack Boost source code, go to <em>boost-sources-dir</em>/tools/build, run bootstrap.bat gcc</p>
</li>
<li><p>Then run b2 install --prefix=&quot;<em>provided-boost-build-folder</em>&quot;</p>
</li>
<li><p>Then add <em>provided-boost-build-folder</em>/bin to PATH variable.</p>
</li>
<li><p>Go back to <em>boost-sources-dir</em> and run b2 --build-dir=&quot;<em>boost-sources-dir</em>\build&quot; --prefix=&quot;<em>boost-install-dir</em>&quot; toolset=gcc install --build-type=complete -j 4</p>
</li>
<li><p>Now I have &quot;include&quot; and &quot;lib&quot; folders in <em>boost-install-dir</em>. I open Clion and add parameters for CMake in Clion settings:</p>
</li>
</ol>
<pre><code>-DBOOST_INCLUDEDIR=&quot;boost-install-dir\include&quot; 
-DBOOST_LIBRARYDIR=&quot;boost-install-dir\lib&quot; 
-DBOOST_ROOT=&quot;boost-install-dir&quot;
</code></pre>
<p>And my CMakeLists.txt is below:</p>
<pre><code>cmake_minimum_required(VERSION 3.14)
project(DBMSProject)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS &quot;--coverage&quot;)

find_package(Boost)
# I also tried to use the line below instead of a line above, but it gave me a strange error
# &quot;Could NOT find Boost (missing: regex) (found version &quot;1.72.0&quot;)&quot;
# find_package(Boost REQUIRED COMPONENTS regex)

include_directories(${Boost_INCLUDE_DIRS})

add_executable(DBMSProject main.cpp /* some other stuff */)
target_link_libraries(DBMSProject -static)
#target_link_libraries(DBMSProject ${Boost_LIBRARIES})  # that didn't work
target_link_libraries(DBMSProject Boost::boost ${Boost_REGEX_LIBRARY})  # neither that does
</code></pre>
<p>Just some sample code in main.cpp to see if compiling and linking work:</p>
<pre><code>/* Other headers */
#include &lt;boost/regex.hpp&gt;
. . .

int main() {
    std::string line;
    boost::regex pat( &quot;^Subject: (Re: |Aw: )*(.*)&quot; );

    while (std::cin)
    {
        std::getline(std::cin, line);
        boost::smatch matches;
        if (boost::regex_match(line, matches, pat))
            std::cout &lt;&lt; matches[2] &lt;&lt; std::endl;
    }
}

</code></pre>
<p>After trying to run this program, it gives lots of link errors:</p>
<pre><code>[100%] Linking CXX executable DBMSProject.exe
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_detail_107200::cpp_regex_traits_char_layer&lt;char&gt;::cpp_regex_traits_char_layer(boost::re_detail_107200::cpp_regex_traits_base&lt;char&gt; const&amp;)':
C:/Users/Documents/Programs/boost/include/boost-1_72/boost/regex/v4/cpp_regex_traits.hpp:370: undefined reference to `boost::re_detail_107200::cpp_regex_traits_char_layer&lt;char&gt;::init()'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_detail_107200::raw_storage::extend(unsigned long long)':
C:/Users/Documents/Programs/boost/include/boost-1_72/boost/regex/v4/regex_raw_buffer.hpp:131: undefined reference to `boost::re_detail_107200::raw_storage::resize(unsigned long long)'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_detail_107200::save_state_init::save_state_init(boost::re_detail_107200::saved_state**, boost::re_detail_107200::saved_state**)':
C:/Users//Douments/Programs/boost/include/boost-1_72/boost/regex/v4/perl_matcher_non_recursive.hpp:110: undefined reference to `boost::re_detail_107200::get_mem_block()'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_detail_107200::save_state_init::~save_state_init()':
C:/Users/Documents/Programs/boost/include/boost-1_72/boost/regex/v4/perl_matcher_non_recursive.hpp:118: undefined reference to `boost::re_detail_107200::put_mem_block(void*)'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_detail_107200::perl_matcher&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;boost::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt;::match_imp()':
C:/Users//ocuments/Programs/boost/include/boost-1_72/boost/regex/v4/perl_matcher_common.hpp:221: undefined reference to `boost::re_detail_107200::verify_options(unsigned int, boost::regex_constants::_match_flags)'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_detail_107200::perl_matcher&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;boost::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt;::unwind_extra_block(bool)':
C:/Users/Documents/Programs/boost/include/boost-1_72/boost/regex/v4/perl_matcher_non_recursive.hpp:1371: undefined reference to `boost::re_detail_107200::put_mem_block(void*)'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `void boost::re_detail_107200::raise_error&lt;boost::regex_traits_wrapper&lt;boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt; &gt;(boost::regex_traits_wrapper&lt;boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt; const&amp;, boost::regex_constants::error_type)':
C:/Users/Documents/Programs/boost/include/boost-1_72/boost/regex/pattern_except.hpp:75: undefined reference to `boost::re_detail_107200::raise_runtime_error(std::runtime_error const&amp;)'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_detail_107200::perl_matcher&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;boost::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt;::extend_stack()':
C:/Users/Documents/Programs/boost/include/boost-1_72/boost/regex/v4/perl_matcher_non_recursive.hpp:236: undefined reference to `boost::re_detail_107200::get_mem_block()'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_detail_107200::basic_regex_parser&lt;char, boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt;::fail(boost::regex_constants::error_type, long long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, long long)':
C:/Users/Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_parser.hpp:241: undefined reference to `boost::regex_error::regex_error(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::regex_constants::error_type, long long)'
C:/Users/Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_parser.hpp:242: undefined reference to `boost::regex_error::raise() const'
C:/Users//Douments/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_parser.hpp:241: undefined reference to `boost::regex_error::~regex_error()'
C:/Users//v4/basic_regex_parser.hpp:241: undefined reference to `boost::regex_error::~regex_error()'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_dtail_107200::basic_regex_creator&lt;char, boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt;::fixup_recursions(boost::re_detail_107200::re_syntax_base*)':
C:/Users//Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_creator.hpp:785: undefined reference to `boost::regex_error::regex_error(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::regex_constants::error_type, long long)'
C:/Users//v4/basic_regex_creator.hpp:785: undefined reference to `boost::regex_error::~regex_error()'
C:/Users//Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_creator.hpp:874: undefined reference to `boost::regex_error::regex_error(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::regex_constants::error_type, long long)'
C:/Users//Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_creator.hpp:875: undefined reference to `boost::/Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_creator.hpp:874: undefined reference to `boost::regex_error::~regex_error()'
C:/Users//Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_creator.hpp:785: undefined reference to `boost::regex_error::~regex_error()'
C:/Users//Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_creator.hpp:874: undefined reference to `boost::regex_error::~regex_error()'
CMakeFiles\DBMSProject.dir/objects.a(main.cpp.obj): In function `boost::re_detail_107200::basic_regex_creator&lt;char, boost::regex_traits&lt;char, boost::cpp_regex_traits&lt;char&gt; &gt; &gt;::create_startmaps(boost::re_detail_107200::re_syntax_base*)':
C:/Users//Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_creator.hpp:940: undefined reference to `boost::regex_error::regex_error(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, boost::regex_constants::error_type, long long)'
C:/Users//Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_creator.hpp:941: undefined reference to `boost::regex_error::raise() const'
C:/Users//Documents/Programs/boost/include/boost-1_72/boost/regex/v4/basic_regex_creator.hpp:940: undefined reference to `boost::re
</code></pre>
<p>But I can clearly see with my eyes the definitions of &quot;absent&quot; symbols in the same .hpp file as where the errors are! What am I doing wrong?</p>
","<p>I finally got it to work. My CMakeLists.txt now looks as follows:</p>

<pre><code>cmake_minimum_required(VERSION 3.14)
project(DBMSProject)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS ""--coverage"")
set(CMAKE_PREFIX_PATH ${BOOST_LIBRARYDIR}\\cmake)

find_package(Boost CONFIG REQUIRED COMPONENTS regex)
include_directories(${Boost_INCLUDE_DIRS})

add_executable(DBMSProject main.cpp /* stuff */)
target_link_libraries(DBMSProject -static)
#target_link_libraries(DBMSProject ${Boost_LIBRARIES}) # haven't tried that but I think it might work as well
target_link_libraries(DBMSProject Boost::regex)
</code></pre>

<p>It also turned out that I don't need -DBOOST... parameters for CMake if I don't use them in CMakeLists.txt, so I excluded -DBOOST_INCLUDEDIR and -DBOOST_ROOT from them.</p>
","60570488","1","1151","1","11","1","2020-03-04 18:09:54","2020-08-27 19:32:13","2020-08-27 19:32:13",""
"60550086","Test a shell (.sh) file in CLion","<c++><powershell><intellij-idea><ide><clion>","<p>I am using Clion and I am unsure how to run a .sh file with my code. It is for an assignment, and I have to run an automatic test to test my code.</p>

<p>This is how it is described to be called: <code>$ ./test_p2.sh 2</code></p>

<p>I have the shell file in the folder with my code, But I cannot see it in executable or working directory.</p>

<p>Any help is appreciated! Thanks</p>
","<p>You can't directly run Linux shell scripts on Windows. You do have a few options, however:</p>

<ol>
<li>Run your script through Cygwin</li>
<li>Run your script in mintty (this is the shell included with Git for Windows, is called <code>Git Bash</code> in the context menu)</li>
<li>Run your script under WSL (<code>Windows Subsystem for Linux</code>)</li>
<li>Port the script to another language you can run on Windows</li>
</ol>

<hr>

<p>For 1 and 2, it'll be on you to make sure any dependencies for the script are available in either Cygwin or mintty.</p>

<p>For 3, after making sure WSL is set up you can run a single command under WSL: <code>wsl script.sh arg1 arg2 argX</code>.</p>

<p>I would recommend option 3 or 4. 3 may offer the best experience in terms of compatibility and ease of set up (without porting the script) as Cygwin and mintty can be a pain to set up dependencies in. Option 4 would be best though as long as you are well-versed in both PowerShell and shell scripts and can transpose the equivalent calls from one to the other.</p>
","60550282","2","215","1","0","","2020-03-05 16:34:39","2020-03-05 16:43:02","2020-03-05 16:54:23",""
"63310703","How can I use the C++11 standard when compiling in CLion","<c++><c++11><clion>","<p>I've tried all the usual suggestions. I am also using <code>cmake_minimum_required(VERSION 3.16)</code>, am running on a Mac and have tried both G++ and CLANG.</p>
<p>For example:</p>
<p>Adding any of these to CMakeLists.txt does not work</p>
<pre><code>set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_FLAGS &quot;${CMAKE_CXX_FLAGS} -std=c++11&quot;)
</code></pre>
<p>As my test, I've included the code shown below in my main function and the result is always <code>C++98</code></p>
<pre><code>    if (__cplusplus == 201703L) {
        std::cout &lt;&lt; &quot;C++17\n&quot;;
    } else if (__cplusplus == 201402L) {
        std::cout &lt;&lt; &quot;C++14\n&quot;;
    } else if (__cplusplus == 201103L) {
        std::cout &lt;&lt; &quot;C++11\n&quot;;
    } else if (__cplusplus == 199711L) {
        std::cout &lt;&lt; &quot;C++98\n&quot;;
    } else {
        std::cout &lt;&lt; &quot;pre-standard C++\n&quot;;
    }
</code></pre>
<p>And here's my build toolchain:
<a href=""https://i.stack.imgur.com/WDm3m.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WDm3m.png"" alt=""enter image description here"" /></a></p>
","","","1","380","0","6","","2020-08-08 00:35:37","2020-08-08 22:00:19","2020-08-08 22:00:19",""
"61136115","Simple program in C++ with Clion ""expected `,' or `...' before '&&' token""","<c++><oop><compiler-errors><c++17><clion>","<p>Hi guys I can not solve in the following error that I find in my code:
The error indicated by the IDE refers to the move constructor. The IDE does not report me errors are when I compile it gives me error.</p>

<pre><code>Scanning dependencies of target Lab_01

[ 33%] Building CXX object CMakeFiles/Lab_01.dir/main.cpp.obj

In file included from C:\Users\alex\CLionProjects\LabPDS\Lab_01\main.cpp:2:

C:\Users\alex\CLionProjects\LabPDS\Lab_01\Message.h:21: error: expected `,' or `...' before '&amp;&amp;' token

C:\Users\alex\CLionProjects\LabPDS\Lab_01\Message.h:21: error: invalid constructor; you probably meant `Message (const Message&amp;)'

C:\Users\alex\CLionProjects\LabPDS\Lab_01\Message.h:23: error: **expected `,' or `...' before '&amp;&amp;' token**

mingw32-make.exe[3]: *** [CMakeFiles/Lab_01.dir/main.cpp.obj] Error 1
mingw32-make.exe[2]: *** [CMakeFiles/Lab_01.dir/all] Error 2
mingw32-make.exe[1]: *** [CMakeFiles/Lab_01.dir/rule] Error 2
mingw32-make.exe: *** [Lab_01] Error 2
</code></pre>

<p>Can someone help me?</p>

<p>my class main.cpp in line:2 find it the error, in the class Message.h</p>

<pre><code>#include &lt;iostream&gt;
#include ""Message.h""

int main() {
    Message m1(10);
    std::cout &lt;&lt; m1 &lt;&lt; std::endl;
    return 0;
}
</code></pre>

<p>File: Message.h</p>

<pre><code>// Created by Alexandro Vassallo on 10/04/2020.

#ifndef LAB_01_MESSAGE_H
#define LAB_01_MESSAGE_H


class Message {

    long id;
    char* data;
    int size;
    static long sId;

    char* mkMessage(int n);

public:
    Message();                                      //Costruttore di Default
    Message(int n);                                 //Costruttore con un solo parametro
    ~Message();                                     //Distruttore
    Message(const Message&amp; source);                 //Costruttore di copia
    Message(Message&amp;&amp; source);                      //Costruttore di movimento
    Message&amp; operator=(const Message&amp; source);      //Operatore di assegnazione
    Message&amp; operator=(Message&amp;&amp; source);           //Operatore di assegnazione di movimento

    long getId() const;

    void setId(long id);

    char *getData() const;

    void setData(char *data);

    int getSize() const;

    void setSize(int size);

    static long getSId();

    static void setSId(long sId);
};

std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const Message&amp; m);


#endif //LAB_01_MESSAGE_H
</code></pre>

<p>In line 21 and line 23 above there is the move constructor and the move assigment operator.</p>

<p>File: Message.cpp </p>

<pre><code>// Created by Alexandro Vassallo on 10/04/2020.

#include &lt;string&gt;
#include &lt;iostream&gt;
#include ""Message.h""
long Message::sId = 0;

Message::Message(): id(-1), size(0){
    this-&gt;data = mkMessage(0);
}

Message::Message(int n): size(n) {
    this-&gt;id= sId++;
    this-&gt;data = mkMessage(n);
}

Message::~Message() {
    delete[] data;
}

Message::Message(const Message &amp;source):id(source.id), size(source.size) {
    this-&gt;data = new char[size];
    memcpy(this-&gt;data,source.data,size);
}

Message::Message(Message &amp;&amp;source) {
    this-&gt;id = source.id;
    this-&gt;size = source.size;
    this-&gt;data = source.data;
    source.id = -1;
    source.size = 0;
    source.data = nullptr;
}

Message &amp;Message::operator=(const Message &amp;source) {

    if(this != &amp;source){
        delete[] this-&gt;data;
        this-&gt;data = nullptr;
        this-&gt;size = source.size;
        this-&gt;data = new char[size];
        memcpy(this-&gt;data, source.data,size);
    }

    return *this;
}

Message &amp;Message::operator=(Message &amp;&amp;source) {

    if(this != &amp;source){
        delete[] this-&gt;data;
        this-&gt;size = source.size;
        this-&gt;data = source.data;
        source.data = nullptr;
    }

    return *this;
}


long Message::getId() const {
    return id;
}

void Message::setId(long id) {
    Message::id = id;
}

char *Message::getData() const {
    return data;
}

void Message::setData(char *data) {
    Message::data = data;
}

int Message::getSize() const {
    return size;
}

void Message::setSize(int size) {
    Message::size = size;
}

long Message::getSId() {
    return sId;
}

void Message::setSId(long sId) {
    Message::sId = sId;
}

char* Message::mkMessage(int n) {
    std::string vowels =""aeiou"";
    std::string consolants = ""bcdfghlmnqrstvz"";

    char* m = new char[n+1];
    for(int i = 0 ; i &lt; n ; i++){
        m[i] = i%2 ? vowels[rand()%vowels.size()]:consolants[rand()%consolants.size()];
    }
    m[n] = 0;
    return m;
}

std::ostream&amp; operator&lt;&lt;(std::ostream&amp; out, const Message&amp; m){
    out &lt;&lt; m.getId() &lt;&lt; m.getSize() &lt;&lt; m.getData();
    return out;
}
</code></pre>
","<p>Make sure you are using C++11 or later. Move semantics are not supported by older versions.</p>
","61136207","2","219","1","1","","2020-04-10 07:52:36","2020-04-10 08:15:00","2020-04-10 08:28:50",""
"61219918","Can substitute PyCharm Professional for CLion - primarily for python","<python><c++><c><pycharm><clion>","<p>My favourite editor by far is PyCharm, mainly because I am most comfortable with Python.</p>

<p>I am subscribed to the professional package, but I am interested in picking up some C / C++.</p>

<p>CLion by default is paid, except for a 30 day trial. This is for personal use at the moment and picking up several suites could be too costly for me.</p>

<p>I have had a look around the net for information of the real differences between the Jetbrains ides, but cannot find anything concise (maybe I am just struggling to summarise my search with the correct keywords).</p>

<p>Anyway, how different are the various Jetbrains ides?
Is it just a matter of the same ide, different default settings and plugins?</p>

<p>Can i replace PyCharm with CLion altogether?</p>

<p>Any advice would be appreciated.</p>
","<p>I am a heavy user of CLion and PyCharm and have used InteliJ in the past. Each IDE feels like a fork of each other, and most keyboard bindings will work like jumping to a definition with cmd + b.</p>
<p>However, when it comes to tool chains, they are all heavily different. CLion relies on <a href=""https://cmake.org/"" rel=""nofollow noreferrer"">CMake</a> to understand your project and provide feedback that you would expect from any modern IDE.</p>
<p>With that said, it is not possible to add the tool chaining from CLion into PyCharm.</p>
<p>In my shop we use both Visual Studio Code and CLion. CLion feels decades ahead of VSC when it comes to &quot;intelisense&quot; in C. For example, having a code snippet of:</p>
<pre class=""lang-c prettyprint-override""><code>int main(void)
{
  printf(&quot;CLion is the best!\n&quot;);
}

</code></pre>
<p>Naturally, you will get a red squiggle underneath <code>printf</code> because <code>&lt;stdio.h&gt;</code> is not included. If I click the suggestion to fix this error in VSC, I get &quot;Would you like to disable squiggles&quot; vs CLion you get &quot;Would you like to include &lt;stdio.h&gt;&quot;. It is just a proper IDE with nice to have integration with GDB and Valgrind.</p>
<p>EDIT:</p>
<p>I am sorry, I just realized that you meant if you could replace PyCharm with CLion and not the other way around! Yes, you can absolutely use CLion to write some Python code. It uses all the features in the community edition.</p>
","72033188","1","132","2","2","","2020-04-15 01:35:23","","2022-04-27 17:50:43",""
"61236544","CLion/PyCharm/PHPStorm/IntelliJ won't start, says ""IDE has not been initialized yet""","<intellij-idea><pycharm><jvm><ide><clion>","<p>When I try to start my CLion IDE (or another JetBrains IDE, like PyCharm, IntelliJ IDEA, PHP Storm etc), it fails, and I get the following message on the console:</p>
<pre><code>IDE has not been initialized yet
</code></pre>
<p>(after the usual JVM warning I always get before and didn't prevent the IDE from starting up.)</p>
<p>Why is this happening? What can I do about it?</p>
<p>Notes:</p>
<ul>
<li>I have a valid license.</li>
<li>May be related to <a href=""https://youtrack.jetbrains.com/issue/IDEA-233272"" rel=""nofollow noreferrer"">this (resolved) issue</a> for IntelliJ Idea.</li>
</ul>
","<h3>Another instance of the IDE may be running</h3>
<p>While you might not see it for some reason, there is another instance of your IDE already running (probably for your own user). The error message is somewhat misleading.</p>
<p>Let's assume you're running CLion for example. The executable's name is <code>clion</code>. Look for it with the <code>ps</code> command: <code>ps aux | grep -i clion</code>, or with <code>pgrep</code>: <code>pgrep clion</code>. Then terminate it (e.g. using <code>kill</code> with the process ID), and re-run.</p>
<p>Caveat: There may not be the only scenario in which you get the same error message.</p>
","61237140","17","7033","1","0","1","2020-04-15 18:59:17","2021-11-24 09:42:02","2022-02-20 11:27:03",""
"54635155","How to create a simple CLion C++ CMake project with different locations for Project itself, build products and source files","<c++><cmake><clion>","<p>I'm new with CLion and CMakeList. I'd like to have different locations for:</p>

<ol>
<li>CLion project files</li>
<li>Build Files</li>
<li>Source and Header Files</li>
</ol>

<p>When opening default projects all are located under the same directory tree</p>

<p>What are the steps to create such project ('Hello world')?</p>
","<ol>
<li>CLion project files</li>
</ol>

<p>AFAIK, you can only set one global path for each jetbrains' IDE, by writing <code>IDE_HOME\bin\idea.properties</code> file.</p>

<p>Details can be found <a href=""https://intellij-support.jetbrains.com/hc/en-us/articles/207240985-Changing-IDE-default-directories-used-for-config-plugins-and-caches-storage"" rel=""nofollow noreferrer"">here</a>.</p>

<ol start=""2"">
<li>Build Files</li>
</ol>

<p><code>Settings</code> -> <code>Build, Execution, Deployment</code> -> <code>CMake</code> -> <code>Generation path</code></p>

<p>You can also set several paths for different build profiles there.</p>

<p><a href=""https://i.stack.imgur.com/WCFnD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WCFnD.png"" alt=""enter image description here""></a></p>

<ol start=""3"">
<li>Source and Header Files</li>
</ol>

<p>Add sources and include directories in <code>CMakeLists.txt</code> .</p>
","54641749","1","584","1","0","","2019-02-11 16:39:00","","2019-02-12 01:51:30",""
"61258547","Clion (embedded development for stm32) CMake not found arm-none-eabi-gcc compiler","<cmake><arm><stm32><clion><stm32cubemx>","<p>I made project like tutorial <a href=""https://blog.jetbrains.com/clion/2019/02/clion-2019-1-eap-clion-for-embedded-development-part-iii/?gclid=CjwKCAjwhOD0BRAQEiwAK7JHmKUzvoJnORtCn3YxpsSb00Ep_dE0gNQOytiXVgFj6EXOjyCAIH9XTBoCngQQAvD_BwE&amp;gclsrc=aw.ds"" rel=""nofollow noreferrer"">https://blog.jetbrains.com/clion/2019/02/clion-2019-1-eap-clion-for-embedded-development-part-iii/?gclid=CjwKCAjwhOD0BRAQEiwAK7JHmKUzvoJnORtCn3YxpsSb00Ep_dE0gNQOytiXVgFj6EXOjyCAIH9XTBoCngQQAvD_BwE&amp;gclsrc=aw.ds</a></p>

<p>I get arm toolchain from <a href=""https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads"" rel=""nofollow noreferrer"">https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads</a></p>

<p>Add bin folder to PATH by .bashrc. Console command runs good:</p>

<pre><code>$ arm-none-eabi-gcc
arm-none-eabi-gcc: fatal error: no input files
</code></pre>

<p>After make project in Clion with STM32CubeMX cmake not configure:</p>

<pre><code>-- The C compiler identification is unknown
-- The CXX compiler identification is unknown
-- The ASM compiler identification is unknown
-- Found assembler: arm-none-eabi-gcc
CMake Error at CMakeLists.txt:34 (PROJECT):
  The CMAKE_C_COMPILER:

    arm-none-eabi-gcc

  is not a full path and was not found in the PATH.

  Tell CMake where to find the compiler by setting either the environment
  variable ""CC"" or the CMake cache entry CMAKE_C_COMPILER to the full path to
  the compiler, or to the compiler name if it is in the PATH.
</code></pre>

<p>But bin folder already in PATH!!!</p>

<p>Clion see compilers if install toolchail by pacman or copy all content of bin folder to /usr/bin/, but not found other files like nano.specs, nosys.specs, stdint.h and other includes.</p>

<p>I don't know how point Clion and CubeMX right path to toolchain. </p>
","","","1","1520","1","4","","2020-04-16 19:30:36","","2020-04-17 16:59:59",""
"61272468","Having troubles using Valgrind with WSL on CLion","<valgrind><clion><windows-subsystem-for-linux>","<p>Working on Windows 10, enabled WSL and installed Ubuntu.
WSL toolchain configured, I can build and run stuff on CLion, everything works perfectly except for Valgrind.</p>

<p>I used the path:</p>

<pre><code>\\wsl$\Ubuntu\usr\bin\valgrind
</code></pre>

<p>but everytime I try to run a Memcheck I get:</p>

<pre><code>Valgrind executable is not found
</code></pre>

<p>What should I do?</p>
","<p>Try to use Posix path <code>/usr/bin/valgrind</code>.
<a href=""https://www.jetbrains.com/help/clion/memory-profiling-with-valgrind.html#valgrind-wsl"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/memory-profiling-with-valgrind.html#valgrind-wsl</a></p>

<p>Works for me.</p>
","61276690","3","1938","1","0","1","2020-04-17 13:08:46","","2020-04-17 16:50:34",""
"64325942","Invalid error in Clion about using coroutines","<c++><windows-subsystem-for-linux><clion>","<p>I'm testing coroutines in CLion on Windows with WSL toolchain (g++10) and I'm getting this error when using co_return statement:</p>
<pre><code>Std::experimental::coroutine_traits type was not found; include &lt;experimental/coroutine&gt; before defining a coroutine
</code></pre>
<p>in editor - but everything compiles fine and working. The WSL toolchain is the only one in CLion. How can I remove/fix them?</p>
","","","1","344","0","9","","2020-10-12 22:08:18","","2020-10-12 22:08:18",""
"64419023","CLion C++ header files not found after macOS is updated to Catalina","<c++><iostream><clion>","<p>I am using CLion for my C++ projects. After I updated my macOS to Catalina, my C++ files cannot find <code>&lt;iostream&gt;</code>,  etc anymore. I have read similar issues online but I couldn't find where to add the build path or find the header file path. If anyone can help me with this problem, thank you in advance.</p>
","","","2","1017","1","1","","2020-10-18 22:40:28","2021-08-30 03:32:40","2021-08-30 03:32:40",""
"64949012","How do I fix fatal error U1033: syntax error: ""$(MAKE)"" in CLion?","<c><clion>","<p>so I was trying to run my first Code in CLion:</p>
<pre><code>#include &lt;stdio.h&gt;

int main () {
    int x;
    x = 5/2;

    printf(&quot;Result: %.2f&quot;, x);
    return 0;
}
</code></pre>
<p>and received following error message:</p>
<pre><code>makefile(136) : fatal error U1033: syntax error: &quot;$(MAKE)&quot; unexpected stop.
</code></pre>
<p>I'm looking forward for a reply.</p>
","","","1","158","0","2","","2020-11-21 23:03:20","","2020-11-21 23:03:20",""
"64965494","CLion Cannot run program ""make"" The system cannot find the file specified","<makefile><clion><jetbrains-ide><mingw-w64><msys2>","<p>When opening a makefile project in CLion I get the error message:</p>
<pre><code>Cannot run program &quot;make&quot; (in directory &quot;D:\Werkstudent\XWF\XT_Einzelauswertung&quot;): CreateProcess error=2, The system cannot find the file specified: CreateProcess error=2, The system cannot find the file specified
Make execution failed with exit code = 127
</code></pre>
<ul>
<li>I'm using mingw64, installed with msys2 on Windows.</li>
<li><code>mingw-w64-x86_64-toolchain</code> is installed.</li>
<li>In <code>Build, Execution, Deployment -&gt; Toolchains</code> I have added MinGW with Environment <code>C:\msys64\mingw64</code>. Make, C Compiler and C++ Compiler are all correctly detected.</li>
<li>In <code>Build, Execution, Deployment -&gt; Build Tools -&gt; Make</code> I have set the path to make executable as <code>C:\msys64\mingw64\bin\mingw32-make.exe</code>.</li>
</ul>
<p>Relevant debug log of CLion:</p>
<pre><code>2020-11-23 10:01:57,997 [ 244797]   INFO - System.util.ExternalSystemUtil - External project [D:/Werkstudent/XWF/XT_Einzelauswertung] resolution task started
2020-11-23 10:01:57,997 [ 244797]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile analysis started at: 10:01:57 id: analysis:aa0e0ae1-8957-4100-b93e-e389cbdb8646
2020-11-23 10:01:59,285 [ 246085]   INFO - om.jetbrains.cidr.cpp.makefile - MakefileResolverState: Starting make: make clean
2020-11-23 10:01:59,293 [ 246093]  DEBUG - om.jetbrains.cidr.cpp.makefile - Channel closed coroutine name = StandaloneCoroutine{Completed}@60fcd138
2020-11-23 10:01:59,295 [ 246095]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile constructor message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.ConstructorAnalysisError(Make execution failed with exit code = 127)
2020-11-23 10:01:59,305 [ 246105]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile analyzer message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.MakeExecutionError(Make execution failed with exit code = 127)
2020-11-23 10:01:59,315 [ 246115]   INFO - om.jetbrains.cidr.cpp.makefile - MakefileResolverState: Starting make: make --just-print --print-directory --keep-going all
2020-11-23 10:01:59,330 [ 246130]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile constructor message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.CriticalConstructorAnalysisError(Cannot run program &quot;make&quot; (in directory &quot;D:\Werkstudent\XWF\XT_Einzelauswertung&quot;): CreateProcess error=2, The system cannot find the file specified)
2020-11-23 10:01:59,331 [ 246131]  DEBUG - om.jetbrains.cidr.cpp.makefile - Channel closed coroutine name = StandaloneCoroutine{Completed}@742f7782
2020-11-23 10:01:59,330 [ 246130]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile analyzer message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.CriticalAnalysisFailure(Cannot run program &quot;make&quot; (in directory &quot;D:\Werkstudent\XWF\XT_Einzelauswertung&quot;): CreateProcess error=2, The system cannot find the file specified)
2020-11-23 10:01:59,331 [ 246131]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile analyzer message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.MakeExecutionError(Make execution failed with exit code = 127)
2020-11-23 10:01:59,331 [ 246131]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile constructor message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.ConstructorAnalysisError(Make execution failed with exit code = 127)
2020-11-23 10:01:59,361 [ 246161]   INFO - om.jetbrains.cidr.cpp.makefile - make exited with code 127
2020-11-23 10:01:59,361 [ 246161]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile constructor message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.ConstructorAnalysisError(Make execution failed with exit code = 127)
2020-11-23 10:01:59,361 [ 246161]  DEBUG - om.jetbrains.cidr.cpp.makefile - Channel closed coroutine name = StandaloneCoroutine{Completed}@63439922
2020-11-23 10:01:59,371 [ 246171]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile analyzer message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.MakeExecutionError(Make execution failed with exit code = 127)
2020-11-23 10:01:59,371 [ 246171]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile constructor message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.ConstructorAnalysisError(Cannot run program &quot;make&quot; (in directory &quot;D:\Werkstudent\XWF\XT_Einzelauswertung&quot;): CreateProcess error=2, The system cannot find the file specified)
2020-11-23 10:01:59,381 [ 246181]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile analyzer message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.TargetsAnalyzerError(Cannot run program &quot;make&quot; (in directory &quot;D:\Werkstudent\XWF\XT_Einzelauswertung&quot;): CreateProcess error=2, The system cannot find the file specified)
2020-11-23 10:01:59,382 [ 246182]  DEBUG - om.jetbrains.cidr.cpp.makefile - Channel closed coroutine name = StandaloneCoroutine{Completed}@a7d27cb
2020-11-23 10:01:59,382 [ 246182]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile constructor message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.ConstructorAnalysisStatus(Makefile analysis finished. Success = false)
2020-11-23 10:01:59,383 [ 246183]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile constructor message: com.jetbrains.cidr.cpp.makefile.project.resolver.messages.CriticalConstructorAnalysisError(No compilation commands found)
2020-11-23 10:01:59,386 [ 246186]  DEBUG - om.jetbrains.cidr.cpp.makefile - Channel closed coroutine name = StandaloneCoroutine{Completed}@258f8a01
2020-11-23 10:01:59,386 [ 246186]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile constructor message: ModuleStructureMessage(moduleStructure=ModuleData: XT_Einzelauswertung)
2020-11-23 10:01:59,387 [ 246187]  DEBUG - om.jetbrains.cidr.cpp.makefile - Makefile analysis finished at: 10:01:59 id: analysis:aa0e0ae1-8957-4100-b93e-e389cbdb8646
result: failure
2020-11-23 10:01:59,387 [ 246187]  DEBUG - om.jetbrains.cidr.cpp.makefile - Channel closed coroutine name = StandaloneCoroutine{Completed}@66027050
2020-11-23 10:01:59,416 [ 246216]   INFO - System.util.ExternalSystemUtil - External project [D:/Werkstudent/XWF/XT_Einzelauswertung] resolution task executed in 1419 ms.
2020-11-23 10:01:59,778 [ 246578]   INFO - ge.ExternalProjectsDataStorage - Save external projects data in 20 ms
</code></pre>
<p>What am I doing wrong, why can't CLion find the make executable?</p>
","<p>Ok found the solution.</p>
<p>@uta was in the <a href=""https://stackoverflow.com/questions/64965494/clion-cannot-run-program-make-the-system-cannot-find-the-file-specified?noredirect=1#comment114887000_64965494"">comment</a> kinda right. CLion could find the make executable, but make dependes on a bunch of other coreutils which it couldn't find.</p>
<p>So I had to add <code>C:\msys64\mingw64\bin</code> and <code>C:\msys64\usr\bin</code> to my windows PATH.</p>
<p>How did I figure it out?
Executing <code>mingw32-make</code> in the mingw terminal worked fine. <br />
So I executed <code>mingw32-make clean</code> in the terminal inside CLion, which gave me errors described. So the error messages wheren't from CLion, but from the <code>make</code> command itself. <br />
After that I tried adding the both paths to PATH only inside CLion but I couldn't find an option for it. So ultimately I had to add it in the system environment variables. Don't know yet if this is messing sth other up because of clashes in the executable names.</p>
<p>Oh and now I'm getting errors in the &quot;Configuring project&quot; step probably because of parsing errors..</p>
","65001477","4","4732","1","2","","2020-11-23 09:13:47","","2020-11-25 09:03:55",""
"65013658","C++ & CLion - Having problems with a platform-specific code","<c++><clion>","<p>I am having problems with CLion and my multi-platform code. Let's say that the main function looks like this:</p>
<pre class=""lang-cpp prettyprint-override""><code>#ifdef _WIN32
cout &lt;&lt; &quot;win&quot; &lt;&lt; endl;
#endif

#ifdef linux
...
#endif
</code></pre>
<p>The problem is that CLion editor marks stripped code (that between #ifs) (for lin &amp; win) as a comment and I it's harder for me to code (I have no hints because CLion treats it as a comment + I am learning WinAPI, so I need those). In Unity I had the following solution:</p>
<pre class=""lang-cs prettyprint-override""><code>#if UNITY_SERVER || UNITY_EDITOR
//code
#endif
</code></pre>
<p>Then code was stripped from client build + I was able to code in the IDE.</p>
<p>Does anyone know what can I do?</p>
<p><strong>Edit 1:</strong>
There is no problem with the building. If you have InteliJ based IDE, then put a fragment of your code in a comment - that's how it looks for me between #ifs.</p>
","","","1","106","1","11","","2020-11-25 22:35:59","2020-11-25 22:47:41","2020-11-26 10:12:21",""
"65015385","Could NOT find MPI (missing: MPI_C_FOUND MPI_CXX_FOUND) with MS-MPI on CLion","<c><cmake><mpi>","<p>I've started a fresh C project with CLion and wanted to use MPI. Since I am on Windows, I installed MS-MPI (the MSMPI and the SDK), and have my CMakeLists.txt as follows:</p>
<pre><code>cmake_minimum_required(VERSION 3.10)
project(ppc)

set(CMAKE_C_STANDARD 11)

find_package(MPI REQUIRED)
add_executable(ppc main.c)
target_link_libraries(main PRIVATE MPI::MPI_C)
</code></pre>
<p>The problem is that whenever I try to import/reload the project, I get the following error:</p>
<pre><code>C:\Users\frani\AppData\Local\JetBrains\CLion2020.2\cygwin_cmake\bin\cmake.exe -DCMAKE_BUILD_TYPE=Debug -DCMAKE_MAKE_PROGRAM=/usr/bin/make.exe -DCMAKE_CXX_COMPILER=/usr/bin/g++.exe -G &quot;CodeBlocks - Unix Makefiles&quot; /cygdrive/d/Dev/CLionProjects/ppc
-- Could NOT find MPI_C (missing: MPI_C_LIB_NAMES MPI_C_HEADER_DIR MPI_C_WORKS) 
-- Could NOT find MPI_CXX (missing: MPI_CXX_LIB_NAMES MPI_CXX_HEADER_DIR MPI_CXX_WORKS) 
CMake Error at /cygdrive/c/Users/frani/AppData/Local/JetBrains/CLion2020.2/cygwin_cmake/share/cmake-3.17.3/Modules/FindPackageHandleStandardArgs.cmake:164 (message):
  Could NOT find MPI (missing: MPI_C_FOUND MPI_CXX_FOUND)

      Reason given by package: MPI component 'Fortran' was requested, but language Fortran is not enabled.  

Call Stack (most recent call first):
  /cygdrive/c/Users/frani/AppData/Local/JetBrains/CLion2020.2/cygwin_cmake/share/cmake-3.17.3/Modules/FindPackageHandleStandardArgs.cmake:445 (_FPHSA_FAILURE_MESSAGE)
  /cygdrive/c/Users/frani/AppData/Local/JetBrains/CLion2020.2/cygwin_cmake/share/cmake-3.17.3/Modules/FindMPI.cmake:1717 (find_package_handle_standard_args)
  CMakeLists.txt:6 (find_package)


-- Configuring incomplete, errors occurred!
See also &quot;/cygdrive/d/Dev/CLionProjects/ppc/cmake-build-debug/CMakeFiles/CMakeOutput.log&quot;.
See also &quot;/cygdrive/d/Dev/CLionProjects/ppc/cmake-build-debug/CMakeFiles/CMakeError.log&quot;.

[Finished]
</code></pre>
<p>What is wrong with my file?</p>
","","","2","3163","1","0","","2020-11-26 02:35:47","","2020-11-26 14:59:13",""
"65149198","CMake problem while assembling .asm files in CLion","<windows><assembly><cmake><nasm><clion>","<p>I'm trying to run .asm files on Clion, and i've already installed NASM for it but i have a problem with specifying ASM Compiler:</p>
<pre><code>CMake Error at CMakeLists.txt:4 (enable_language):
  The CMAKE_ASM_NASM_COMPILER:

    C:/Users/User/AppData/Local/bin/NASM

  is not a full path to an existing compiler tool.

  Tell CMake where to find the compiler by setting either the environment
  variable &quot;ASM_NASM&quot; or the CMake cache entry CMAKE_ASM_NASM_COMPILER to the
  full path to the compiler, or to the compiler name if it is in the PATH.


mingw32-make.exe: *** [Makefile:175: cmake_check_build_system] Error 1
-- The ASM_NASM compiler identification is unknown
-- Found assembler: C:/Users/User/AppData/Local/bin/NASM
-- Configuring incomplete, errors occurred!
</code></pre>
<p>The problem is with this &quot;full path&quot;, but i don't quite understand, what is meant with it.
Here is my CMakeLists.txt :</p>
<pre><code>cmake_minimum_required(VERSION 3.17)
project(untitled C)
set(CMAKE_ASM_NASM_COMPILER C:/Users/User/AppData/Local/bin/NASM)
enable_language(ASM_NASM)
set(ASM_SOURCES
        test.asm)

set(SOURCES
        ${ASM_SOURCES})

set_source_files_properties(test.asm PROPERTIES LANGUAGE ASM_NASM)

add_executable(program  ${SOURCES})
</code></pre>
<p>I've also read similar questions here (but about C/C++ Compiler), they weren't really helpful in my case.</p>
<p>Thank you for the answers!</p>
","","","1","608","1","0","","2020-12-04 18:56:17","2020-12-04 19:03:57","2020-12-04 19:51:50",""
"65158747","I have different output from the same code on Linux VSCode (gcc) and Windows Clion (visual c++)","<c++><gcc><visual-studio-code><visual-c++><clion>","<p>I've made a text based game for my project in VSCode (gcc). The main problem is that VSCode gives me strange output while Clion (visual-c++) gives me the right one.</p>
<p>For example in VSCode I get negative numbers as my damage while in Clion I get the right ones.
I hope the code that I provided will help you to find the reason to this strange behaviour</p>
<hr />
<p>I want to know how to fix this problem and how to avoid it in the near future. Thank you in advance</p>
<p><strong>Main.cpp</strong></p>
<pre><code>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;ctime&gt;
#include &lt;string&gt;
#include &lt;algorithm&gt;
#include &quot;mob.h&quot;


using namespace std;
int main()
{
    //Random seed
    srand(time(nullptr));

    //Player Initialization



    //Mobs Initialization
    mob Skeleton{rand()%51+50, rand()%21+30, rand()%11, &quot;Skeleton&quot;, rand()%11+10};
    mob Zombie{rand()%101+100, rand()%11+10, rand()%21, &quot;Zombie&quot;, rand()%11};
    mob Spider{rand()%21+30, rand()%11+20, rand()%11,  &quot;Spider&quot;, rand()%21+50};
    mob Creeper{rand()%16+5, rand()%51+50, 0, &quot;Creeper&quot;, rand()%6};

    //Array of mobs
    vector &lt;mob&gt; mobs;
    mobs.push_back(Skeleton);
    mobs.push_back(Zombie);
    mobs.push_back(Spider);
    mobs.push_back(Creeper);

    //Fight
    int CurrentAttack = 0, n;

    while (1 &lt; mobs.size())
    {
        //Mobs order output
        cout &lt;&lt; endl &lt;&lt; mobs[0].name &lt;&lt; endl;
        cout &lt;&lt; &quot;Choose who to attack:&quot; &lt;&lt; endl;
        tryAgain: //In case if user typed wrong number
        for (int q = 1; q &lt; mobs.size(); q++)
        {
            cout &lt;&lt; q &lt;&lt; &quot; - &quot; &lt;&lt; mobs[q].name &lt;&lt; endl;
        }
        //Choose who to attack
        cin &gt;&gt; n;
        switch (n)
        {
            case 1:
            {
                mobs[0].Attack(CurrentAttack);
                mobs[1].TakeHit(CurrentAttack);
                mobs[1].Return();

                break;
            }
            case 2:
            {
                if (n &gt; mobs.size()-1)
                {   printf(&quot;This enemy is already dead&quot;);
                    goto tryAgain;
                }
                mobs[0].Attack(CurrentAttack);
                mobs[2].TakeHit(CurrentAttack);
                mobs[2].Return();

                break;
            }
            case 3:
            {
                if (n &gt; mobs.size()-1)
                {
                    cout &lt;&lt; &quot;This enemy is already dead&quot; &lt;&lt; endl;
                    goto tryAgain;
                }
                mobs[0].Attack(CurrentAttack);
                mobs[3].TakeHit(CurrentAttack);
                mobs[3].Return();

                break;
            }
            default:
                goto tryAgain;
        }

        if (mobs[n].Health() == 0)
        {
            //Remove dead mob
            rotate(mobs.begin(),mobs.begin()+n+1,mobs.end());
            mobs.pop_back();
        }
        else
        {
            //Rotate Vector for different mob to attack
            rotate(mobs.begin(),mobs.begin()+1,mobs.end());
        }

    }
    cout &lt;&lt; &quot;⣿⣿⣿⣿⡿⠟⠛⠛⠛⠛⠉⠉⠙⠛⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠟&quot; &lt;&lt; endl &lt;&lt; &quot;⣿⣿⣯⣥⣤⣶⣶⣶⣶⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣏⣀⣀⣀⡀&quot; &lt;&lt; endl &lt;&lt; &quot;⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⠛⠻⠿⠟⠉⠉⠉⢻⣿⣿⣿⡿⠟⠋⣡⣼⣿⣿⣿⡄&quot; &lt;&lt; endl
    &lt;&lt; &quot;⣿⣿⣿⣟⣭⣤⣶⣶⣿⣿⠃⠀⠀⢀⣀⣤⣶⣿⣿⣿⣿⡅⡀⢀⣩⣤⣤⠀&quot; &lt;&lt; endl &lt;&lt; &quot;⣿⣿⣿⣿⣿⣿⣛⡛⠛⠛⠛⢋⣩⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣛⠛⠛⠓⠠&quot; &lt;&lt; endl &lt;&lt; &quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⣤⣤⣦&quot; &lt;&lt; endl
    &lt;&lt; &quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇&quot; &lt;&lt; endl &lt;&lt; &quot;⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⢿⡿⢿⣿⣿⣿⠃&quot; &lt;&lt; endl &lt;&lt; &quot;⠿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣥⣄⣀⣀⠀⠀⠀⠀⠀⢰⣾⣿⣿⠏&quot; &lt;&lt; endl
    &lt;&lt; &quot;⠀⠀⠀⠀⠀⠀⠉⣩⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⣜⡻⠋&quot; &lt;&lt; endl &lt;&lt; &quot;⣰⣾⣷⣶⣿⣾⣖⣻⣿⣿⡿⣿⣿⣿⣿⠿⠿⠟⠛⠛⠛⠋⠉⠉⢉⡽⠃&quot; &lt;&lt; endl &lt;&lt; &quot;⣿⣿⣿⣿⣿⣿⡉⠉⠉⠛⠛⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⡤⠚⠉&quot; &lt;&lt; endl
    &lt;&lt; &quot;⠛⠛⣿⣿⣿⣿⣿⣿⣿⠉⠛⢶⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⡇&quot; &lt;&lt; endl &lt;&lt; &quot;⠠⣾⣿⣿⣿⣿⣿⠿⠟⠃⠀⠀⠀⠈⠲⣴⣦⣤⣤⣤⣶⡾⠁&quot; &lt;&lt; endl &lt;&lt; &quot;⠄⠈⠉⠻⢿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠛⠛⠉⠀&quot; &lt;&lt; endl;

    cout &lt;&lt; endl &lt;&lt; mobs[0].name &lt;&lt; &quot; has survived!&quot; &lt;&lt; endl;
    return 0;
}
</code></pre>
<p><strong>Mob.h</strong></p>
<pre><code>
#ifndef TEXTRPG_MOB_H
#define TEXTRPG_MOB_H

#include &lt;string&gt;
#include &lt;iostream&gt;

using namespace std;

class mob {
    int health;
    int damage;
    int armor;
    int attack = 0;
    int agility;

    void Damage(int attack);

    //Types of Attack
    void StrongAttack(int&amp; CurrentAttack);
    void SmallAttack(int&amp; CurrentAttack);
    void Crit(int&amp; CurrentAttack);

public:
    string name;

    void Return();
    void GiveAttack(int&amp; CurrentAttack);
    void Attack(int&amp; CurrentAttack);
    void TakeHit(int attack);
    bool Health();
    mob(int health, int damage, int armor, string name, int agility);

};




#endif

</code></pre>
<p><strong>Mob.cpp</strong></p>
<pre><code>
#include &quot;mob.h&quot;

using namespace std;

//Attack function
void mob::Attack(int&amp; CurrentAttack) {
    int n;
    cout &lt;&lt; &quot;Choose what attack to use:\n1 - Strong Attack;\n2 - Simple Attack;\n3 - Critical Strike;\n&quot;;
    cin &gt;&gt; n;
    switch (n) {
        case 1:
            StrongAttack(CurrentAttack);
            break;
        case 2:
            SmallAttack(CurrentAttack);
            break;
        case 3:
            Crit(CurrentAttack);
            break;
        default:
            SmallAttack(CurrentAttack);
            break;
    }
}

//Types of Attack
void mob::StrongAttack(int&amp; CurrentAttack)
{
    this -&gt; attack = damage*2;
    mob::GiveAttack(CurrentAttack);
}
void mob::SmallAttack(int&amp; CurrentAttack)
{
    this -&gt; attack = damage;
    mob::GiveAttack(CurrentAttack);
}
void mob::Crit(int&amp; CurrentAttack)
{
    if (rand() % 2)
    {
        this -&gt; attack = damage*3;
        mob::GiveAttack(CurrentAttack);
    };
}

//Share Attack to main.cpp
void mob::GiveAttack(int&amp; CurrentAttack)
{
    CurrentAttack = attack;
}




//TAKE HIT
//Take damage from other mob
void mob::TakeHit(int attack)
{
    if (rand()%101 &gt; agility)
    {
        Damage(attack);
    }
    else
    {
        this -&gt; attack = 0;
        cout &lt;&lt; &quot;You missed&quot; &lt;&lt; endl;
    }

}

void mob::Damage(int attack) //Health calculation
{
    //Damage Calculation
    if (attack - armor &lt;= 0)
        this -&gt; attack = 0;
    else
        this -&gt; attack -= armor;

    //Health calculation
    if (health - attack &lt;= 0)
    {
        cout &lt;&lt; name &lt;&lt; &quot; is dead&quot; &lt;&lt; endl;
        this -&gt; health = 0;//Health &lt; 0 -&gt; Death
    }
    else
        this -&gt; health -= attack; //Health Calculation
}






//Public

void mob::Return()
{
    cout &lt;&lt; name &lt;&lt; &quot; took &quot; &lt;&lt; attack &lt;&lt; &quot; damage&quot; &lt;&lt; endl;
    cout &lt;&lt; name &lt;&lt; &quot; has &quot; &lt;&lt; health &lt;&lt; &quot; HP left&quot; &lt;&lt; endl;
}


bool mob::Health()
{
    if (health == 0)
        return 0;
    else
        return 1;
}

//Constructor
mob::mob(int health, int damage, int armor, string name, int agility)
{
    this -&gt; health = health;
    this -&gt; damage = damage;
    this -&gt; armor = armor;
    this -&gt; name = name;
    this -&gt; agility = agility;
}

</code></pre>
","","","1","130","0","4","","2020-12-05 15:42:40","","2020-12-05 16:05:59",""
"61561582","How do I view compiler errors in a problems window in CLion?","<c++><compiler-errors><clion>","<p>I'm switching my project to use the CLion IDE and I'm wondering how I can view the problem's window that shows errors and warnings in the problems tool window <a href=""https://www.jetbrains.com/help/idea/problems-tool-window.html"" rel=""nofollow noreferrer"">described here</a>. The support page doesn't seem very helpful.</p>

<p>Some people have mentioned elsewhere that you can use Inspect Code, but this doesn't show the errors that the compiler gives</p>
","","","1","161","2","0","","2020-05-02 15:10:51","","2021-10-14 16:24:02",""
"65273925","CLion and multiple projects with DLL's","<c++><cmake><clion><jetbrains-ide>","<p>I have one project that when built will create a DLL.</p>
<p>Is it possible to have two projects open with CLion so that they can both be built and the second project uses the DLL?</p>
<p>Sort of like how you can have multiple projects in a solution in VS?</p>
","","","1","102","0","4","","2020-12-13 09:02:29","2020-12-13 16:41:59","2020-12-13 16:41:59",""
"65303574","Cannot launch SDL2 app through Clion on wsl2 using VcXsrv","<c><ubuntu><windows-subsystem-for-linux><sdl-2><clion>","<p>I'm trying to run SDL2 window app in CLion on wsl2 (ubuntu 20) however facing these issues.</p>
<pre><code>error: XDG_RUNTIME_DIR not set in the environment.
The path /dev/dri/ cannot be opened or is not available
</code></pre>
<p>I'm using VcXsrv for remote display which works fine when running the executable through terminal. However running in Clion doesn't. So I'm looking for some way around it (if possible)</p>
","","","1","206","0","0","1","2020-12-15 09:56:47","","2020-12-15 09:56:47",""
"61859664","How to use WSL with CLion","<ubuntu><clion><windows-subsystem-for-linux>","<p>I am attempting to set up CLion to use the Windows Subsystem for Linux, following the instructions at <a href=""https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-clion.html#"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-clion.html#</a>. Windows Version 10.0.18362.836. Ubuntu 20.04 LTS, all software current.</p>

<p>I am getting the following error reported on the Build, Execution, Deployment > Toolchains page of the Settings Dialog:
<code>Test CMake run finished with error more...</code>
Details...</p>

<pre><code>CMake Error at /usr/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake:185 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- The C compiler identification is GNU 9.3.0
CMake Error at /usr/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake:212 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- The CXX compiler identification is GNU 9.3.0
CMake Error at /usr/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake:210 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - failed
-- Detecting C compile features
-- Detecting C compile features - done
CMake Error at /usr/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake:80 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - failed
-- Detecting CXX compile features
-- Detecting CXX compile features - done
CMake Error at /usr/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake:73 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- Configuring incomplete, errors occurred!
See also ""/mnt/c/Users/user/AppData/Local/Tmp/cmake_check_environment/_build2367382020510955708/CMakeFiles/CMakeOutput.log"".
See also ""/mnt/c/Users/user/AppData/Local/Tmp/cmake_check_environment/_build2367382020510955708/CMakeFiles/CMakeError.log"".

Error code: 1
</code></pre>

<p>What do I do to fix this?</p>
","","","3","4176","2","0","2","2020-05-17 22:32:59","","2020-07-28 19:32:38",""
"62924011","CLion equivalent of Visual Studio C++ ""filters""","<visual-studio><visual-studio-2019><clion><jetbrains-ide>","<h1>Context</h1>
<p>In Visual Studio IDE, for C++ solutions, you can use so called &quot;filters&quot; to simulate source files tree/directories, while usually keeping all source code for each project in each project's root. Main merit being ability to directly <code>#include &quot;foo.h&quot;</code></p>
<p>I've been trying to &quot;switch&quot; some solutions over to CLion, because of its multiplatform focus and trying to add support for CMake+GCC into already existing VS solutions, as no cross-platform IDE has native support for <code>.sln/.vcxproj</code> files</p>
<p>Now - I know that some larger CMake projects (as in solution/group of subprojects) often use plain filesystem subdirectories to further break-up its code in each subproject, but since some of &quot;solutions&quot; I'm trying to add CMake support to, consider of few hundred source files, I can't really go about refactoring everything manually and changing <code>#include &quot;service_foo.h&quot;</code> into <code>#include service/service_foo.h</code> in each of them.</p>
<p>Also another thing to consider is that I'm not migrating solution to work with CMake - I'm adding support for CMake builds/CLion IDE support alongside MSBuild toolchain/VS IDE support, so I don't want to introduce any breaking changes.</p>
<p>I'm still pretty new to JetBrains IDE ecosystem, so I wondered whether there is something that could provide this kind of functionality out of box, or perhaps with a plugin.</p>
<h1>Question</h1>
<p>Is there any way to sort source files into groups without making on-filesystem changes, that is in project view toolbox in CLion IDE?</p>
<p>Couldn't find anything in documentation so far, but it would be something alike to <a href=""https://www.jetbrains.com/help/clion/analyzing-applications.html"" rel=""nofollow noreferrer"">Code Hierarchy</a>, but for <code>.h/.cpp</code> files instead.</p>
<h1>Example</h1>
<p>Filesystem-wise structure (as visible on-disk)<br />
<code>$REPO_ROOT</code> is repository as provided with <code>*.vcxproj, .idea/</code> etc.</p>
<pre><code>Main CMakeList.txt: $REPO_ROOT/CmakeList.txt
Example subprojects: $REPO_ROOT/foo_slib/ $REPO_ROOT/program/
Example Source files: $REPO_ROOT/program/main.cpp $REPO_ROOT/program/gui_init.h $REPO_ROOT/program/VulkanDelegate.h 
</code></pre>
<p>Project/solution root-wise structure (as seen in project toolbox views in IDEs)<br />
<code>$VIEW_ROOT</code> is main project open for CLion or .sln open for MSVS as seen in Project View in each IDE</p>
<pre><code>Main CmakeList.txt: $VIEW_ROOT/CMAKE/CmakeList.txt
Example subprojects: $VIEW_ROOT/foo_slib/ $VIEW_ROOT/program/
Example Source files: $VIEW_ROOT/program/main.cpp $VIEW_ROOT/program/GUI/gui_init.h $VIEW_ROOT/program/Delegates/VulkanDelegate.h
</code></pre>
","<p>You surely do NOT need to edit source files and change include paths. Nothing should be able to stop you from achieving the same <code>#include</code> paths with compiler <a href=""https://gcc.gnu.org/onlinedocs/cpp/Search-Path.html"" rel=""nofollow noreferrer"">include path option, -<code>I&lt;path&gt;</code></a>. In CLion, it's controlled through <a href=""https://cmake.org/cmake/help/latest/command/target_include_directories.html"" rel=""nofollow noreferrer"">CMake's target_include_directories</a> directive. You may also have to figure out how the projects are linked.</p>
<p>You can add files and folders to CLion's <a href=""https://www.jetbrains.com/help/idea/favorites-tool-window.html"" rel=""nofollow noreferrer"">favorites</a>. You can have multiple groups of favorites, so this can emulate arbitrary virtual folders in the project.</p>
<p>For a more elaborate query language, there are <a href=""https://www.jetbrains.com/help/idea/settings-scopes.html#61824534"" rel=""nofollow noreferrer"">Scopes</a>. You can set them up, and then they will appear in the Views dropdown of the <a href=""https://www.jetbrains.com/help/idea/project-tool-window.html#show-filesize-timestamp"" rel=""nofollow noreferrer"">Project view</a>, each as a separate View.</p>
","62928569","1","596","2","0","","2020-07-15 21:25:05","2020-07-16 17:50:30","2020-07-18 21:07:39",""
"58225947","CLion on Mac - how to reference /Library/Frameworks?","<macos><clion><gstreamer-1.0>","<p>I'm using CLion 2019.2 on a mac running macOS 10.14.6. Trying to get a GStreamer basic tutorial C program to run that runs on my linux box. All XCode preqs and commandline tools are installed too. Think I have all the correct include files in CMakelists.txt.</p>

<p>How do I setup CLion to be sure it includes the necessary Gstreamer.framework?</p>

<p>And how do I include the right cmake compile options? Gstreamer info suggests the info below but not sure where to put it in Preferences->Build, Execution, Deployment->CMake - Build option or CMake options?</p>

<p><strong>Thanks for helping a noob</strong>. Info from GSstreamer for mac page:</p>

<p>** The GStreamer binaries provides a framework that you can drag and drop to XCode to start using it, or using the linker option -framework GStreamer*.*</p>

<p>** There is a small exception to the regular use of frameworks, and you will need to manually include the headers search path /Library/Frameworks/GStreamer.framework/Headers</p>

<p>** XCode: Add the headers path to Search Paths → Header Search Paths
GCC: Using the compiler option -I/Library/Frameworks/GStreamer.framework/Headers</p>
","","","2","271","0","0","1","2019-10-03 19:46:27","","2019-10-03 19:46:27",""
"58446094","CLion debug: lldb attach to a process, breakpoint is grey saying no executable","<debugging><clion><lldb>","<p>I am trying to debug tensorflow project, which uses SWIG technique to wrap c++ implementation with python frontend. I want to debug C++ part. Here is what I did:</p>

<ol>
<li>launch a tensorflow python script in terminal ($pid)</li>
<li>directly using <code>lldb -p $pid</code> works fine, I can set breakpoints, etc.</li>
<li>but I want to use CLion debug GUI, so I click <code>Clion-&gt;Run-&gt;Attach to Process</code>, find $pid as a native process.</li>
<li>CLion successfully attached to $pid, however, every breakpoint I set in Clion is grey and will not be hit. but if I set breakpoints in embedded lldb console, it works(breakpoint hits and highlight in Clion code file).</li>
</ol>

<p>the error message on CLion breakpoint is:</p>

<blockquote>
  <p>Breakpoint will not currently be hit. No executable code is associate
  with this line.</p>
</blockquote>

<p>P1:
<a href=""https://i.stack.imgur.com/bPE3E.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bPE3E.png"" alt=""enter image description here""></a>
P2:
<a href=""https://i.stack.imgur.com/nrbWo.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nrbWo.png"" alt=""enter image description here""></a></p>

<p>how to make this right, so that I can set breakpoints in Clion rather lldb command?</p>

<p>Extra information:</p>

<ul>
<li>tensroflow using bazel to build. I don't use Clion to build. just editing/browsing/debuging. CLion has a bazel plugin, but bind to specific bazel version, not ok for me.</li>
<li>CLion version 2.19.2</li>
</ul>
","","","4","715","0","0","","2019-10-18 07:39:28","","2020-04-04 19:11:04",""
"58634504","CLion: run tests before build","<cmake><automated-tests><googletest><clion><jetbrains-ide>","<p>I made a project in CLion (C++ + CMake) where I have a <em>shared library</em> project with 2 configurations <strong>Debug | Release</strong>. I have also implemented google tests for unit testing. </p>

<p>When the configuration is <strong>Release</strong> I would like to run some tests (or all) before the build. When the tests fail the library should <strong>not</strong> be build.</p>

<p>Is this possible? If so how?</p>
","<p>I have found the answer with <code>add_custom_command()</code>.
In my main <em>CMakeLists.txt</em> I have </p>

<pre><code>if(${CMAKE_BUILD_TYPE} STREQUAL ""Release"")
   #Rebuild the tests just in case some tests has changed and the executable was not rebuild
   add_custom_command(TARGET ${PROJECT_NAME} PRE_BUILD
           COMMAND ${CMAKE_COMMAND} --build ""${CMAKE_BINARY_DIR}"" --target tests --
           )

   if(${WIN32})
      set(TESTS_BIN tests.exe)
   else()
      set(TESTS_BIN tests)
   endif()
   #Run the tests executable
   add_custom_command(TARGET ${PROJECT_NAME} PRE_BUILD
           COMMAND ""${CMAKE_BINARY_DIR}/${TESTS_BIN}""
           )
endif()
</code></pre>

<p>The <code>add_custom_command()</code> is smart therefore when the <em>tests</em> executable doesn't return 0 (all test have passed successfully) the build will fail and the library will not be build.</p>
","58659304","1","222","1","2","","2019-10-30 22:32:05","2019-11-01 12:19:25","2019-11-01 12:31:45",""
"59078882","How to trigger cmake reconfiguration when tracking git commits in a CLion remote toolchain","<git><build><cmake><clion><git-commit>","<h2>Background</h2>

<p>I have a C++ project that uses CMake. I wish to encode the current git commit (and ""-dirty"" flag) into the application in a way that is automatically updated whenever the git commit changes, for example after a successful <code>git commit</code> or <code>git checkout</code>.</p>

<p>I understand I can do this by having CMake depend on the <code>.git/index</code> file, giving this:</p>

<pre><code>find_package(Git QUIET REQUIRED)

execute_process(
    COMMAND ""${GIT_EXECUTABLE}"" describe --match=NeVeRmAtCh --always --abbrev=8 --dirty
    WORKING_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}""
    RESULT_VARIABLE res
    OUTPUT_VARIABLE GIT_COMMIT
    ERROR_QUIET
    OUTPUT_STRIP_TRAILING_WHITESPACE)

set_property(GLOBAL APPEND
    PROPERTY CMAKE_CONFIGURE_DEPENDS
    ""${CMAKE_SOURCE_DIR}/.git/index"")

target_compile_definitions(mylib PUBLIC GIT_COMMIT=\""${GIT_COMMIT}\"")
</code></pre>

<p>Then the target program (C++) can just use the <code>GIT_COMMIT</code> preprocessor symbol.</p>

<p>So my requirements are:</p>

<ul>
<li>The application will contain the git commit (and <code>-dirty</code> suffix if uncommitted changes are present) of the source it was built from,</li>
<li>The git commit compiled into the application will be updated if the git commit or the dirty flag state changes,</li>
<li>There should be no recompilation or relinking of the application if the git commit has not changed.</li>
</ul>

<p>This technique meets these requirements for local builds.</p>

<h2>The Complication</h2>

<p>The spanner in the works is that I'm using CLion to remotely compile the application (key issue) on a Raspberry Pi (that specific detail isn't important). Because of how CLion works, the <code>.git</code> directory (and therefore <code>.git/index</code>) is not copied over to the remote system. Therefore <code>.git/index</code> is simply not present when compiling the code on the RPi. This technique therefore fails as the required information is simply not available to the build system on the RPi.</p>

<h2>Question</h2>

<p>So I had the idea to somehow automatically create a new file, in the source directory (so that CLion will sync it to the RPi), that is based on <code>.git/index</code>, or perhaps just the output of <code>git describe</code>, on the host that CLion is running on. I would need this file to be updated whenever the git commit changes. The contents can be used to populate <code>GIT_COMMIT</code>. If this file is appended to <code>CMAKE_CONFIGURE_DEPENDS</code> then it will trigger a reconfiguration when the timestamp on the file changes, regardless of the contents. Instead I'd want the reconfigure to only happen if the <em>contents</em> of the file changes, since it will most likely be automatically updated by a generated makefile each time the makefile runs, but without changing the actual commit.</p>

<p>What is the right way to so solve this problem?</p>

<p>At this point I'm wondering if I'm overcomplicating things, so I'd appreciate any comments that might suggest an alternative approach, please.</p>
","","","3","301","1","0","","2019-11-27 21:46:18","","2019-11-27 22:30:17",""
"59124308","Debugging doesn't work using CLion in Catalina","<debugging><clion>","<p>After the update debugging doesn't work in any project in CLion. By not working I imply that it ignores all the breakpoints which are not muted. Is it a common issue with macOS 10.15? </p>
","","","2","74","0","1","","2019-12-01 09:40:35","2019-12-01 09:46:05","2020-11-17 08:15:07",""
"59348178","How to link OpenCl library to Clion IDE","<c++><opencl>","<p>I am writing a HellowWorld example using opencl library in Clion.
My problem is problem is that i get the error message</p>

<pre><code>[ 50%] Linking CXX executable HelloWorldOpencl
/usr/lib64/gcc/x86_64-suse-linux/7/../../../../x86_64-suse-linux/bin/ld: CMakeFiles/HelloWorldOpencl.dir/main.cpp.o: in function `main':
/home/belkacem/CLionProjects/HelloWorldOpencl/main.cpp:11: undefined reference to `clGetPlatformIDs'
collect2: error: ld returned 1 exit status
gmake[2]: *** [CMakeFiles/HelloWorldOpencl.dir/build.make:84: HelloWorldOpencl] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:76: CMakeFiles/HelloWorldOpencl.dir/all] Error 2
gmake: *** [Makefile:84: all] Error 2
</code></pre>

<p>my opencl is installed correctly in the following directiries</p>

<pre><code>libOpenCL1 - OpenCL ICD Bindings

/etc/alternatives/libOpenCL.so.1
/usr/lib64/libOpenCL.so.1
/usr/lib64/ocl-icd
/usr/lib64/ocl-icd/libOpenCL.so.1
/usr/lib64/ocl-icd/libOpenCL.so.1.0.0
/usr/share/doc/packages/libOpenCL1
/usr/share/doc/packages/libOpenCL1/README

7 files total
</code></pre>

<p>How i can link the library with Clion IDE?</p>
","","","1","268","1","1","","2019-12-15 21:21:47","","2019-12-19 04:46:40",""
"59345046","Clion, cmake DSO missing when building simple2d","<cmake><clion>","<p>I have started with a project that are using the simple2d library (<a href=""https://github.com/simple2d/simple2d"" rel=""nofollow noreferrer"">https://github.com/simple2d/simple2d</a>). But when I try to build my small example project I get a DSO missing error. I think a have manage to link the dependencies for simple2d, but apparently I'm still some thing.</p>

<p>Here is the output:</p>

<pre><code>&gt; ====================[ Build | c_game | Debug ]==================================
/home/fredrik/.local/share/JetBrains/Toolbox/apps/CLion/ch-0/192.5728.100/bin/cmake/linux/bin/cmake --build /home/fredrik/Repos/c_game/cmake-build-debug --target c_game -- -j 2 -m
[ 50%] Linking C executable c_game
/usr/bin/ld: /usr/local/lib/libsimple2d.a(gl.o): undefined reference to symbol 'fmin@@GLIBC_2.2.5'
//lib/x86_64-linux-gnu/libm.so.6: error adding symbols: DSO missing from command line
collect2: error: ld returned 1 exit status
CMakeFiles/c_game.dir/build.make:85: recipe for target 'c_game' failed
make[3]: *** [c_game] Error 1
CMakeFiles/Makefile2:72: recipe for target 'CMakeFiles/c_game.dir/all' failed
make[2]: *** [CMakeFiles/c_game.dir/all] Error 2
CMakeFiles/Makefile2:84: recipe for target 'CMakeFiles/c_game.dir/rule' failed
make[1]: *** [CMakeFiles/c_game.dir/rule] Error 2
Makefile:118: recipe for target 'c_game' failed
make: *** [c_game] Error 2
</code></pre>

<p>And here is my CMakeList.txt, I hope someone can help me.</p>

<pre><code>cmake_minimum_required(VERSION 3.14)
project(c_game C)

set(CMAKE_C_STANDARD 11)

find_package(SDL2 REQUIRED)
find_package(GLEW REQUIRED)

include_directories(${SDL2_INCLUDE_DIRS})

add_executable(c_game main.c)

find_library(SIMPLE2D_LIB libsimple2d.a /usr/local/lib)
message(${SIMPLE2D_LIB})
message(${SDL2_INCLUDE_DIRS})
message(${GLEW_INCLUDE_DIRS})
target_include_directories(c_game PUBLIC ${SDL2_INCLUDE_DIRS} ${GLEW_INCLUDE_DIRS})
target_link_libraries(c_game ${SIMPLE2D_LIB} ${SDL2_LIBRARIES} ${GLEW_LIBRARIES})
</code></pre>
","","","1","99","0","5","","2019-12-15 14:54:30","","2019-12-15 14:54:30",""
"56012756","How can I get `cmake` work in JetBrains CLion to compile Emscripten/WebAssembly?","<c++><cmake><clion><emscripten><webassembly>","<p>I am trying to properly setup <strong>JetBrains CLion 2019.1</strong> to build <em>WebAssembly</em> from <em>C</em> source code. 
I've tried almost everything, however, nothing works. I do not get any <strong>WebAssembly</strong> build. All I get is:</p>

<ul>
<li><code>WasmText.js</code></li>
<li><code>WasmTest.js.mem</code></li>
<li><code>WasmTest.cbp</code></li>
</ul>

<p>When I run <code>em++ main.cpp -o out/index.html -s WASM=1 -O3</code> on the command line, I actually get</p>

<ul>
<li><code>index.html</code></li>
<li><code>index.js</code></li>
<li><code>index.wasm</code></li>
</ul>

<p>The result has a much smaller size as well.</p>

<p>I have setup a <strong>Build, Executen, Deployment</strong> -> <strong>CMake</strong> configuration with the following settings:</p>

<h3>Build Type</h3>

<p>MinSizeRel</p>

<h3>Tool Chain</h3>

<p>Use default: System</p>

<p><em>(I've tried to setup my own tool chain using emscripten sdk, however, CLion  performs some tests on setup and complains that it cannot compile a simple test file with the <code>em++</code>.)</em></p>

<h3>CMake Options</h3>

<p>I've set a path variable <code>$EMSCRIPTEN_ROOT$</code> in CLion. I can confirm it properly works passing it as <code>${EMSCRIPTEN_ROOT}</code> to the <code>CMakeLists.txt</code> as argument.</p>

<pre><code>-DCMAKE_TOOLCHAIN_FILE=${EMSCRIPTEN_ROOT}/cmake/Modules/Platform/Emscripten.cmake
-G""Unix Makefiles""
--debug-output
</code></pre>

<h3>Environment</h3>

<pre><code>EMSDK=/wrk/dev/emsdk
EMSCRIPTEN=/wrk/dev/emsdk/emscripten/1.37.12
EMSDK_NODE=/wrk/dev/emsdk/node/4.1.1_64bit/bin/node
LLVM_ROOT=/wrk/dev/emsdk/clang/e1.37.12_64bit
BINARYEN_ROOT=/wrk/dev/emsdk/clang/e1.37.12_64bit/binaryen
EMSCRIPTEN_NATIVE_OPTIMIZER=/wrk/dev/emsdk/clang/e1.37.12_64bit/optimizer
EM_CONFIG=/home/webmaster/.emscripten
PATH=/wrk/dev/emsdk:/wrk/dev/emsdk/clang/e1.37.12_64bit:/wrk/dev/emsdk/node/4.1.1_64bit/bin:/wrk/dev/emsdk/emscripten/1.37.12:/bin:/usr/bin:/usr/lib/bin
</code></pre>

<h3>Build Options</h3>

<p>-j 2  </p>

<p><em>(automatically set when field is empty)</em></p>

<h2>Source File</h2>

<pre><code>#include &lt;iostream&gt;

int main()
{
  std::cout &lt;&lt; ""Hello, World!"" &lt;&lt; std::endl;
  return 0;
}
</code></pre>

<h2>CMakeLists.txt</h2>

<pre><code>cmake_minimum_required(VERSION 3.14)
project(WasmTest)

set(CMAKE_CXX_STANDARD 17)
set(FLAGS ""-o index.html -s WASM=1 -O3"")

set(CMAKE_C_FLAGS_RELEASE ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_C_FLAGS_RELEASE"")
set(CMAKE_C_FLAGS_MINSIZEREL ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_C_FLAGS_MINSIZEREL"")
set(CMAKE_C_FLAGS_RELWITHDEBINFO ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_C_FLAGS_RELWITHDEBINFO"")
set(CMAKE_CXX_FLAGS_RELEASE ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_CXX_FLAGS_RELEASE"")
set(CMAKE_CXX_FLAGS_MINSIZEREL ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_CXX_FLAGS_MINSIZEREL"")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_CXX_FLAGS_RELWITHDEBINFO"")

set(CMAKE_EXE_LINKER_FLAGS_RELEASE ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_EXE_LINKER_FLAGS_RELEASE"")
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_EXE_LINKER_FLAGS_MINSIZEREL"")
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO"")
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_SHARED_LINKER_FLAGS_RELEASE"")
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL"")
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO"")
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_MODULE_LINKER_FLAGS_RELEASE"")
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL"")
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO ""${FLAGS}"" CACHE STRING ""Emscripten-overridden CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO"")

add_executable(WasmTest main.cpp)
</code></pre>

<h2>Reset Cache and Reload Project</h2>

<pre><code>/opt/jetbrains/apps/CLion/ch-1/191.6707.69/bin/cmake/linux/bin/cmake -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_TOOLCHAIN_FILE=/wrk/dev/emsdk/emscripten/1.37.12/cmake/Modules/Platform/Emscripten.cmake ""-GUnix Makefiles"" --debug-output -G ""CodeBlocks - Unix Makefiles"" /wrk/c/WasmTest
Running with debug output on.
-- Configuring done
-- Generating /wrk/c/WasmTest/cmake-build-minsizerel
   Called from: [1] /wrk/c/WasmTest/CMakeLists.txt
-- Generating done
-- Build files have been written to: /wrk/c/WasmTest/cmake-build-minsizerel

[Finished]
</code></pre>

<h2>Rebuild All in 'MinSizeRel'</h2>

<pre><code>====================[ Clean | MinSizeRel ]======================================
/opt/jetbrains/apps/CLion/ch-1/191.6707.69/bin/cmake/linux/bin/cmake --build /wrk/c/WasmTest/cmake-build-minsizerel --target clean -- -j 2

Clean finished

====================[ Build | all | MinSizeRel ]================================
/opt/jetbrains/apps/CLion/ch-1/191.6707.69/bin/cmake/linux/bin/cmake --build /wrk/c/WasmTest/cmake-build-minsizerel --target all -- -j 2
Scanning dependencies of target WasmTest
[ 50%] Building CXX object CMakeFiles/WasmTest.dir/main.cpp.o
[100%] Linking CXX executable WasmTest.js
[100%] Built target WasmTest

Build finished
</code></pre>

<hr>

<h3>FYI: This is the <code>Emscripten.cmake</code> file</h3>

<p>from the original <em>emscripten</em> source referred by the argument
<code>-DCMAKE_TOOLCHAIN_FILE=${EMSCRIPTEN_ROOT}/cmake/Modules/Platform/Emscripten.cmake</code></p>

<pre><code># This file is a 'toolchain description file' for CMake.
# It teaches CMake about the Emscripten compiler, so that CMake can generate makefiles
# from CMakeLists.txt that invoke emcc.

# Since updating to LLVM 3.9, its build system requires CMake 3.4.3 or newer, so use this as a
# baseline requirement for Emscripten toolchain as well, as developers will have this version or
# they would have been unable to build LLVM in the first place.
cmake_minimum_required(VERSION 3.4.3)

# To use this toolchain file with CMake, invoke CMake with the following command line parameters
# cmake -DCMAKE_TOOLCHAIN_FILE=&lt;EmscriptenRoot&gt;/cmake/Modules/Platform/Emscripten.cmake
#       -DCMAKE_BUILD_TYPE=&lt;Debug|RelWithDebInfo|Release|MinSizeRel&gt;
#       -G ""Unix Makefiles"" (Linux and OSX)
#       -G ""MinGW Makefiles"" (Windows)
#       &lt;path/to/CMakeLists.txt&gt; # Note, pass in here ONLY the path to the file, not the filename 'CMakeLists.txt' itself.

# After that, build the generated Makefile with the command 'make'. On Windows, you may download and use 'mingw32-make' instead.

# The following variable describes the target OS we are building to.
set(CMAKE_SYSTEM_NAME Emscripten)
set(CMAKE_SYSTEM_VERSION 1)

set(CMAKE_CROSSCOMPILING TRUE)

# Advertise Emscripten as a 32-bit platform (as opposed to CMAKE_SYSTEM_PROCESSOR=x86_64 for 64-bit platform),
# since some projects (e.g. OpenCV) use this to detect bitness.
set(CMAKE_SYSTEM_PROCESSOR x86)

# Tell CMake how it should instruct the compiler to generate multiple versions of an outputted .so library: e.g. ""libfoo.so, libfoo.so.1, libfoo.so.1.4"" etc.
# This feature is activated if a shared library project has the property SOVERSION defined.
set(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG ""-Wl,-soname,"")

# In CMake, CMAKE_HOST_WIN32 is set when we are cross-compiling from Win32 to Emscripten: http://www.cmake.org/cmake/help/v2.8.12/cmake.html#variable:CMAKE_HOST_WIN32
# The variable WIN32 is set only when the target arch that will run the code will be WIN32, so unset WIN32 when cross-compiling.
set(WIN32)

# The same logic as above applies for APPLE and CMAKE_HOST_APPLE, so unset APPLE.
set(APPLE)

# And for UNIX and CMAKE_HOST_UNIX. However, Emscripten is often able to mimic being a Linux/Unix system, in which case a lot of existing CMakeLists.txt files can be configured for Emscripten while assuming UNIX build, so this is left enabled.
set(UNIX 1)

# Do a no-op access on the CMAKE_TOOLCHAIN_FILE variable so that CMake will not issue a warning on it being unused.
if (CMAKE_TOOLCHAIN_FILE)
endif()

# In order for check_function_exists() detection to work, we must signal it to pass an additional flag, which causes the compilation
# to abort if linking results in any undefined symbols. The CMake detection mechanism depends on the undefined symbol error to be raised.
set(CMAKE_REQUIRED_FLAGS ""-s ERROR_ON_UNDEFINED_SYMBOLS=1"")

# Locate where the Emscripten compiler resides in relative to this toolchain file.
if (""${EMSCRIPTEN_ROOT_PATH}"" STREQUAL """")
    get_filename_component(GUESS_EMSCRIPTEN_ROOT_PATH ""${CMAKE_CURRENT_LIST_DIR}/../../../"" ABSOLUTE)
    if (EXISTS ""${GUESS_EMSCRIPTEN_ROOT_PATH}/emranlib"")
        set(EMSCRIPTEN_ROOT_PATH ""${GUESS_EMSCRIPTEN_ROOT_PATH}"")
    endif()
endif()

# If not found by above search, locate using the EMSCRIPTEN environment variable.
if (""${EMSCRIPTEN_ROOT_PATH}"" STREQUAL """")
    set(EMSCRIPTEN_ROOT_PATH ""$ENV{EMSCRIPTEN}"")
endif()

# Abort if not found. 
if (""${EMSCRIPTEN_ROOT_PATH}"" STREQUAL """")
    message(FATAL_ERROR ""Could not locate the Emscripten compiler toolchain directory! Either set the EMSCRIPTEN environment variable, or pass -DEMSCRIPTEN_ROOT_PATH=xxx to CMake to explicitly specify the location of the compiler!"")
endif()

# Normalize, convert Windows backslashes to forward slashes or CMake will crash.
get_filename_component(EMSCRIPTEN_ROOT_PATH ""${EMSCRIPTEN_ROOT_PATH}"" ABSOLUTE)

list(APPEND CMAKE_MODULE_PATH ""${EMSCRIPTEN_ROOT_PATH}/cmake/Modules"")

list(APPEND CMAKE_FIND_ROOT_PATH ""${EMSCRIPTEN_ROOT_PATH}/system"")

if (CMAKE_HOST_WIN32)
    set(EMCC_SUFFIX "".bat"")
else()
    set(EMCC_SUFFIX """")
endif()

# Specify the compilers to use for C and C++
if (""${CMAKE_C_COMPILER}"" STREQUAL """")
    set(CMAKE_C_COMPILER ""${EMSCRIPTEN_ROOT_PATH}/emcc${EMCC_SUFFIX}"")
endif()
if (""${CMAKE_CXX_COMPILER}"" STREQUAL """")
    set(CMAKE_CXX_COMPILER ""${EMSCRIPTEN_ROOT_PATH}/em++${EMCC_SUFFIX}"")
endif()

if (""${CMAKE_AR}"" STREQUAL """")
    set(CMAKE_AR ""${EMSCRIPTEN_ROOT_PATH}/emar${EMCC_SUFFIX}"" CACHE FILEPATH ""Emscripten ar"")
endif()

if (""${CMAKE_RANLIB}"" STREQUAL """")
    set(CMAKE_RANLIB ""${EMSCRIPTEN_ROOT_PATH}/emranlib${EMCC_SUFFIX}"" CACHE FILEPATH ""Emscripten ranlib"")
endif()

# Don't allow CMake to autodetect the compiler, since it does not understand Emscripten.
# Pass -DEMSCRIPTEN_FORCE_COMPILERS=OFF to disable (sensible mostly only for testing/debugging purposes).
option(EMSCRIPTEN_FORCE_COMPILERS ""Force C/C++ compiler"" ON)
if (EMSCRIPTEN_FORCE_COMPILERS)

    # Detect version of the 'emcc' executable. Note that for CMake, we tell it the version of the Clang compiler and not the version of Emscripten,
    # because CMake understands Clang better.
    if (NOT CMAKE_C_COMPILER_VERSION) # Toolchain script is interpreted multiple times, so don't rerun the check if already done before.
        execute_process(COMMAND ""${CMAKE_C_COMPILER}"" ""-v"" RESULT_VARIABLE _cmake_compiler_result ERROR_VARIABLE _cmake_compiler_output OUTPUT_QUIET)
        if (NOT _cmake_compiler_result EQUAL 0)
            message(FATAL_ERROR ""Failed to fetch compiler version information with command \""'${CMAKE_C_COMPILER}' -v\""! Process returned with error code ${_cmake_compiler_result}."")
        endif()
        if (NOT ""${_cmake_compiler_output}"" MATCHES ""Emscripten"")
            message(FATAL_ERROR ""System LLVM compiler cannot be used to build with Emscripten! Check Emscripten's LLVM toolchain location in .emscripten configuration file, and make sure to point CMAKE_C_COMPILER to where emcc is located. (was pointing to \""${CMAKE_C_COMPILER}\"")"")
        endif()
        string(REGEX MATCH ""clang version ([0-9\.]+)"" _dummy_unused ""${_cmake_compiler_output}"")
        if (NOT CMAKE_MATCH_1)
            message(FATAL_ERROR ""Failed to regex parse Clang compiler version from version string: ${_cmake_compiler_output}"")
        endif()

        set(CMAKE_C_COMPILER_VERSION ""${CMAKE_MATCH_1}"")
        set(CMAKE_CXX_COMPILER_VERSION ""${CMAKE_MATCH_1}"")
        if (${CMAKE_C_COMPILER_VERSION} VERSION_LESS 3.9.0)
            message(WARNING ""CMAKE_C_COMPILER version looks too old. Was ${CMAKE_C_COMPILER_VERSION}, should be at least 3.9.0."")
        endif()
    endif()

    set(CMAKE_C_COMPILER_ID_RUN TRUE)
    set(CMAKE_C_COMPILER_FORCED TRUE)
    set(CMAKE_C_COMPILER_WORKS TRUE)
    set(CMAKE_C_COMPILER_ID Clang)
    set(CMAKE_C_STANDARD_COMPUTED_DEFAULT 11)

    set(CMAKE_CXX_COMPILER_ID_RUN TRUE)
    set(CMAKE_CXX_COMPILER_FORCED TRUE)
    set(CMAKE_CXX_COMPILER_WORKS TRUE)
    set(CMAKE_CXX_COMPILER_ID Clang)
    set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT 98)

    set(CMAKE_C_PLATFORM_ID ""emscripten"")
    set(CMAKE_CXX_PLATFORM_ID ""emscripten"")

    set(CMAKE_C_COMPILE_FEATURES ""c_function_prototypes;c_restrict;c_variadic_macros;c_static_assert"")
    set(CMAKE_C90_COMPILE_FEATURES ""c_function_prototypes"")
    set(CMAKE_C99_COMPILE_FEATURES ""c_restrict;c_variadic_macros"")
    set(CMAKE_C11_COMPILE_FEATURES ""c_static_assert"")

    set(CMAKE_CXX_COMPILE_FEATURES ""cxx_template_template_parameters;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates"")
    set(CMAKE_CXX98_COMPILE_FEATURES ""cxx_template_template_parameters"")
    set(CMAKE_CXX11_COMPILE_FEATURES ""cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates"")
    set(CMAKE_CXX14_COMPILE_FEATURES ""cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates"")
endif()

# To find programs to execute during CMake run time with find_program(), e.g. 'git' or so, we allow looking
# into system paths.
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)

# Since Emscripten is a cross-compiler, we should never look at the system-provided directories like /usr/include and so on.
# Therefore only CMAKE_FIND_ROOT_PATH should be used as a find directory. See http://www.cmake.org/cmake/help/v3.0/variable/CMAKE_FIND_ROOT_PATH_MODE_INCLUDE.html
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

set(CMAKE_SYSTEM_INCLUDE_PATH ""${EMSCRIPTEN_ROOT_PATH}/system/include"")

# We would prefer to specify a standard set of Clang+Emscripten-friendly common convention for suffix files, especially for CMake executable files,
# but if these are adjusted, ${CMAKE_ROOT}/Modules/CheckIncludeFile.cmake will fail, since it depends on being able to compile output files with predefined names.
#SET(CMAKE_LINK_LIBRARY_SUFFIX """")
#SET(CMAKE_STATIC_LIBRARY_PREFIX """")
#SET(CMAKE_SHARED_LIBRARY_PREFIX """")
#SET(CMAKE_FIND_LIBRARY_PREFIXES """")
#SET(CMAKE_FIND_LIBRARY_SUFFIXES "".bc"")
#SET(CMAKE_SHARED_LIBRARY_SUFFIX "".bc"")

option(EMSCRIPTEN_GENERATE_BITCODE_STATIC_LIBRARIES ""If set, static library targets generate LLVM bitcode files (.bc). If disabled (default), UNIX ar archives (.a) are generated."" OFF)
if (EMSCRIPTEN_GENERATE_BITCODE_STATIC_LIBRARIES)
    SET(CMAKE_STATIC_LIBRARY_SUFFIX "".bc"")

    SET(CMAKE_C_CREATE_STATIC_LIBRARY ""&lt;CMAKE_C_COMPILER&gt; -o &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"")
    SET(CMAKE_CXX_CREATE_STATIC_LIBRARY ""&lt;CMAKE_CXX_COMPILER&gt; -o &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"")
else()
    # Specify the program to use when building static libraries. Force Emscripten-related command line options to clang.
    SET(CMAKE_C_CREATE_STATIC_LIBRARY ""&lt;CMAKE_AR&gt; rc &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"")
    SET(CMAKE_CXX_CREATE_STATIC_LIBRARY ""&lt;CMAKE_AR&gt; rc &lt;TARGET&gt; &lt;LINK_FLAGS&gt; &lt;OBJECTS&gt;"")
endif()

SET(CMAKE_EXECUTABLE_SUFFIX "".js"")

SET(CMAKE_C_USE_RESPONSE_FILE_FOR_LIBRARIES 1)
SET(CMAKE_CXX_USE_RESPONSE_FILE_FOR_LIBRARIES 1)
SET(CMAKE_C_USE_RESPONSE_FILE_FOR_OBJECTS 1)
SET(CMAKE_CXX_USE_RESPONSE_FILE_FOR_OBJECTS 1)
SET(CMAKE_C_USE_RESPONSE_FILE_FOR_INCLUDES 1)
SET(CMAKE_CXX_USE_RESPONSE_FILE_FOR_INCLUDES 1)

set(CMAKE_C_RESPONSE_FILE_LINK_FLAG ""@"")
set(CMAKE_CXX_RESPONSE_FILE_LINK_FLAG ""@"")

# Set a global EMSCRIPTEN variable that can be used in client CMakeLists.txt to detect when building using Emscripten.
set(EMSCRIPTEN 1 CACHE BOOL ""If true, we are targeting Emscripten output."")

# Hardwire support for cmake-2.8/Modules/CMakeBackwardsCompatibilityC.cmake without having CMake to try complex things
# to autodetect these:
set(CMAKE_SKIP_COMPATIBILITY_TESTS 1)
set(CMAKE_SIZEOF_CHAR 1)
set(CMAKE_SIZEOF_UNSIGNED_SHORT 2)
set(CMAKE_SIZEOF_SHORT 2)
set(CMAKE_SIZEOF_INT 4)
set(CMAKE_SIZEOF_UNSIGNED_LONG 4)
set(CMAKE_SIZEOF_UNSIGNED_INT 4)
set(CMAKE_SIZEOF_LONG 4)
set(CMAKE_SIZEOF_VOID_P 4)
set(CMAKE_SIZEOF_FLOAT 4)
set(CMAKE_SIZEOF_DOUBLE 8)
set(CMAKE_C_SIZEOF_DATA_PTR 4)
set(CMAKE_CXX_SIZEOF_DATA_PTR 4)
set(CMAKE_HAVE_LIMITS_H 1)
set(CMAKE_HAVE_UNISTD_H 1)
set(CMAKE_HAVE_PTHREAD_H 1)
set(CMAKE_HAVE_SYS_PRCTL_H 1)
set(CMAKE_WORDS_BIGENDIAN 0)
set(CMAKE_DL_LIBS)

set(CMAKE_C_FLAGS_RELEASE ""-DNDEBUG -O2"" CACHE STRING ""Emscripten-overridden CMAKE_C_FLAGS_RELEASE"")
set(CMAKE_C_FLAGS_MINSIZEREL ""-DNDEBUG -Os"" CACHE STRING ""Emscripten-overridden CMAKE_C_FLAGS_MINSIZEREL"")
set(CMAKE_C_FLAGS_RELWITHDEBINFO ""-O2"" CACHE STRING ""Emscripten-overridden CMAKE_C_FLAGS_RELWITHDEBINFO"")
set(CMAKE_CXX_FLAGS_RELEASE ""-DNDEBUG -O2"" CACHE STRING ""Emscripten-overridden CMAKE_CXX_FLAGS_RELEASE"")
set(CMAKE_CXX_FLAGS_MINSIZEREL ""-DNDEBUG -Os"" CACHE STRING ""Emscripten-overridden CMAKE_CXX_FLAGS_MINSIZEREL"")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO ""-O2"" CACHE STRING ""Emscripten-overridden CMAKE_CXX_FLAGS_RELWITHDEBINFO"")

set(CMAKE_EXE_LINKER_FLAGS_RELEASE ""-O2"" CACHE STRING ""Emscripten-overridden CMAKE_EXE_LINKER_FLAGS_RELEASE"")
set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL ""-Os"" CACHE STRING ""Emscripten-overridden CMAKE_EXE_LINKER_FLAGS_MINSIZEREL"")
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ""-O2 -g"" CACHE STRING ""Emscripten-overridden CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO"")
set(CMAKE_SHARED_LINKER_FLAGS_RELEASE ""-O2"" CACHE STRING ""Emscripten-overridden CMAKE_SHARED_LINKER_FLAGS_RELEASE"")
set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ""-Os"" CACHE STRING ""Emscripten-overridden CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL"")
set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ""-O2 -g"" CACHE STRING ""Emscripten-overridden CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO"")
set(CMAKE_MODULE_LINKER_FLAGS_RELEASE ""-O2"" CACHE STRING ""Emscripten-overridden CMAKE_MODULE_LINKER_FLAGS_RELEASE"")
set(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL ""-Os"" CACHE STRING ""Emscripten-overridden CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL"")
set(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO ""-O2 -g"" CACHE STRING ""Emscripten-overridden CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO"")

function(em_validate_asmjs_after_build target)
    add_custom_command(TARGET ${target} POST_BUILD COMMAND ${CMAKE_COMMAND} -E echo Validating build output for asm.js... COMMAND ""python"" ARGS ""${EMSCRIPTEN_ROOT_PATH}/tools/validate_asmjs.py"" ""$&lt;TARGET_FILE:${target}&gt;"")
endfunction()

# A global counter to guarantee unique names for js library files.
set(link_js_counter 1)

# Internal function: Do not call from user CMakeLists.txt files. Use one of em_link_js_library()/em_link_pre_js()/em_link_post_js() instead.
function(em_add_tracked_link_flag target flagname)

    # User can input list of JS files either as a single list, or as variable arguments to this function, so iterate over varargs, and treat each
    # item in varargs as a list itself, to support both syntax forms.
    foreach(jsFileList ${ARGN})
        foreach(jsfile ${jsFileList})
            # If the user edits the JS file, we want to relink the emscripten application, but unfortunately it is not possible to make a link step
            # depend directly on a source file. Instead, we must make a dummy no-op build target on that source file, and make the project depend on
            # that target.

            # Sanitate the source .js filename to a good symbol name to use as a dummy filename.
            get_filename_component(jsname ""${jsfile}"" NAME)
            string(REGEX REPLACE ""[/:\\\\.\ ]"" ""_"" dummy_js_target ${jsname})
            set(dummy_lib_name ${target}_${link_js_counter}_${dummy_js_target})
            set(dummy_c_name ""${CMAKE_BINARY_DIR}/${dummy_js_target}_tracker.c"")

            # Create a new static library target that with a single dummy .c file.
            add_library(${dummy_lib_name} STATIC ${dummy_c_name})
            # Make the dummy .c file depend on the .js file we are linking, so that if the .js file is edited, the dummy .c file, and hence the static library will be rebuild (no-op). This causes the main application to be relinked, which is what we want.
            # This approach was recommended by http://www.cmake.org/pipermail/cmake/2010-May/037206.html
            add_custom_command(OUTPUT ${dummy_c_name} COMMAND ${CMAKE_COMMAND} -E touch ${dummy_c_name} DEPENDS ${jsfile})
            target_link_libraries(${target} ${dummy_lib_name})

            # Link the js-library to the target
            # When a linked library starts with a ""-"" cmake will just add it to the linker command line as it is.
            # The advantage of doing it this way is that the js-library will also be automatically linked to targets
            # that depend on this target.
            get_filename_component(js_file_absolute_path ""${jsfile}"" ABSOLUTE )
            target_link_libraries(${target} ""${flagname} \""${js_file_absolute_path}\"""")

            math(EXPR link_js_counter ""${link_js_counter} + 1"")
        endforeach()
    endforeach()
endfunction()

# This function links a (list of ) .js library file(s) to the given CMake project.
# Example: em_link_js_library(my_executable ""lib1.js"" ""lib2.js"")
#    will result in emcc passing --js-library lib1.js --js-library lib2.js to the emscripten linker, as well as
#    tracking the modification timestamp between the linked .js files and the main project, so that editing the .js file
#    will cause the target project to be relinked.
function(em_link_js_library target)
    em_add_tracked_link_flag(${target} ""--js-library"" ${ARGN})
endfunction()

# This function is identical to em_link_js_library(), except the .js files will be added with '--pre-js file.js' command line flag,
# which is generally used to add some preamble .js code to a generated output file.
function(em_link_pre_js target)
    em_add_tracked_link_flag(${target} ""--pre-js"" ${ARGN})
endfunction()

# This function is identical to em_link_js_library(), except the .js files will be added with '--post-js file.js' command line flag,
# which is generally used to add some postamble .js code to a generated output file.
function(em_link_post_js target)
    em_add_tracked_link_flag(${target} ""--post-js"" ${ARGN})
endfunction()

# Experimental support for targeting generation of Visual Studio project files (vs-tool) of Emscripten projects for Windows.
# To use this, pass the combination -G ""Visual Studio 10"" -DCMAKE_TOOLCHAIN_FILE=Emscripten.cmake
if (""${CMAKE_GENERATOR}"" MATCHES ""^Visual Studio.*"")
    # By default, CMake generates VS project files with a &lt;GenerateManifest&gt;true&lt;/GenerateManifest&gt; directive.
    # This causes VS to attempt to invoke rc.exe during the build, which will fail since app manifests are meaningless for Emscripten.
    # To disable this, add the following linker flag. This flag will not go to emcc, since the Visual Studio CMake generator will swallow it.
    set(EMSCRIPTEN_VS_LINKER_FLAGS ""/MANIFEST:NO"")
    # CMake is hardcoded to write a ClCompile directive &lt;ObjectFileName&gt;$(IntDir)&lt;/ObjectFileName&gt; in all VS project files it generates.
    # This makes VS pass emcc a -o param that points to a directory instead of a file, which causes emcc autogenerate the output filename.
    # CMake is hardcoded to assume all object files have the suffix .obj, so adjust the emcc-autogenerated default suffix name to match.
    set(EMSCRIPTEN_VS_LINKER_FLAGS ""${EMSCRIPTEN_VS_LINKER_FLAGS} --default-obj-ext .obj"")
    # Also hint CMake that it should not hardcode &lt;ObjectFileName&gt; generation. Requires a custom CMake build for this to work (ignored on others)
    # See http://www.cmake.org/Bug/view.php?id=14673 and https://github.com/juj/CMake
    set(CMAKE_VS_NO_DEFAULT_OBJECTFILENAME 1)

    # Apply and cache Emscripten Visual Studio IDE-specific linker flags.
    set(CMAKE_EXE_LINKER_FLAGS ""${CMAKE_EXE_LINKER_FLAGS} ${EMSCRIPTEN_VS_LINKER_FLAGS}"" CACHE STRING """")
    set(CMAKE_SHARED_LINKER_FLAGS ""${CMAKE_SHARED_LINKER_FLAGS} ${EMSCRIPTEN_VS_LINKER_FLAGS}"" CACHE STRING """")
    set(CMAKE_MODULE_LINKER_FLAGS ""${CMAKE_MODULE_LINKER_FLAGS} ${EMSCRIPTEN_VS_LINKER_FLAGS}"" CACHE STRING """")
endif()

if (NOT DEFINED CMAKE_CROSSCOMPILING_EMULATOR)
  find_program(NODE_JS_EXECUTABLE NAMES nodejs node)
  if(NODE_JS_EXECUTABLE)
    set(CMAKE_CROSSCOMPILING_EMULATOR ""${NODE_JS_EXECUTABLE}"" CACHE FILEPATH ""Path to the emulator for the target system."")
  endif()
endif()
# No-op on CMAKE_CROSSCOMPILING_EMULATOR so older versions of cmake do not
# complain about unused CMake variable.
if(CMAKE_CROSSCOMPILING_EMULATOR)
endif()
</code></pre>
","","","9","2849","2","2","3","2019-05-06 21:38:23","2019-05-12 22:26:26","2020-11-02 18:08:25",""
"56391056","Deployment files filled with zero bytes in CLion Deployment","<ssh><clion><jetbrains-ide><corruption>","<p>I am trying to upload file to remote machine with Deployment feature, but it corrupts them, filling with zero bytes.</p>

<p>What can be wrong?</p>

<hr>

<p>This is happening with only one remote machine. Deploying onto another ones goes normal. So, it is some interference between machine config and Jetbrains config/bugs.</p>

<hr>

<p>SFTP put works fine on the same machine.</p>

<hr>

<p>If I create Russian characters directory in <code>/root</code> folder, I get the following error when I am listing <code>/root</code> folder:</p>

<pre><code>2019-06-24 17:06:49,443 [  25890]  DEBUG - ins.plugins.webDeployment.sftp - cd ""/"" 
2019-06-24 17:06:49,459 [  25906]  DEBUG - ins.plugins.webDeployment.sftp - stat ""root"" 
2019-06-24 17:06:49,467 [  25914]  DEBUG - ins.plugins.webDeployment.sftp - drwx------ 0 0 4096 Mon Jun 24 17:05:39 MSK 2019, mtime 1,561,385,139 
2019-06-24 17:06:49,469 [  25916]   WARN - i.remotebrowser.ServerTreeNode - Could not list the contents of folder ""sftp://cmnanny/root"". 
org.apache.commons.vfs2.FileSystemException: Could not list the contents of folder ""sftp://cmnanny/root"".
    at org.apache.commons.vfs2.provider.AbstractFileObject.getChildren(AbstractFileObject.java:1101)
    at com.jetbrains.plugins.webDeployment.DeploymentPathUtils.getChildren(DeploymentPathUtils.java:373)
    at com.jetbrains.plugins.webDeployment.ui.remotebrowser.ServerTreeNode$1.compute(ServerTreeNode.java:250)
    at com.jetbrains.plugins.webDeployment.ui.remotebrowser.ServerTreeNode$1.compute(ServerTreeNode.java:247)
    at com.jetbrains.plugins.webDeployment.connections.RemoteConnectionPool$RemoteConnectionImpl.executeServerOperation(RemoteConnectionPool.java:141)
    at com.jetbrains.plugins.webDeployment.ui.remotebrowser.ServerTreeNode.getChildren(ServerTreeNode.java:247)
    at com.jetbrains.plugins.webDeployment.ui.remotebrowser.ServerTreeNode.createChildren(ServerTreeNode.java:206)
    at com.jetbrains.plugins.webDeployment.ui.remotebrowser.ServerTreeNode.loadChildren(ServerTreeNode.java:166)
    at com.jetbrains.plugins.webDeployment.ui.remotebrowser.ServerTreeNode.lambda$getChildren$0(ServerTreeNode.java:157)
    at com.intellij.openapi.application.impl.ApplicationImpl$1.run(ApplicationImpl.java:311)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
    at java.lang.Thread.run(Thread.java:748)
Caused by: 4: Failure
    at com.jcraft.jsch.ChannelSftp.throwStatusError(ChannelSftp.java:2873)
    at com.jcraft.jsch.ChannelSftp.ls(ChannelSftp.java:1633)
    at com.jcraft.jsch.ChannelSftp.ls(ChannelSftp.java:1553)
    at com.jetbrains.plugins.webDeployment.config.LoggingSftpChannel.ls(LoggingSftpChannel.java:215)
    at org.apache.commons.vfs2.provider.sftp.SftpFileObject.doListChildrenResolved(SftpFileObject.java:495)
    at org.apache.commons.vfs2.provider.AbstractFileObject.getChildren(AbstractFileObject.java:1091)
</code></pre>

<p>The machine host name contains special chars like # and &amp;, may be they are confusing CLion parser?</p>
","","","1","62","0","0","","2019-05-31 08:01:16","2019-06-24 14:12:50","2019-06-24 14:12:50",""
"56396254","Clion unable to parse template","<c++><clion><file-templates>","<p>I created the following file template in Clion, but when I tried to create a file it said ""Unable to parse template"". What could be wrong?</p>

<pre><code>#include &lt;bits/stdc++.h&gt;

using namespace std;

#define endl ""\n""

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    return 0;
}
</code></pre>
","","","1","412","1","6","","2019-05-31 13:41:47","2019-05-31 13:53:46","2019-05-31 14:30:04",""
"56617618","How to set -v compiler option in CLion and see respective results","<c++><macos><linker><clion>","<p>I get the following error when linking my c++ code in CLion:</p>

<p>""clang: error: linker command failed with exit code 1 (use -v to see invocation)"" due failure to find a link-object for architecture x86_64.</p>

<p>How can I set the -v opion (linking or compiling option???) and how can I see respective results (invocation)?</p>

<p>In general, where can I see in CLion what the compiler is actually doing, e.g. which flags it uses, which files are compiled, linked, etc.</p>
","<p>Make sure to pass</p>

<pre><code>-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
</code></pre>

<p>inside CMake configuration</p>

<p><a href=""https://i.stack.imgur.com/LBejf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LBejf.png"" alt=""enter image description here""></a></p>

<p><code>CLion | Preferences | Build, Execution, Deployment | CMake</code></p>
","56617845","2","623","1","1","","2019-06-16 09:28:50","2019-06-16 09:41:14","2019-06-16 10:08:21",""
"56869010","CLion - Way to go to C/C++ standard library implementation","<c++><c><clion>","<p>In Java project with IntelliJ IDEA, I can go to the definition of any declared functions by <code>Ctrl+click</code>. But in CLion, I can see only header files.</p>

<p>Is there any way to connect <code>glibc</code> to CLion so I can see the implementation of the functions? I'm using gcc and g++ compiler.</p>
","","","2","400","0","4","","2019-07-03 11:22:18","","2019-07-03 11:22:18",""
"56875444","CLion does not resolve my std lib header symbols","<cmake><mingw><clion>","<p>I started a project on linux and now want to build it on Windows 10. Therefore I use CLion as my IDE. CLion unfortunately could not resolve standard header symbols. Please see screenshots of my setup.</p>

<p>My Toolchain:
<a href=""https://i.stack.imgur.com/HelQ1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HelQ1.png"" alt=""enter image description here""></a></p>

<p>My CMake Setup:
<a href=""https://i.stack.imgur.com/GeJbi.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GeJbi.png"" alt=""enter image description here""></a></p>

<p>My project tree:</p>

<p><a href=""https://i.stack.imgur.com/W8zQN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/W8zQN.png"" alt=""enter image description here""></a></p>

<p>Examples of the issue:
<a href=""https://i.stack.imgur.com/Bgg3B.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Bgg3B.png"" alt=""enter image description here""></a></p>

<p>My CMakeLists.txt</p>

<pre><code>cmake_minimum_required(VERSION 3.1)
project(vilsoc)

include_directories(include)
file(GLOB SOURCES ""src/*.cpp"")

set(LIBS sfml-graphics sfml-window sfml-system)

if (WIN32)
    set(SFML_DIR ""C:\\Program Files (x86)\\Libraries\\sfml-2.5.1-vs15-32bit"")
    find_package(SFML 2.5 COMPONENTS graphics audio REQUIRED)

    if(NOT TARGET spdlog)
        # Stand-alone build
        set(SPDLOG_DIR ""C:\\Program Files (x86)\\spdlog-1.3.1"")
        find_package(SPDLOG REQUIRED)
    endif()

endif (WIN32)

add_executable(vilsoc main.cpp ${SOURCES})
if (WIN32)
  target_link_libraries(vilsoc ${LIBS} spdlog::spdlog)
endif (WIN32)
if (UNIX)
  target_link_libraries(vilsoc ${LIBS})
endif (UNIX)
file(MAKE_DIRECTORY ""${CMAKE_CURRENT_BINARY_DIR}/logs"")
</code></pre>

<p>I want to point out that <code>spdlog::info</code> is a 3rd part DLL I use. If somebody can also give me a hint how to get this one resolved I would be thankful, too. But first I would love to have the standart headers being resolved.</p>
","<p>Thanks. </p>

<p>On Mac/clang, CLion 2019.2 parses your project correctly; it rightfully doesn't find <code>spdlog</code> and <code>sf</code> namespaces, as they are not included.</p>

<p>The ""standard headers on Windows"" issue may be rooted in <a href=""https://dev.my-gate.net/2014/09/15/how-to-use-mingw-w64-with-clion/"" rel=""nofollow noreferrer"">mingw64</a>, it's not actively supported. The mentioned hack may or may not help. If switching to Visual Studio compiler is an option, try it.</p>

<p>If you are desperate, set the explicit path to standard library with <a href=""https://cmake.org/cmake/help/v3.0/command/include_directories.html"" rel=""nofollow noreferrer""><code>include_directories(SYSTEM &lt;dir1&gt;)</code></a>.</p>
","56878167","1","672","1","2","1","2019-07-03 17:40:30","2019-07-03 21:14:41","2019-07-03 21:29:32",""
"57022145","How to define preprocessor definition for each configuration in CLion?","<c++><clion><build-definition>","<p>I have several build profiles in <code>CLion -&gt; Settings -&gt; Build, Execution, Deployment -&gt; CMake</code>. How can I set the preprocessor definitions for each profile, regardless of which compiler I use?</p>
","<ol>
<li>Go to <code>Settings -&gt; Build, Execution, Deployment -&gt; CMake</code>.</li>
<li>Select the profile for which you want to set preprocessor definition.</li>
<li>Write to the <code>CMake options</code> textbox: <code>-DYOUR_DEFINE_VARIABLE=1</code></li>
<li>In your CMakeLists.txt write the following:</li>
</ol>

<pre><code>if (YOUR_DEFINE_VARIABLE)
    add_definitions(-DYOUR_DEFINE_VARIABLE=1)
endif (YOUR_DEFINE_VARIABLE)
</code></pre>
","57026786","4","3573","2","0","2","2019-07-13 19:20:40","2019-07-14 13:50:40","2019-07-14 13:51:30",""
"54384188","Automatically apply clang-tidy refactoring to CLion project folder","<c++><clion><automated-refactoring><clang-tidy>","<p>Is there a way to run and automatically refactor the entire CLion project source code by applying all the <a href=""https://blog.jetbrains.com/clion/2017/04/clion-2017-2-eap-clang-tidy/"" rel=""nofollow noreferrer"">clang-tidy</a> quick-fixes?</p>
","","","1","270","0","2","","2019-01-27 00:48:59","2019-06-11 12:17:37","2019-06-11 12:17:37",""
"54869291","Evaluate and log multiple variables at breakpoint in CLion?","<clion>","<p>In CLion, is it possible to ""Evaluate and Log"" multiple variables or make a string expression at a breakpoint? Simple syntax that I try (e.g. printf) doesn't work. </p>

<p>For example, if I wanted to display the value of variables ""a"" and ""b"" in the console at a breakpoint, what do I put in the ""Evaluate and Log"" text box on the Breakpoints dialog?  Note that ""a"" and ""b"" may be different types. </p>

<p>Thanks! -- Adam</p>
","","","2","158","0","2","","2019-02-25 15:15:16","","2019-02-25 15:15:16",""
"55082073","Clion + WSL: ""Nothing to run on""","<c><clion><windows-subsystem-for-linux>","<p>I think I set everything up correctly, I've looked at all of the Clion documentation related to this that I could find:</p>

<ul>
<li><p><a href=""https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-clion.html"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-clion.html</a> </p></li>
<li><p><a href=""https://www.jetbrains.com/help/clion/quick-tutorial-on-configuring-clion-on-windows.html"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/quick-tutorial-on-configuring-clion-on-windows.html</a></p></li>
<li><p><a href=""https://confluence.jetbrains.com/display/CLION/WSL+dev+environment+configuration"" rel=""nofollow noreferrer"">https://confluence.jetbrains.com/display/CLION/WSL+dev+environment+configuration</a></p></li>
</ul>

<p>I followed each one to the best of my ability, but wasn't able to set up the debugger. I have all of the tools installed, I've tried on multiple projects, etc. </p>

<p>Main window:</p>

<p><a href=""https://i.stack.imgur.com/canh3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/canh3.png"" alt=""Main window""></a></p>

<p>Toolchains: </p>

<p><a href=""https://i.stack.imgur.com/lp3Pu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lp3Pu.png"" alt=""Toolchains window""></a></p>

<p>Error window:</p>

<p><a href=""https://i.stack.imgur.com/4pa7F.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4pa7F.png"" alt=""Debug window""></a></p>
","","","3","1669","0","3","","2019-03-09 21:20:16","2019-03-09 22:16:26","2019-03-09 22:16:26",""
"55172068","CLion cannot detect classes from sources, and does not have intellisense / code completion","<c++><clion><jetbrains-ide>","<p>I'm using CLion so I can (hopefully) have the ability to:</p>

<ul>
<li>Have code completion for a file type that is registered as a c++ file
(In my case the file type is called .hps)</li>
<li>Make full use of the error hightailing features and all of the
intellisense on my .hps files</li>
<li>Be able to use classes from other hps files, located in different
folders in my project.</li>
</ul>

<p>The general c++ style coloring is working, however, CLion won't notify me about syntax errors inside hps files:</p>

<p><a href=""https://i.stack.imgur.com/58ahc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/58ahc.png"" alt=""CLion won&#39;t notify me about syntax errors inside hps files""></a></p>

<ul>
<li>CLion won't find the source files I include, and therefore won't
detect any classes that are declared inside other hps files and their
methods (all of the folders that include that hps files are located
inside a folder named ""script""</li>
</ul>

<p>Implementation of what I'm trying to include:</p>

<p><a href=""https://i.stack.imgur.com/QGAVB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QGAVB.png"" alt=""Implementation of what I&#39;m trying to include""></a></p>

<p>And as you can see, it does not detect it:</p>

<p><a href=""https://i.stack.imgur.com/gorS8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gorS8.png"" alt=""And as you can see, it does not detect it""></a></p>

<p>Now, this is the setup of my project:</p>

<ol>
<li>My project is located and opened at folder that has a folder inside
it called ""script"" in which all of the .hps files I include are
there.</li>
<li><p>I've set a CMakeLists.txt file that runs on MinGW environment. This
is the full content of that file:</p>

<p><a href=""https://i.stack.imgur.com/zox4j.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zox4j.png"" alt=""This is the full content of that file""></a></p></li>
<li>There is a file, in my <strong>PARENT</strong> folder, called hps_api.hps, that
consists classes declarations as well. Note that CLion won't detect
it as well. Did I do something wrong? The only thing I pretty much
did was to add include directories to the cmake file, but I guess
it's not enough?</li>
</ol>

<p>In another program called CodeLite for example, it's possible to just add to a list a path to search files to include, and then CodeLite parses those files and I can go to declarations of classes without any problems. Surely it's possible with CLion as well, right?</p>
","","","1","1761","1","17","1","2019-03-14 21:10:23","2019-03-15 13:22:20","2019-03-15 13:22:20",""
"55272484","How to code/run programs in a Docker container using CLion?","<docker><clion>","<p>I am a newbie to CLion</p>

<p>I found that CLion has support for Docker.
I want to do the following:</p>

<pre><code>(Refer my Linux OS as A.)
(Refer the docker container within A as B.)


The library and environments are set up in B.
The CLion IDE is running in A.
I want to code/debug the program that runs in B using the IDE in A. 
</code></pre>

<p>Is this the functionality that CLion supports?
I read their documents, but I can't find a way to achieve it</p>

<p>Thanks</p>
","<p><strong>Edit: As of the 2021.3 preview CLion has built in support for docker.
See the <a href=""https://stackoverflow.com/a/70284237/9614249"">updated answer</a> for details.</strong></p>
<hr />
<p>As of late 2018, <a href=""https://blog.jetbrains.com/clion/2018/09/initial-remote-dev-support-clion/"" rel=""nofollow noreferrer"">Remote Development</a> in CLion is pretty easy to set up. All we have to do is set up a docker container as our &quot;Remote Host&quot;.</p>
<hr />
<p>I used the guide at <a href=""https://github.com/shuhaoliu/docker-clion-dev"" rel=""nofollow noreferrer"">https://github.com/shuhaoliu/docker-clion-dev</a> as a reference and made a few changes. Here is what worked for me:</p>
<p>(Optional) If you do not have the Docker plugin for CLion installed, get it by following <a href=""https://www.jetbrains.com/help/clion/docker.html"" rel=""nofollow noreferrer"">these instructions</a>.</p>
<h1>Step 1 - Dockerfile</h1>
<p>Modify the <a href=""https://github.com/shuhaoliu/docker-clion-dev/blob/441e6dd1dbda2e35f50c1af35077d363010febad/Dockerfile"" rel=""nofollow noreferrer"">this Dockerfile</a> to install any dependencies your project needs. Add the Dockerfile to your project.</p>
<pre><code>FROM ubuntu:cosmic

########################################################
# Essential packages for remote debugging and login in
########################################################

RUN apt-get update &amp;&amp; apt-get upgrade -y &amp;&amp; apt-get install -y \
    apt-utils gcc g++ openssh-server cmake build-essential gdb gdbserver rsync vim 

RUN mkdir /var/run/sshd
RUN echo 'root:root' | chpasswd
RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

ENV NOTVISIBLE &quot;in users profile&quot;
RUN echo &quot;export VISIBLE=now&quot; &gt;&gt; /etc/profile

# 22 for ssh server. 7777 for gdb server.
EXPOSE 22 7777

RUN useradd -ms /bin/bash debugger
RUN echo 'debugger:pwd' | chpasswd

########################################################
# Add custom packages and development environment here
########################################################

########################################################

CMD [&quot;/usr/sbin/sshd&quot;, &quot;-D&quot;]

</code></pre>
<h1>Step 2 - Docker Compose</h1>
<p>In the same directory as the previous docker file, create a docker-compose.yaml file.</p>
<pre><code># From: https://github.com/shuhaoliu/docker-clion-dev/blob/master/docker-compose.yml

version: '3'

services:
  gdbserver:
    build:
      context: ./
      dockerfile: ./Dockerfile
    image: clion_dev
    security_opt:
      - seccomp:unconfined
    container_name: debug
    ports:
      - &quot;7776:22&quot;
      - &quot;7777:7777&quot;
    volumes:
      - .:/home/debugger/code
    working_dir: /home/debugger/code
    hostname: debug

</code></pre>
<h1>Step 3</h1>
<p>Ensure that the <code>Dockerfile</code> and <code>docker-compose.yml</code> files are in the same directory.</p>
<h2>Option 3A (With CLion Docker Plugin)</h2>
<p>Right-click the <code>docker-compose.yml</code> file and select <code>Run</code>.</p>
<p><a href=""https://i.stack.imgur.com/vXn1u.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vXn1u.png"" alt=""enter image description here"" /></a></p>
<p>After a minute or two the container should be created and be viewable from Clion's Docker tab.</p>
<p><a href=""https://i.stack.imgur.com/71AVo.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/71AVo.png"" alt=""enter image description here"" /></a></p>
<h2>Option 3B (Without CLion Docker Plugin)</h2>
<p>From the directory containing the <code>Dockerfile</code> and <code>docker-compose.yml</code> files, run:</p>
<pre><code>docker-compose up -d
</code></pre>
<h1>Step 4 - Configure Toolchain</h1>
<p>Open <em><strong>Settings-&gt;Build, Execution, Deplyment -&gt; Toolchains</strong></em> and create a new <strong>Remote Host</strong> Toolchain.</p>
<p>In the <strong>Credentials</strong> field click the small folder on the right side and enter the credentials for the debugger user created in the Dockerfile.</p>
<p>In the example above the username is &quot;debugger&quot; and the password is &quot;pwd&quot;.</p>
<p><img src=""https://raw.githubusercontent.com/shuhaoliu/docker-clion-dev/441e6dd1dbda2e35f50c1af35077d363010febad/configs/toolchain-config.png"" alt=""Remote toolchain"" /></p>
<h1>Step 5 - CMake Profile</h1>
<p>Now we must set up a CMake profile to make use of our new Remote Host toolchain.</p>
<p>Navigate to <em><strong>Settings-&gt;Build, Execution, Deplyment -&gt; Cmake</strong></em> and create a new profile. The only necessary change is selecting the toolchain created in the previous step.</p>
<p><img src=""https://raw.githubusercontent.com/shuhaoliu/docker-clion-dev/441e6dd1dbda2e35f50c1af35077d363010febad/configs/cmake-config.png"" alt=""Cmake Profile"" /></p>
<h1>Step 6 - Running/Debugging the Program</h1>
<p>From the CMake tab, make sure that you have the newly created CMake profile selected.</p>
<p><a href=""https://i.stack.imgur.com/7LU3J.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7LU3J.png"" alt=""enter image description here"" /></a></p>
<p>After the CMake project loads into the container, you should be able to select the CMakeProfile you would like to use in the run configuration switcher in the top right corner of CLion.</p>
<p><a href=""https://i.stack.imgur.com/g9rm0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/g9rm0.png"" alt=""enter image description here"" /></a></p>
<p>Hopefully if everything went well you should now be able to run and ebug code in a docker container!</p>
<hr />
<p>If things didn't quite go according to plan, here are some references that helped me get things working:</p>
<ul>
<li><a href=""https://github.com/shuhaoliu/docker-clion-dev"" rel=""nofollow noreferrer"">docker-clion-dev Guide</a></li>
<li><a href=""https://blog.jetbrains.com/clion/2018/09/initial-remote-dev-support-clion/"" rel=""nofollow noreferrer"">CLion Remote Project Guide</a></li>
<li><a href=""https://www.jetbrains.com/help/clion/cmake-profile.html"" rel=""nofollow noreferrer"">Clion CMake Profiles</a></li>
<li><a href=""https://www.jetbrains.com/help/clion/how-to-create-toolchain-in-clion.html"" rel=""nofollow noreferrer"">CLion CMake Toolchains</a></li>
</ul>
","55424792","11","7912","3","1","8","2019-03-21 01:26:06","2019-03-22 15:43:24","2021-12-09 03:06:44",""
"55707493","CLion: run/debug binary on chroot'ed environment","<linux><clion><chroot>","<p>I have an SDK that has its own full linux environment, and provides the <code>sdkroot</code> command to run things inside its environment (its probably a glorified chroot). For running a binary like <code>my_great_bin</code> I do <code>sdkroot my_great_bin</code> on the terminal.</p>

<p>Now, I have a CMake project on CLion that correctly builds the binary using the sdk environment (using the cmake, gcc, etc from the sdk). </p>

<p>Unfortunately, I can't find a way to run the binary from CLion within the SDK's environment, like I do manually on the terminal. Trying to run it in CLion will simply execute the binary on my machine's environment (<code>./my_great_bin</code> instead of <code>sdkroot my_great_bin</code>).</p>

<p>EDIT: one workaround I've found is to create a run configuration where the Executable is ""sdkroot"" and the Program arguments are ""./my_great_bin"", but debugging does not work.</p>
","","","2","275","0","0","","2019-04-16 11:49:53","2019-04-17 17:33:52","2019-04-17 17:33:52",""
"61654305","Why can CLion run my program but I cannot? [Could not find procedure entry point...]","<c++><dll><mingw><box2d>","<p>CLion can run my executable fine when it builds it. However, if I were to open my built executable via double-clicking it in file explorer, it gives:</p>

<pre><code>Entry Point Not Found

The procedure entry point _ZdlPvj could not be located in the dynamic link library
&lt;Path-to-dll&gt;/libBox2D.dll
</code></pre>

<p>I've built libBox2D.dll from source with MingW too. There are no other copies of libBox2D.dll in any of my PATH directories. I am at a loss.</p>

<p>I'm on Windows compiling with Mingw using make. If any more information is needed I will happily provide it.</p>

<p>Cheers</p>

<p>[Edit] libBox2D.dll is located in the same directory as my executable.</p>
","","","1","188","1","4","","2020-05-07 09:26:12","2020-05-07 09:34:03","2020-05-07 13:17:57",""
"61669372","How to enable the resolve context switcher of a CPP file in CLion?","<parsing><cmake><clion><profile>","<p>I have two files: <code>FastSweeping.h</code> and <code>FastSweeping.cpp</code>, which I compile using two CMake profiles: ""Debug 2D"" and ""Debug 3D"".  The problem I'm facing is that I don't get the correct parsing of <code>FastSweeping.cpp</code> when I switch from ""Debug 2D"" to ""Debug 3D"".  I noticed that the <em>Resolve Context</em> switch on the bottom right is disabled, and it always shows ""Debug 2D"", even if I select ""Debug 3D"" as the CMake compilation profile at the top right.</p>

<p>If I open <code>FastSweeping.h</code> the situation is different and (macro) parsing is fine.  I also noticed that the <em>Resolve Context</em> switch is enabled, and I can select between the ""Debug 2D"" and ""Debug 3D"" contexts at will.  Why is the <em>Resolve Context</em> disabled for the case of the <code>FastSweeping.cpp</code> source file?</p>

<p>Note that when I switch the CMake profile to ""Debug 3D"" at the top right menu, compilation and linking works well (even though the resolve context for <code>FastSweeping.cpp</code> is ""stuck"" in ""Debug 3D"").</p>

<p>I have perused the documentation for CLion, and I haven't found a reason as to why the IDE is not allowing to switch the context resolve for my <code>cpp</code> file.</p>
","","","1","68","0","0","","2020-05-07 23:14:51","","2020-05-07 23:14:51",""
"61677706","CLion: Show compile-time evaluated value?","<c++><intellij-idea><clion>","<p>In Visual Studio it is possible to see compile-time evaluated constexpr values by hovering a mouse over the arguement. For instance, it will show you the value of <code>sizeof(void*)</code>. 
However, CLion seems to lack such a feature. If it is so, I am rather disappointed.</p>

<p>Do I miss something? Can it be enabled or how can one see the evaluated compile-time expressions in CLion?</p>
","","","1","320","0","1","","2020-05-08 11:05:43","","2020-05-08 11:05:43",""
"61676352","Conio.h not found in CLion","<c><ide><clion>","<p>I'm new to CLion and I'm using it on Ubuntu 18.04. I imported an existing project and when I build it, the following message appears:</p>

<pre><code>conio.h: No such file or directory
 #include &lt;conio.h&gt;
</code></pre>

<p>I thought that conio.h was a library included in most Ubuntu distributions.If not, how do I install it or how can I add the dependencies to the project?</p>

<p>Edit: For clarify, I didn't touched anything on the project settings or dependencies yet.</p>
","","","2","1461","1","2","","2020-05-08 09:47:59","","2020-05-08 11:06:34","2020-05-08 12:17:40"
"61703929","How do you save project as templates in CLion?","<templates><intellij-idea><project><clion><project-template>","<p>There is a helpful feature in Intellij that allows you to <a href=""https://www.jetbrains.com/help/idea/saving-project-as-template.html"" rel=""nofollow noreferrer"">save a project as a template</a>. In CLion, I can only see the options ""Save as Live Template"" and ""Save File as Template"" in the tools window. I have searched on YouTrack, but there doesn't seem to be a feature request for this. Is there a way to accomplish this in CLion and how would it be done if it's possible?</p>
","","","1","235","0","1","","2020-05-09 21:22:51","2020-05-09 22:10:31","2020-05-09 22:10:31",""
"61716701","How do I use wxWidgets with Mingw-W64 and CLion?","<c++><makefile><wxwidgets><clion><mingw-w64>","<p>When attempting to build the wxWidgets (3.0.5) library with MinGW-W64 (x86-64) GCC 8.1.0, I get the following output:</p>

<pre><code>wxWidgets-3.0.5\build\msw&gt; mingw32-make -f makefile.gcc SHARED=1 UNICODE=1 BUILD=debug -j4
if not exist gcc_mswuddll mkdir gcc_mswuddll
if not exist ..\..\lib\gcc_dll mkdir ..\..\lib\gcc_dll
if not exist ..\..\lib\gcc_dll\mswud\wx\setup.h copy ..\..\include\wx\msw\setup.h ..\..\lib\gcc_dll\mswud\wx\setup.h
gcc -c -o gcc_mswuddll\wxregex_regcomp.o -g -O0 -mthreads  -DHAVE_W32API_H -DNDEBUG -I..\..\include -I..\..\lib\gcc_dll\mswud -D__WXMSW__  -D_UNICODE   -MTgcc_mswuddll\wxregex_regcomp.o -MFgcc_mswuddll\wxregex_regcomp.o.d -MD -MP ../../src/regex/regcomp.c
gcc -c -o gcc_mswuddll\wxregex_regexec.o -g -O0 -mthreads  -DHAVE_W32API_H -DNDEBUG -I..\..\include -I..\..\lib\gcc_dll\mswud -D__WXMSW__  -D_UNICODE   -MTgcc_mswuddll\wxregex_regexec.o -MFgcc_mswuddll\wxregex_regexec.o.d -MD -MP ../../src/regex/regexec.c
gcc -c -o gcc_mswuddll\wxregex_regerror.o -g -O0 -mthreads  -DHAVE_W32API_H -DNDEBUG -I..\..\include -I..\..\lib\gcc_dll\mswud -D__WXMSW__  -D_UNICODE   -MTgcc_mswuddll\wxregex_regerror.o -MFgcc_mswuddll\wxregex_regerror.o.d -MD -MP ../../src/regex/regerror.c
The system cannot find the path specified.
        0 file(s) copied.
mingw32-make: *** [makefile.gcc:5651: ..\..\lib\gcc_dll\mswud\wx\setup.h] Error 1
mingw32-make: *** Waiting for unfinished jobs....
In file included from In file included from In file included from ..\..\include/wx/defs.h:27..\..\include/wx/defs.h:27                                                                                                  from ,
                 from ,
                 from                               ../../src/regex/regcustom.h:39                                                                                                                                      from ,
                 from ,
                 from                             ../../src/regex/regguts.h:38                                                                                                                                          from ,
                 from ,
                 from                             ../../src/regex/regexec.c:32                                                                                                                         :
:
                                   ..\..\include/wx/platform.h:183:10:                                                   fatal error:                                                                   #include wx/setup.h: No such file or directory
 #include wx/setup.h: No such file or directory
 #include             ""wx/setup.h""                                                                                                                                                                     
                                                                                                                                                                                                                 ^~~~~~~~~~~~
                                                                                                                                                                                                       cc
oocmpomimplpiialtalitoainot ni totener rmtmieinrnamatitenedad.t.
e
d.
mingw32-make: *** [makefile.gcc:5702: gcc_mswuddll\wxregex_regcomp.o] Error 1
mingw32-make: *** [makefile.gcc:5705: gcc_mswuddll\wxregex_regexec.o] Error 1
mingw32-make: *** [makefile.gcc:5708: gcc_mswuddll\wxregex_regerror.o] Error 1
</code></pre>

<p>Similar problems when I set <code>BUILD=release</code></p>

<p>When I copy <code>setup.h</code> from <code>wxWidgets-3.0.5\include\wx\msw\</code> to <code>wxWidgets-3.0.5\lib\gcc_dll\mswu\wx\</code>, the errors seem to go away.</p>

<p>However, when I attempt to build this very basic app in CLion (2020.1.1), I get the following errors:</p>

<pre><code>#include &lt;iostream&gt;
#include &lt;wx/wxprec.h&gt;
#ifndef WX_PRECOMP
#include &lt;wx/wx.h&gt;
#endif

int main() {
    std::cout &lt;&lt; ""Hello, World!"" &lt;&lt; std::endl;
    return 0;
}
</code></pre>

<pre><code>====================[ Build | app | Debug ]=================================
CLion\ch-0\201.7223.86\bin\cmake\win\bin\cmake.exe --build app\cmake-build-debug --target app -- -j 8
Scanning dependencies of target app
[ 50%] Building CXX object CMakeFiles/app.dir/main.cpp.obj
In file included from wxWidgets-3.0.5/include/wx/defs.h:27,
                 from wxWidgets-3.0.5/include/wx/wxprec.h:12,
                 from app\main.cpp:2:
wxWidgets-3.0.5/include/wx/platform.h:183:10: fatal error: wx/setup.h: No such file or directory
 #include ""wx/setup.h""
          ^~~~~~~~~~~~
compilation terminated.
mingw32-make.exe[3]: *** [CMakeFiles\app.dir\build.make:63: CMakeFiles/app.dir/main.cpp.obj] Error 1
mingw32-make.exe[2]: *** [CMakeFiles\Makefile2:75: CMakeFiles/app.dir/all] Error 2
mingw32-make.exe[1]: *** [CMakeFiles\Makefile2:82: CMakeFiles/app.dir/rule] Error 2
mingw32-make.exe: *** [Makefile:117: app] Error 2
</code></pre>

<p>Here is the CMakeLists.txt file (debug version):</p>

<pre><code>cmake_minimum_required(VERSION 3.16)
project(app)

set(CMAKE_CXX_STANDARD 14)
include_directories(
        includes
        wxWidgets-3.0.5
        wxWidgets-3.0.5/include
        wxWidgets-3.0.5/include/msvc/wx
        wxWidgets-3.0.5/lib/gcc_lib/mswu
)
link_directories(
        wxWidgets-3.0.5/lib/gcc_lib
)

set(
        WX_LIBS
        libwxmsw30ud_propgrid.a
        libwxmsw30ud_ribbon.a
        libwxmsw30ud_stc.a
        libwxmsw30ud_webview.a
        libwxmsw30ud_gl.a
        libwxmsw30ud_richtext.a
        libwxmsw30ud_xrc.a
        libwxmsw30ud_aui.a
        libwxmsw30ud_html.a
        libwxmsw30ud_adv.a
        libwxmsw30ud_core.a
        libwxbase30ud_xml.a
        libwxbase30ud_net.a
        libwxbase30ud.a
        libwxscintillad.a
        libwxtiffd.a
        libwxjpegd.a
        libwxpngd.a
        libwxzlibd.a
        libwxregexud.a
        libwxexpatd.a
        libwxmsw30ud_media.a
)

set(SOURCE_FILES aui.cpp)
add_executable(app main.cpp)
target_link_libraries(
        app
        ${WX_LIBS}
#        -lcomctl32
)
</code></pre>

<p>Can anyone tell me what is causing these problems?</p>

<hr>

<p><strong>Update #1:</strong></p>

<p>Now using wxWidgets 3.1.3.</p>

<p>New contents of <code>main.cpp</code>:</p>

<pre><code>#include &lt;iostream&gt;
#include &lt;wx/wxprec.h&gt;

#ifndef WX_PRECOMP
#include &lt;wx/wx.h&gt;
#endif

class MyApp : public wxApp {
public:
    virtual bool OnInit();
};

class MyFrame : public wxFrame {
public:
    MyFrame(const wxString &amp;title, const wxPoint &amp;pos, const wxSize &amp;size);

private:
    void OnHello(wxCommandEvent &amp;event);
    void OnExit(wxCommandEvent &amp;event);
    void OnAbout(wxCommandEvent &amp;event);

wxDECLARE_EVENT_TABLE();
};

enum {
    ID_Hello = 1
};

wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
                EVT_MENU(ID_Hello, MyFrame::OnHello)
                EVT_MENU(wxID_EXIT, MyFrame::OnExit)
                EVT_MENU(wxID_ABOUT, MyFrame::OnAbout)
wxEND_EVENT_TABLE()

wxIMPLEMENT_APP(MyApp);
/* This is what the macro expands to: */
/* extern ""C"" int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, wxCmdLineArgType, int nCmdShow) {
    ;;
    return wxEntry(hInstance, hPrevInstance, 0, nCmdShow);
}
MyApp &amp;wxGetApp() { return *static_cast&lt;MyApp *&gt;(wxApp::GetInstance()); }
wxAppConsole *wxCreateApp() {
    wxAppConsole::CheckBuildOptions(
            ""3"" ""."" ""1"" ""."" ""3"" "" ("" ""wchar_t"" "",Visual C++ "" ""1900"" "",wx containers"" "",compatible with 3.0"" "")"",
            ""your program"");
    return new MyApp;
}

wxAppInitializer wxTheAppInitializer((wxAppInitializerFunction) wxCreateApp)
 */

bool MyApp::OnInit() {
    MyFrame *frame = new MyFrame(""Hello World"", wxPoint(50, 50), wxSize(450, 340));
    frame-&gt;Show(true);
    return true;
}

MyFrame::MyFrame(const wxString &amp;title, const wxPoint &amp;pos, const wxSize &amp;size)
        : wxFrame(NULL, wxID_ANY, title, pos, size) {
    wxMenu *menuFile = new wxMenu;
    menuFile-&gt;Append(ID_Hello, ""&amp;Hello...\tCtrl-H"",
                     ""Help string shown in status bar for this menu item"");
    menuFile-&gt;AppendSeparator();
    menuFile-&gt;Append(wxID_EXIT);
    wxMenu *menuHelp = new wxMenu;
    menuHelp-&gt;Append(wxID_ABOUT);
    wxMenuBar *menuBar = new wxMenuBar;
    menuBar-&gt;Append(menuFile, ""&amp;File"");
    menuBar-&gt;Append(menuHelp, ""&amp;Help"");
    SetMenuBar(menuBar);
    CreateStatusBar();
    SetStatusText(""Welcome to wxWidgets!"");
}

void MyFrame::OnExit(wxCommandEvent &amp;event) {
    Close(true);
}

void MyFrame::OnAbout(wxCommandEvent &amp;event) {
    wxMessageBox(""This is a wxWidgets' Hello world sample"",
                 ""About Hello World"", wxOK | wxICON_INFORMATION);
}

void MyFrame::OnHello(wxCommandEvent &amp;event) {
    wxLogMessage(""Hello world from wxWidgets!"");
}


/*int main() {
    std::cout &lt;&lt; ""Hello, World!"" &lt;&lt; std::endl;
    return 0;
}*/
</code></pre>

<p>New contents of the <code>CMakeLists.txt</code> file:</p>

<pre><code>cmake_minimum_required(VERSION 3.16)
project(HelloWorld)

set(CMAKE_CXX_STANDARD 14)
set(SRC_FILES
    main.cpp
    )

add_link_options(LINKER: UNICODE=1)
add_link_options(LINKER: BUILD=debug)

include_directories(
    includes
    E:/cpp/lib/wxWidgets-3.1.3
    E:/cpp/lib/wxWidgets-3.1.3/include
    E:/cpp/lib/wxWidgets-3.1.3/include/msvc
    E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx
    E:/cpp/lib/wxWidgets-3.1.3/lib/gcc_lib/mswud
)
link_directories(
    E:/cpp/Lib/wxWin/lib/vc14x_x64_dll
)

add_executable(${PROJECT_NAME} ${SRC_FILES})
set_target_properties(${PROJECT_NAME} PROPERTIES
    LINK_FLAGS /SUBSYSTEM:WINDOWS
    )
</code></pre>

<p>After adding <code>wxWidgets-3.0.5/include/msvc</code> to the <code>include_directories</code> list, I get the following errors: </p>

<pre><code>In file included from E:/cpp/lib/wxWidgets-3.1.3/include/wx/platform.h:154,
                 from E:/cpp/lib/wxWidgets-3.1.3/include/wx/defs.h:45,
                 from E:/cpp/lib/wxWidgets-3.1.3/include/wx/wxprec.h:12,
                 from E:\cpp\dev\HelloWorld\main.cpp:2:
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:12:6: error: #error ""This file should only be included when using Microsoft Visual C++""
     #error ""This file should only be included when using Microsoft Visual C++""
      ^~~~~
In file included from E:/cpp/lib/wxWidgets-3.1.3/include/wx/version.h:16,
                 from E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:19,
                 from E:/cpp/lib/wxWidgets-3.1.3/include/wx/platform.h:154,
                 from E:/cpp/lib/wxWidgets-3.1.3/include/wx/defs.h:45,
                 from E:/cpp/lib/wxWidgets-3.1.3/include/wx/wxprec.h:12,
                 from E:\cpp\dev\HelloWorld\main.cpp:2:
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:135:31: error: pasting ""/"" and ""vc_x64_lib"" does not give a valid preprocessing token
         wxCONCAT5(../../../lib/, wxLIB_SUBDIR, /, wxTOOLKIT_PREFIX, /wx/setup.h)
                               ^
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:18:37: note: in definition of macro 'wxCONCAT_HELPER'
 #define wxCONCAT_HELPER(text, line) text ## line
                                     ^~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:23:14: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT(x1, x2), x3)
              ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:25:14: note: in expansion of macro 'wxCONCAT3'
     wxCONCAT(wxCONCAT3(x1, x2, x3), x4)
              ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:27:14: note: in expansion of macro 'wxCONCAT4'
     wxCONCAT(wxCONCAT4(x1, x2, x3, x4), x5)
              ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:135:9: note: in expansion of macro 'wxCONCAT5'
         wxCONCAT5(../../../lib/, wxLIB_SUBDIR, /, wxTOOLKIT_PREFIX, /wx/setup.h)
         ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:138:39: note: in expansion of macro 'wxSETUPH_PATH'
 #define wxSETUPH_PATH_STR wxSTRINGIZE(wxSETUPH_PATH)
                                       ^~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:140:10: note: in expansion of macro 'wxSETUPH_PATH_STR'
 #include wxSETUPH_PATH_STR
          ^~~~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:89:31: error: pasting ""vc_x64_lib"" and ""/"" does not give a valid preprocessing token
     #define wxCOMPILER_PREFIX vc
                               ^~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:18:37: note: in definition of macro 'wxCONCAT_HELPER'
 #define wxCONCAT_HELPER(text, line) text ## line
                                     ^~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:23:5: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT(x1, x2), x3)
     ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:21:5: note: in expansion of macro 'wxCONCAT_HELPER'
     wxCONCAT_HELPER(x1, x2)
     ^~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:23:14: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT(x1, x2), x3)
              ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:25:14: note: in expansion of macro 'wxCONCAT3'
     wxCONCAT(wxCONCAT3(x1, x2, x3), x4)
              ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:27:14: note: in expansion of macro 'wxCONCAT4'
     wxCONCAT(wxCONCAT4(x1, x2, x3, x4), x5)
              ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:135:9: note: in expansion of macro 'wxCONCAT5'
         wxCONCAT5(../../../lib/, wxLIB_SUBDIR, /, wxTOOLKIT_PREFIX, /wx/setup.h)
         ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:21:5: note: in expansion of macro 'wxCONCAT_HELPER'
     wxCONCAT_HELPER(x1, x2)
     ^~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:25:5: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT3(x1, x2, x3), x4)
     ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:21:5: note: in expansion of macro 'wxCONCAT_HELPER'
     wxCONCAT_HELPER(x1, x2)
     ^~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:23:5: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT(x1, x2), x3)
     ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:21:5: note: in expansion of macro 'wxCONCAT_HELPER'
     wxCONCAT_HELPER(x1, x2)
     ^~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:23:14: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT(x1, x2), x3)
              ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:25:14: note: in expansion of macro 'wxCONCAT3'
     wxCONCAT(wxCONCAT3(x1, x2, x3), x4)
              ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:115:9: note: in expansion of macro 'wxCONCAT4'
         wxCONCAT4(wxCOMPILER_PREFIX, wxARCH_SUFFIX, _lib, wxCFG)
         ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:115:19: note: in expansion of macro 'wxCOMPILER_PREFIX'
         wxCONCAT4(wxCOMPILER_PREFIX, wxARCH_SUFFIX, _lib, wxCFG)
                   ^~~~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:135:34: note: in expansion of macro 'wxLIB_SUBDIR'
         wxCONCAT5(../../../lib/, wxLIB_SUBDIR, /, wxTOOLKIT_PREFIX, /wx/setup.h)
                                  ^~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:138:39: note: in expansion of macro 'wxSETUPH_PATH'
 #define wxSETUPH_PATH_STR wxSTRINGIZE(wxSETUPH_PATH)
                                       ^~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:140:10: note: in expansion of macro 'wxSETUPH_PATH_STR'
 #include wxSETUPH_PATH_STR
          ^~~~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:135:48: error: pasting ""/"" and ""msw"" does not give a valid preprocessing token
         wxCONCAT5(../../../lib/, wxLIB_SUBDIR, /, wxTOOLKIT_PREFIX, /wx/setup.h)
                                                ^
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:18:37: note: in definition of macro 'wxCONCAT_HELPER'
 #define wxCONCAT_HELPER(text, line) text ## line
                                     ^~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:25:5: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT3(x1, x2, x3), x4)
     ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:21:5: note: in expansion of macro 'wxCONCAT_HELPER'
     wxCONCAT_HELPER(x1, x2)
     ^~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:23:5: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT(x1, x2), x3)
     ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:25:14: note: in expansion of macro 'wxCONCAT3'
     wxCONCAT(wxCONCAT3(x1, x2, x3), x4)
              ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:27:14: note: in expansion of macro 'wxCONCAT4'
     wxCONCAT(wxCONCAT4(x1, x2, x3, x4), x5)
              ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:135:9: note: in expansion of macro 'wxCONCAT5'
         wxCONCAT5(../../../lib/, wxLIB_SUBDIR, /, wxTOOLKIT_PREFIX, /wx/setup.h)
         ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:138:39: note: in expansion of macro 'wxSETUPH_PATH'
 #define wxSETUPH_PATH_STR wxSTRINGIZE(wxSETUPH_PATH)
                                       ^~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:140:10: note: in expansion of macro 'wxSETUPH_PATH_STR'
 #include wxSETUPH_PATH_STR
          ^~~~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:124:34: error: pasting ""msw"" and ""/"" does not give a valid preprocessing token
         #define wxTOOLKIT_PREFIX msw
                                  ^~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:18:37: note: in definition of macro 'wxCONCAT_HELPER'
 #define wxCONCAT_HELPER(text, line) text ## line
                                     ^~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:27:5: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT4(x1, x2, x3, x4), x5)
     ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:21:5: note: in expansion of macro 'wxCONCAT_HELPER'
     wxCONCAT_HELPER(x1, x2)
     ^~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:25:5: note: in expansion of macro 'wxCONCAT'
     wxCONCAT(wxCONCAT3(x1, x2, x3), x4)
     ^~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/wx/cpp.h:27:14: note: in expansion of macro 'wxCONCAT4'
     wxCONCAT(wxCONCAT4(x1, x2, x3, x4), x5)
              ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:135:9: note: in expansion of macro 'wxCONCAT5'
         wxCONCAT5(../../../lib/, wxLIB_SUBDIR, /, wxTOOLKIT_PREFIX, /wx/setup.h)
         ^~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:135:51: note: in expansion of macro 'wxTOOLKIT_PREFIX'
         wxCONCAT5(../../../lib/, wxLIB_SUBDIR, /, wxTOOLKIT_PREFIX, /wx/setup.h)
                                                   ^~~~~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:138:39: note: in expansion of macro 'wxSETUPH_PATH'
 #define wxSETUPH_PATH_STR wxSTRINGIZE(wxSETUPH_PATH)
                                       ^~~~~~~~~~~~~
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:140:10: note: in expansion of macro 'wxSETUPH_PATH_STR'
 #include wxSETUPH_PATH_STR
          ^~~~~~~~~~~~~~~~~
In file included from E:/cpp/lib/wxWidgets-3.1.3/include/wx/platform.h:154,
                 from E:/cpp/lib/wxWidgets-3.1.3/include/wx/defs.h:45,
                 from E:/cpp/lib/wxWidgets-3.1.3/include/wx/wxprec.h:12,
                 from E:\cpp\dev\HelloWorld\main.cpp:2:
E:/cpp/lib/wxWidgets-3.1.3/include/msvc/wx/setup.h:140:1: fatal error: ../../../lib/vc_x64_lib /msw /wx/setup.h: No such file or directory
 #include wxSETUPH_PATH_STR
 ^~~
compilation terminated.
mingw32-make.exe[3]: *** [CMakeFiles\HelloWorld.dir\build.make:66: CMakeFiles/HelloWorld.dir/main.cpp.obj] Error 1
mingw32-make.exe[2]: *** [CMakeFiles\Makefile2:78: CMakeFiles/HelloWorld.dir/all] Error 2
mingw32-make.exe[1]: *** [CMakeFiles\Makefile2:85: CMakeFiles/HelloWorld.dir/rule] Error 2
mingw32-make.exe: *** [Makefile:120: HelloWorld] Error 2
</code></pre>

<hr>

<p><strong>Update #2:</strong></p>

<p>With the possibility there could — or, should — be a different setup.h file to use, I analyzed the <code>wxWidgets\3.1.3\build\msw\makefile.gcc</code> file, these two lines are found, starting at line 5872:</p>

<pre><code>..\..\include\wx\$(__SETUP_H_SUBDIR_FILENAMES)\setup.h: 
    if not exist ..\..\include\wx\$(__SETUP_H_SUBDIR_FILENAMES)\setup.h copy ..\..\include\wx\$(__SETUP_H_SUBDIR_FILENAMES)\setup0.h ..\..\include\wx\$(__SETUP_H_SUBDIR_FILENAMES)\setup.h
</code></pre>

<p>I did a search on <code>setup0.h</code>, did a search on a fresh unzip of the archive, and found nothing. Is the a ghost file?</p>

<p>Could <a href=""https://github.com/wxWidgets/wxWidgets/blob/master/include/wx/msw/setup0.h"" rel=""nofollow noreferrer"">this</a> be it? Found on wxWidgets's GitHub repository?</p>
","<h1>SOLVED!</h1>
<p>Problems solved by locating the correct <code>setup.h</code> file — found on <a href=""https://github.com/wxWidgets/wxWidgets/blob/master/include/wx/msw/setup0.h"" rel=""nofollow noreferrer"">GitHub</a>.</p>
<p>Updated <code>cmakelists.txt</code> to this:</p>
<pre><code>cmake_minimum_required(VERSION 3.16)

project(HelloWorld)

set(CMAKE_CXX_STANDARD 14)

set(SRC_FILES
    main.cpp
    )

include_directories(
    includes
    E:/cpp/lib/wxWidgets-3.1.3
    E:/cpp/lib/wxWidgets-3.1.3/include
    E:/cpp/lib/wxWidgets-3.1.3/lib/gcc_dll/mswud
)

link_directories(
    E:/cpp/lib/wxWidgets-3.1.3/lib/gcc_dll
    E:/cpp/lib/wxWidgets-3.1.3/lib/gcc_dll/mswud
)

set(
    WX_LIBS
    libwxmsw31ud_propgrid.a
    libwxmsw31ud_ribbon.a
    libwxmsw31ud_stc.a
    libwxmsw31ud_webview.a
    libwxmsw31ud_gl.a
    libwxmsw31ud_richtext.a
    libwxmsw31ud_xrc.a
    libwxmsw31ud_aui.a
    libwxmsw31ud_html.a
    libwxmsw31ud_adv.a
    libwxmsw31ud_core.a
    libwxbase31ud_xml.a
    libwxbase31ud_net.a
    libwxbase31ud.a
    libwxscintillad.a
    libwxtiffd.a
    libwxjpegd.a
    libwxpngd.a
    libwxzlibd.a
    libwxregexud.a
    libwxexpatd.a
    libwxmsw31ud_media.a
)

add_executable(${PROJECT_NAME} ${SRC_FILES})

target_link_libraries(
    ${PROJECT_NAME}
    ${WX_LIBS}
)
</code></pre>
","61977176","1","772","1","6","","2020-05-10 18:16:32","2020-05-22 16:45:17","2020-05-23 18:58:43",""
"55055314","CLion reformat the file using clang-format during save-action","<c++><clion><clang-format>","<p>I am on Mac and trying to do a clang-format during the save-action like below.</p>

<p><a href=""https://i.stack.imgur.com/jRwBD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jRwBD.png"" alt=""enter image description here""></a></p>

<p>I also set the quick-key of clang-format like:</p>

<p><a href=""https://i.stack.imgur.com/Ua22U.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ua22U.png"" alt=""enter image description here""></a></p>

<p>But when I type - command + S in Mac, I got the file saved, but the reformat is totally wrong:</p>

<pre><code>class AUtilityTest : public ::testing::Test {
public:
    void SetUp() override {
    }

    void TearDown() override {

    }

protected:
};

TEST_F(UtilityTest, Test1
) {

a = 0.2;
b = 0.3;
for (
int i = 0;
i &lt; 10;i ++) {
std::cout &lt;&lt; a + b &lt;&lt;
std::endl;
}
}
</code></pre>

<p>I need to manually go to Code -> Reformat Code with clang-format to make it go back to normal.</p>

<p>How do I make it to save with clang-format at the same time? Thanks!</p>
","","","3","1550","0","7","","2019-03-08 01:08:44","","2019-03-08 01:08:44",""
"55151277","Unable to link CLion to QT On Windows 10","<c++><windows><qt><user-interface><cmake>","<p>Im trying to link Qt Creator to Clion so i can use it for creating GUI elements but the only information I was able to find on doing this was this thread </p>

<p><a href=""https://stackoverflow.com/questions/30235175/how-to-configure-clion-ide-for-qt-framework"">How to configure CLion IDE for Qt Framework?</a></p>

<p>I tried to follow this as closely as possible but one of the major differences is that on windows there is no clang_64 file instead it is msvc2017_64 and that is what seems to be showing up in the error im getting.</p>

<p>My CmakeLists.txt</p>

<pre><code>cmake_minimum_required(VERSION 3.5)
project(helloqt)

set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS}"")

set(SOURCE_FILES main.cpp)
find_package(Qt5Widgets REQUIRED)

add_executable(helloqt ${SOURCE_FILES})

target_link_libraries(helloqt Qt5::Widgets)
</code></pre>

<p>my main.cpp</p>

<pre><code>#include &lt;QApplication&gt;
#include &lt;QDebug&gt;

using namespace std;

int main() {
    qDebug() &lt;&lt; QT_VERSION_STR;
    return 1;
}
</code></pre>

<p>under Settings>Build, Execution, Deployment > CMake my Cmake Options has the path</p>

<pre><code>-DCMAKE_PREFIX_PATH=C:/Qt/5.12.1/msvc2017_64/lib/cmake
</code></pre>

<p>and it results in this error which I have not been able to find a fix to.</p>

<pre><code>""C:\Program Files\JetBrains\CLion 2018.3.4\bin\cmake\win\bin\cmake.exe"" --build C:\Users\Uncorropto\CLionProjects\helloqt\cmake-build-debug --target helloqt --
Scanning dependencies of target helloqt
[ 50%] Building CXX object CMakeFiles/helloqt.dir/main.cpp.obj
main.cpp
[100%] Linking CXX executable helloqt.exe
LINK Pass 1: command ""C:\PROGRA~2\MIB055~1\2017\COMMUN~1\VC\Tools\MSVC\1414~1.264\bin\Hostx86\x86\link.exe /nologo @CMakeFiles\helloqt.dir\objects1.rsp /out:helloqt.exe /implib:helloqt.lib /pdb:C:\Users\Uncorropto\CLionProjects\helloqt\cmake-build-debug\helloqt.pdb /version:0.0 /machine:X86 /debug /INCREMENTAL /subsystem:console C:\Qt\5.12.1\msvc2017_64\lib\Qt5Widgetsd.lib C:\Qt\5.12.1\msvc2017_64\lib\Qt5Guid.lib C:\Qt\5.12.1\msvc2017_64\lib\Qt5Cored.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:CMakeFiles\helloqt.dir/intermediate.manifest CMakeFiles\helloqt.dir/manifest.res"" failed (exit code 1120) with the following output:
main.cpp.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __thiscall QMessageLogger::QMessageLogger(char const *,int,char const *)"" (__imp_??0QMessageLogger@@QAE@PBDH0@Z) referenced in function _main
main.cpp.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: class QDebug __thiscall QMessageLogger::debug(void)const "" (__imp_?debug@QMessageLogger@@QBE?AVQDebug@@XZ) referenced in function _main
main.cpp.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __thiscall QDebug::~QDebug(void)"" (__imp_??1QDebug@@QAE@XZ) referenced in function _main
main.cpp.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: class QDebug &amp; __thiscall QDebug::operator&lt;&lt;(char const *)"" (__imp_??6QDebug@@QAEAAV0@PBD@Z) referenced in function _main
C:\Qt\5.12.1\msvc2017_64\lib\Qt5Widgetsd.lib : warning LNK4272: library machine type 'x64' conflicts with target machine type 'x86'
C:\Qt\5.12.1\msvc2017_64\lib\Qt5Guid.lib : warning LNK4272: library machine type 'x64' conflicts with target machine type 'x86'
C:\Qt\5.12.1\msvc2017_64\lib\Qt5Cored.lib : warning LNK4272: library machine type 'x64' conflicts with target machine type 'x86'
helloqt.exe : fatal error LNK1120: 4 unresolved externals
NMAKE : fatal error U1077: '""C:\Program Files\JetBrains\CLion 2018.3.4\bin\cmake\win\bin\cmake.exe""' : return code '0xffffffff'
Stop.
NMAKE : fatal error U1077: '""C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.14.26428\bin\HostX86\x86\nmake.exe""' : return code '0x2'
Stop.
NMAKE : fatal error U1077: '""C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.14.26428\bin\HostX86\x86\nmake.exe""' : return code '0x2'
Stop.
NMAKE : fatal error U1077: '""C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.14.26428\bin\HostX86\x86\nmake.exe""' : return code '0x2'
Stop.
</code></pre>
","","","2","698","2","0","","2019-03-13 21:11:26","","2019-03-13 22:02:12",""
"63455220","Debug OpenJDK14 using CLion: failed to load the CMake project","<java><c++><cmake>","<p>I download the source code of OpenJDK14 and put them in <code>\home\yuanfang\jdk14</code> and after running <code>bash configure --disable-warnings-as-errors</code> and <code>make images</code>, I build OpenJDK14 successfully, The newly built JDK is in <code>home\yuanfang\jdk14\build\linux-x86_64-server-release\jdk</code>. By the way, I am using Ubuntu 20.04 LTS.</p>
<p>Then I want to debug OpenJDK14 using CLion IDE. I was using CLion 2020.2 and I take the following steps:</p>
<ol>
<li>After open CLion I choose <strong>Create New CMake Project from Sources</strong> and choose the directory of <code>\home\yuanfang\jdk14</code>, which is the root directory of the jdk project.</li>
<li>I alter the <strong>Run/Debug Configurations</strong> to make it look like this:
<a href=""https://i.stack.imgur.com/XASWR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XASWR.png"" alt=""Run/Debug configurations"" /></a></li>
<li>CLion create a <code>CMakeLists.txt</code> automatically but the file doesn't work, so after googling I find find the correct <code>CMakeLists.txt</code> here at <a href=""https://github.com/ojdkbuild/ojdkbuild/blob/master/src/java-14-openjdk/CMakeLists.txt"" rel=""nofollow noreferrer"">https://github.com/ojdkbuild/ojdkbuild/blob/master/src/java-14-openjdk/CMakeLists.txt</a>. I then rewrite the old <code>CMakeLists.txt</code> using the correct one.</li>
<li>I download the whole repository(that is, <a href=""https://github.com/ojdkbuild/ojdkbuild"" rel=""nofollow noreferrer"">github.com/ojdkbuild/ojdkbuild</a>), unzip it and put it into <code>\home\yuanfang\jdk14</code>.
It looks like as follow, the <code>ojdkbuild-master</code> is the newly added folder.
<a href=""https://i.stack.imgur.com/HTlmr.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HTlmr.png"" alt=""enter image description here"" /></a></li>
<li>I reload the CMake project, but some CMake error occurs(as follow), why can't CLion find those files? javaI googled but can't find any effective solution. Is there anything I can do or refer to? Thanks in advance.</li>
</ol>
<pre><code>CMake Error at CMakeLists.txt:19 (include):
  include could not find load file:

    /home/yuanfang/jdk14/../../resources/cmake/ojdkbuild_common.cmake


CMake Error at CMakeLists.txt:21 (include):
  include could not find load file:

    /home/yuanfang/jdk14/../../resources/cmake/version.cmake


CMake Error at CMakeLists.txt:93 (add_subdirectory):
  add_subdirectory given source
  &quot;/home/yuanfang/jdk14/../../deps/rhino/scripting_tasks&quot; which is not an
  existing directory.


CMake Error at CMakeLists.txt:98 (ojdkbuild_add_subdirectory):
  Unknown CMake command &quot;ojdkbuild_add_subdirectory&quot;.


-- Configuring incomplete, errors occurred!
See also &quot;/home/yuanfang/jdk14/cmake-build-debug/CMakeFiles/CMakeOutput.log&quot;.

Cannot get compiler information:
    Compiler exited with error code 1: /usr/bin/cc -xobjective-c -I/home/yuanfang/jdk14/build/linux-x86_64-server-release/hotspot/variant-server/gensrc/adfiles......./loading/LibraryLoader/jar_src -g -fpch-preprocess -v -dD -E
    Using built-in specs.
    COLLECT_GCC=/usr/bin/cc
    OFFLOAD_TARGET_NAMES=nvptx-none:hsa
    OFFLOAD_TARGET_DEFAULT=1
    Target: x86_64-linux-gnu
    Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-10ubuntu2' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
    Thread model: posix
    gcc version 9.3.0 (Ubuntu 9.3.0-10ubuntu2) 
    COLLECT_GCC_OPTIONS='-I' '/home/yuanfang/jdk14/build/linux-x86_64-server-release/hotspot/variant-server/gensrc/adfiles' '-I' '......'-g' '-fpch-preprocess' '-v' '-dD' '-E' '-D' '___CIDR_DEFINITIONS_END' '-mtune=generic' '-march=x86-64'
     cc1obj -E -quiet -v @/tmp/cci3XM6r -imultiarch x86_64-linux-gnu -D ___CIDR_DEFINITIONS_END /tmp/compiler-file5929385022787926768 -mtune=generic -march=x86-64 -fpch-preprocess -g -fworking-directory -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -dD
    cc: fatal error: cannot execute 'cc1obj': execvp: No such file or directory
    compilation terminated.
    
    

[Failed to reload]


</code></pre>
","","","1","174","1","1","","2020-08-17 16:50:02","","2020-10-27 08:58:32",""
"61765376","Debugging Issues in CLion of CUDA files: the debugger does not stop at breakpoints","<cuda><clion>","<p>I've started a CUDA application in the new CLion 2020.1 version. Although I can compile and run it, I am not able to debug it, not even the host code. Specifically, <code>debug</code> does not stop at breakpoints, even though I am running the debug build. I'm not encountering this issue with running a regular C project in CLion 2020.1. I don't receive any error message of any kind. Here is my CMakeLists.txt file:</p>

<pre><code># Setup the CUDA compiler
set(CMAKE_CUDA_COMPILER /usr/local/cuda-10.2/bin/nvcc)

# Setup the host compiler
set(CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-8)

# CMAKE minimum required version
cmake_minimum_required(VERSION 3.16)

project(PageRank_GPU CUDA)

set(CMAKE_CUDA_STANDARD 14)

add_executable(PageRank_GPU main.cu graph.cu graph.cuh vertex.cuh error.cuh parser.cu parser.cuh)

set_target_properties(
        PageRank_GPU
        PROPERTIES
        CUDA_SEPARABLE_COMPILATION ON)
</code></pre>
","","","1","443","1","0","1","2020-05-13 02:31:48","","2020-05-14 01:50:09",""
"63479457","How do I read the source code for a C library in CLion","<c><clion>","<ul>
<li>OS: Deepin 20 (base on Debian 10)</li>
<li>CLion: 2020.1.2</li>
<li>GCC: gcc (Uos 8.3.0.3-3+rebuild) 8.3.0</li>
<li>Make: 4.2.1 x86_64-pc-linux-gnu</li>
<li>Cmake: 3.18.1</li>
</ul>
<p>I am a newcomer who just started learning C language. When I was writing C code using CLion, I could access it by <code>Ctrl + mouse click</code> .</p>
<p>I'm calling the method inside the header function. For example, if I use <code>printf</code> , I can access the <code>stdio.h</code> file, which can be seen at line 332 <code>extern int printf (const char * ___, RESTRICT, format,...) ; </code>.</p>
<p>But if I want to see the details of this method</p>
<p>I can't see it. According to <a href=""https://www.jetbrains.com/help/clion/clion-quick-start-guide.html#code-structure"" rel=""nofollow noreferrer"">Navigate in the code structure</a></p>
<p>Use <code>Ctrl+Alt+Home</code> to switch. But the IDE prompts <code>No related file</code> .</p>
<p>How can I get the source code to call a method? I want to learn from the good experiences of others by looking at their implementation logic in their libraries</p>
<p>Thank you for your review. I would really appreciate it if you could help me.</p>
","<p>Even if most of GNU/Linux software is <a href=""https://en.wikipedia.org/wiki/Open_source"" rel=""nofollow noreferrer"">open source</a>, it is not installed (in source code form) by default on your computer.</p>
<p>Regarding C programming, see <a href=""https://modernc.gforge.inria.fr/"" rel=""nofollow noreferrer""><em>Modern C</em></a> (and the C11 standard <a href=""https://web.cs.dal.ca/%7Evlado/pl/C_Standard_2011-n1570.pdf"" rel=""nofollow noreferrer"">n1570</a>) and read the documentation of your C compiler (perhaps <a href=""https://gcc.gnu.org/"" rel=""nofollow noreferrer"">GCC</a> or <a href=""https://clang.llvm.org/"" rel=""nofollow noreferrer"">Clang</a>, or simpler ones like <a href=""http://nwcc.sourceforge.net/"" rel=""nofollow noreferrer"">nwcc</a> or <a href=""https://en.wikipedia.org/wiki/TinyCC"" rel=""nofollow noreferrer"">tinycc</a>), your linker (probably <a href=""https://www.gnu.org/software/binutils/"" rel=""nofollow noreferrer"">binutils</a>), your <a href=""https://en.wikipedia.org/wiki/Build_automation"" rel=""nofollow noreferrer"">build automation</a> tool (e.g. <a href=""https://www.gnu.org/software/make/"" rel=""nofollow noreferrer"">GNU make</a> or <a href=""https://ninja-build.org/"" rel=""nofollow noreferrer"">ninja</a> or <a href=""https://cmake.org/"" rel=""nofollow noreferrer"">cmake</a>). Enable all warnings and <a href=""https://en.wikipedia.org/wiki/DWARF"" rel=""nofollow noreferrer"">DWARF</a> debug info, so if using  <a href=""https://gcc.gnu.org/"" rel=""nofollow noreferrer"">GCC</a> compile with at least <code>gcc -Wall -Wextra -g</code>; then improve your C code to get no warnings. Once you have debugged your C source code (using <a href=""https://www.gnu.org/software/gdb/"" rel=""nofollow noreferrer"">GDB</a> and perhaps <a href=""https://valgrind.org/"" rel=""nofollow noreferrer"">valgrind</a>), add optimization flags such as <code>-O2</code>. Order of arguments to <code>gcc</code> matters!</p>
<p>Consider, for some tasks, generating some of your C code (perhaps some <code>#include</code>-d header file) with tools like <a href=""https://www.gnu.org/software/bison/"" rel=""nofollow noreferrer"">GNU bison</a>, <a href=""https://www.antlr.org/"" rel=""nofollow noreferrer"">ANTLR</a>, <a href=""https://swig.org/"" rel=""nofollow noreferrer"">SWIG</a>, <a href=""https://en.wikipedia.org/wiki/RPCGEN"" rel=""nofollow noreferrer"">RPCGEN</a>, <a href=""https://www.gnu.org/software/gawk/manual/gawk.html"" rel=""nofollow noreferrer"">AWK</a>, <a href=""https://www.gnu.org/software/guile/"" rel=""nofollow noreferrer"">GUILE</a>, <a href=""https://logological.org/gpp"" rel=""nofollow noreferrer"">GPP</a>, <a href=""https://www.gnu.org/software/m4/"" rel=""nofollow noreferrer"">GNU m4</a>, <a href=""https://www.gnu.org/software/autoconf/"" rel=""nofollow noreferrer"">GNU autoconf</a> - or your own program or script.</p>
<blockquote>
<p>I want to learn from the good experiences of others by looking at their implementation logic in their libraries</p>
</blockquote>
<h1>You need to fetch the source code from elsewhere.</h1>
<p>For examples, see <a href=""https://www.gnu.org/software/libc/"" rel=""nofollow noreferrer"">GNU libc</a> or  <a href=""https://musl.libc.org/"" rel=""nofollow noreferrer"">musl-libc</a>, and the <a href=""https://kernel.org/"" rel=""nofollow noreferrer"">Linux kernel</a> (and others: <a href=""https://gtk.org/"" rel=""nofollow noreferrer"">GTK</a>, <a href=""https://postgresql.org/"" rel=""nofollow noreferrer"">PostGreSQL</a>, <a href=""https://sqlite.org/"" rel=""nofollow noreferrer"">sqlite</a>, <a href=""https://www.gnu.org/software/guile/"" rel=""nofollow noreferrer"">GUILE</a>, etc.... including many open source programs mentionned in this answer) and look also on websites like <a href=""https://github.com/"" rel=""nofollow noreferrer"">github</a>, <a href=""https://gitlab.com/"" rel=""nofollow noreferrer"">gitlab</a>, <a href=""https://sourceforge.net/"" rel=""nofollow noreferrer"">sourceforge</a></p>
<p>Read also <a href=""https://mentorembedded.github.io/advancedlinuxprogramming/"" rel=""nofollow noreferrer""><em>Advanced Linux Programming</em></a> and <a href=""https://man7.org/linux/man-pages/man2/syscalls.2.html"" rel=""nofollow noreferrer"">syscalls(2)</a>. See also <a href=""http://linuxfromscratch.org/"" rel=""nofollow noreferrer"">http://linuxfromscratch.org/</a></p>
<p>In 2020, a recent <a href=""https://gcc.gnu.org/"" rel=""nofollow noreferrer"">GCC</a> compiler happens to handle specially calls to <code>printf</code> when asked to optimize. See the <a href=""https://softwareheritage.org/"" rel=""nofollow noreferrer"">softwareheritage</a> and <a href=""https://frama-c.com/"" rel=""nofollow noreferrer"">Frama-C</a> projects.</p>
<p>In some cases, consider accepting <a href=""https://en.wikipedia.org/wiki/Plugin"" rel=""nofollow noreferrer"">plugins</a> in your program with <a href=""https://man7.org/linux/man-pages/man3/dlopen.3.html"" rel=""nofollow noreferrer"">dlopen(3)</a> and <a href=""https://man7.org/linux/man-pages/man3/dlsym.3.html"" rel=""nofollow noreferrer"">dlsym(3)</a> (see also <a href=""https://man7.org/linux/man-pages/man5/elf.5.html"" rel=""nofollow noreferrer"">elf(5)</a> and <a href=""https://www.akkadia.org/drepper/dsohowto.pdf"" rel=""nofollow noreferrer""><em>How to Write Shared Libraries</em></a>). You might even generate some code at runtime with libraries like <a href=""https://gcc.gnu.org/onlinedocs/jit/"" rel=""nofollow noreferrer"">libgccjit</a> (or generate C code at runtime, then compile it as a plugin, and load it; such an approach is called <a href=""https://en.wikipedia.org/wiki/Metaprogramming"" rel=""nofollow noreferrer"">metaprogramming</a> and is related to <a href=""https://en.wikipedia.org/wiki/Partial_evaluation"" rel=""nofollow noreferrer"">partial evaluation</a>; see also the <a href=""http://bootstrappingartificialintelligence.fr/WordPress3/"" rel=""nofollow noreferrer"">blog of the late J.Pitrat</a> for more insights).</p>
<p>Of course, you need tools to navigate in source code. Consider using <a href=""https://www.gnu.org/software/emacs/"" rel=""nofollow noreferrer"">GNU emacs</a> combined with <a href=""https://www.gnu.org/software/grep/"" rel=""nofollow noreferrer"">GNU grep</a> for that, or some other <a href=""http://sourcenav.sourceforge.net/"" rel=""nofollow noreferrer"">source navigator.</a> For large programs of millions of source code lines, consider writing your own <a href=""https://gcc.gnu.org/onlinedocs/gccint/Plugins.html"" rel=""nofollow noreferrer"">GCC plugin</a> to understand them.</p>
<p>Use also tools like <a href=""https://man7.org/linux/man-pages/man1/strace.1.html"" rel=""nofollow noreferrer"">strace(1)</a> and <a href=""https://www.gnu.org/software/gdb/"" rel=""nofollow noreferrer"">GDB</a> to understand the dynamic behavior of programs.</p>
<h1>Expect several months of full time work to explore all this.</h1>
<p>You could be interested by <a href=""https://www.acm.org/"" rel=""nofollow noreferrer"">ACM</a> conference papers also.</p>
<p>For your own source code, consider using some <a href=""https://en.wikipedia.org/wiki/Version_control"" rel=""nofollow noreferrer"">version control</a> tool such as <a href=""https://git-scm.com/"" rel=""nofollow noreferrer"">git</a>. Of course read its documentation. And use <a href=""https://libreoffice.org/"" rel=""nofollow noreferrer"">LibreOffice</a>, <a href=""https://en.wikipedia.org/wiki/Lout_(software)"" rel=""nofollow noreferrer"">Lout</a> or <a href=""https://en.wikipedia.org/wiki/LaTeX"" rel=""nofollow noreferrer"">LaTeX</a>, <a href=""https://en.wikipedia.org/wiki/Markdown"" rel=""nofollow noreferrer"">MarkDown</a> (perhaps combined with <a href=""https://inkscape.org/"" rel=""nofollow noreferrer"">inkscape</a> or <a href=""https://www.diagrams.net/"" rel=""nofollow noreferrer"">diagrams</a> for figures) to write the documentation of your software.</p>
<p>In some cases, you might consider generating parts of the documentation from parts of your source code (e.g. using <a href=""https://en.wikipedia.org/wiki/Literate_programming"" rel=""nofollow noreferrer"">literate programming</a> techniques like <a href=""http://nuweb.sourceforge.net/"" rel=""nofollow noreferrer"">nuweb</a> or documentation generators like <a href=""http://www.doxygen.nl/"" rel=""nofollow noreferrer"">doxygen</a>).</p>
","63480742","3","762","1","7","","2020-08-19 03:11:56","2020-08-19 05:41:46","2020-09-22 08:49:27",""
"63494975","Can I make CLion highlight doxygen comments differently than other comments?","<comments><syntax-highlighting><doxygen><clion>","<p>I'm a new user of CLion (version 2020.2), writing C++ code.</p>
<p>CLion has some sort of Doxygen support - it's willing to &quot;render&quot; Doxygen and present the rendered comment in a side-pane. However, within the code itself, the Doxygen comments have the same font and color as regular comments.</p>
<p>I know that in Eclipse, the preferences has an option you can set which sets Doxygen comments to a different color. Is there something equivalent in CLion?</p>
<p>Note: A plugin would be fine; but I couldn't find a relevant one, searching for &quot;Doxygen&quot;.</p>
","<h2>tl;dr: Upgrade to CLion 2020.3 or better yet 2021.2 .</h2>
<p>I have this running in version 2020.3:
<a href=""https://i.stack.imgur.com/phNVj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/phNVj.png"" alt=""clion settings for doxygen"" /></a></p>
<p>They have also recently fixed a bug with this feature in version 2021.2 EAP.</p>
<p>You basically go to your Settings and go into Editor | Color Scheme | Language Default and there you'll find the &quot;Comments | Doc Comment&quot; section.</p>
<p>you can specify different colors for doxygen comments, and even different handling of different sections of your doxygen comments</p>
","68275382","2","99","1","0","","2020-08-19 21:04:31","","2021-07-06 18:06:09",""
"59390133","How can I change the keyboard shortcuts for ""quick-fix"" options in CLion?","<keyboard-shortcuts><clion><jetbrains-ide>","<p>In CLion, when I hover my mouse over an area highlighed orange, like this:</p>

<p><a href=""https://i.stack.imgur.com/XVvMh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XVvMh.png"" alt=""enter image description here""></a></p>

<p>I get a context menu pop up and tell me how to fix the problem that CLang-tidy has found:</p>

<p><a href=""https://i.stack.imgur.com/kw4nI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/kw4nI.png"" alt=""enter image description here""></a></p>

<p>How can I change the keyboard shortcut for actioning the fix from <code>Alt+Shift+Enter</code> to whatever I want? (There doesn't seem to be a way to change these shortcuts from the <code>settings</code> menu. </p>
","","","1","76","0","3","","2019-12-18 10:35:06","","2019-12-18 10:35:06",""
"59690209","Using IntelliJ 2019.3.1 for plugin development for Clion. How to add c++ language support for my plugin project?","<java><intellij-idea><clion><intellij-plugin>","<p>I am currently learning about writing plugins for IntelliJ IDEs. I am especially interested in 
developing plugins for CLion. Therefore I would like to add support for c++ to my plugin project.</p>

<h2>My problem:</h2>

<p>I read in the documentation how to develop plugins for c++.However the way it is described does not work for me.  IntelliJ cannot resolve the dependency I want to add. </p>

<h2>What I currently know:</h2>

<p><strong>1.</strong> 
<a href=""https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html#modules-specific-to-functionality"" rel=""nofollow noreferrer"">This</a> part of the documentation explains that plugins may depend on other plugins, 
and how to add dependencies. </p>

<blockquote>
  <p><strong>Plugin dependencies</strong></p>
  
  <p>Your plugin may depend on classes from other plugins. In this case,
  plugins can be either bundled, third-party or even your own. For
  instructions on how to express the dependencies, refer to Plugin
  Dependencies.</p>
  
  <p>Your plugin should specify which product or products it will be
  compatible with (all IntelliJ-based IDEs, CLion only, or some subset).
  <strong>You can do that</strong> by declaring module dependencies with the 
  tag in plugin.xml (see Plugin Compatibility with IntelliJ Products).</p>
</blockquote>

<p><strong>2.</strong> <a href=""https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html#modules-specific-to-functionality"" rel=""nofollow noreferrer"">This</a> part of the documentation explains which functionality is in which plugin. Each specific language seems to be a plugin. So developing a plugin which wants to parse c++, will depend on the c++ plugin.</p>

<blockquote>
  <p><strong>Modules Specific to Functionality</strong> More specialized functionality is also delivered via modules and plugins in IntelliJ Platform-based
  products. For example, the com.intellij.modules.python module supports
  the Python language-specific functionality. If a plugin uses
  functionality from this module, such as Python-specific inspections
  and refactoring, it must declare a dependency on this module.</p>
  
  <p>...</p>
  
  <p>The following table lists(1) modules or built-in plugins that provide
  specific functionality, and the products that currently ship with
  them.</p>
</blockquote>

<p>According to the table mentioned above I need to add <code>&lt;depends&gt;com.intellij.modules.cidr.lang&lt;/depends&gt;</code> as dependency for c++. However when I add this line to my <code>plugins.xml</code> file  the cidr.lang part is not recognized. </p>

<p><strong>3.</strong> In <a href=""https://stackoverflow.com/questions/57538497/gradle-fails-trying-to-build-class-using-psimethod-in-intellij-plugin-project"">this</a> Stackoverflow question, which is about java plugin development, someone answered that there was recently a change, that one now also has to add the needed plugins to build.gradle. Furthermore there was a change tha java language support is now a buildin plugin. </p>

<h2>My guess what todo</h2>

<p>I guess c++ support is now also a buildin plugin? But how can I add it?</p>

<p>So instead of </p>

<pre><code>intellij {
    version '2019.2'
    plugins 'java'
}
</code></pre>

<p>Maybe I need something like this?</p>

<pre><code>intellij {
    version '2019.2'
    plugins 'c++' // or maybe cidr??
}
</code></pre>

<hr>

<h2>Appendix</h2>

<p><strong>My java class:</strong></p>

<pre><code>import com.intellij.openapi.actionSystem.AnAction;
import com.intellij.openapi.actionSystem.AnActionEvent;
import com.intellij.openapi.actionSystem.CommonDataKeys;
import com.intellij.openapi.editor.Editor;
import com.intellij.openapi.ui.Messages;
import com.intellij.psi.PsiElement;
import com.intellij.psi.PsiFile;
import com.intellij.psi.PsiRecursiveElementWalkingVisitor;
//import com.jetbrains.cidr.lang.psi.OCFunctionDefinition; &lt;-- This import does not work 
public class HelloAction extends AnAction {
    public HelloAction() {
        super(""Hello"");
    }

    @Override
    public void actionPerformed(AnActionEvent anActionEvent) {
        Editor editor = anActionEvent.getData(CommonDataKeys.EDITOR);
        PsiFile psiFile = anActionEvent.getData(CommonDataKeys.PSI_FILE);
        if (editor == null || psiFile == null) return;
        int offset = editor.getCaretModel().getOffset();

        final StringBuilder infoBuilder = new StringBuilder();
        PsiElement element = psiFile.findElementAt(offset);
        infoBuilder.append(""Element at caret: "").append(element).append(""\n"");
        Messages.showMessageDialog(anActionEvent.getProject(), infoBuilder.toString(), ""PSI Info"", null);

        psiFile.accept(new PsiRecursiveElementWalkingVisitor(){
            @Override
            public void visitElement(PsiElement element) {
                super.visitElement(element);
                infoBuilder.append(element.getText()).append(""\n"");

            }
        });
    }

    @Override
    public void update(AnActionEvent e) {
        Editor editor = e.getData(CommonDataKeys.EDITOR);
        PsiFile psiFile = e.getData(CommonDataKeys.PSI_FILE);
        e.getPresentation().setEnabled(editor != null &amp;&amp; psiFile != null);
    }
}
</code></pre>

<p><strong>My build.gradle file</strong></p>

<pre><code>plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.15'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version 'LATEST-EAP-SNAPSHOT'
    type 'CL'
}
patchPluginXml {
    changeNotes """"""
      Add change notes here.&lt;br&gt;
      &lt;em&gt;most HTML tags may be used&lt;/em&gt;""""""
}
</code></pre>

<p><strong>My plugin.xml</strong></p>

<pre><code>&lt;idea-plugin&gt;
    &lt;id&gt;org.helloplugin&lt;/id&gt;
    &lt;name&gt;Hello Action Project&lt;/name&gt;
    &lt;version&gt;0.0.1&lt;/version&gt;
    &lt;vendor email=""dummy"" url=""dummy""&gt;dummy&lt;/vendor&gt;

    &lt;depends&gt;com.intellij.modules.lang&lt;/depends&gt;
    &lt;depends&gt;com.intellij.modules.cidr.lang&lt;/depends&gt; // cannot be resolved

    &lt;extensions defaultExtensionNs=""com.intellij""&gt;
    &lt;/extensions&gt;

    &lt;actions&gt;
        &lt;group id=""MyPlugin.SampleMenu"" text=""Greeting"" description=""Greeting menu""&gt;
            &lt;add-to-group group-id=""MainMenu"" anchor=""last""/&gt;
            &lt;action id=""Myplugin.Textboxes"" class=""HelloAction"" text=""Hello"" description=""Says hello""/&gt;
        &lt;/group&gt;
    &lt;/actions&gt;
&lt;/idea-plugin&gt;
</code></pre>
","<p>I found the answer in the documentation. I just had to reimport the project.</p>

<blockquote>
  <p>Exploring Module and Plugin APIs</p>
  
  <p>Once the dependency on a module or plugin is declared in plugin.xml,
  it’s useful to explore the packages and classes available in that
  dependency. The section below gives some recommended procedures for
  discovering what’s available in a module or plugin on which a project
  depends. These procedures assume a project has the build.gradle and
  plugin.xml dependencies configured correctly. Exploring APIs as a
  Consumer</p>
  
  <p>Exploring the available packages and classes in a plugin or module
  utilizes features in the IntelliJ IDEA IDE.</p>
  
  <p>If the project is not up to date, Reimport the Gradle project as a
  first step. Reimporting the project will automatically update the
  dependencies.</p>
</blockquote>

<p>So for c++ language support there is no need to add something to build.gradle</p>

<p><strong>My plugin.xml</strong></p>

<pre><code>&lt;idea-plugin&gt;
    &lt;id&gt;org.helloplugin&lt;/id&gt;
    &lt;name&gt;Hello Action Project&lt;/name&gt;
    &lt;version&gt;0.0.1&lt;/version&gt;
    &lt;vendor email=""dummy"" url=""dummy""&gt;dummy&lt;/vendor&gt;

    &lt;depends&gt;com.intellij.modules.platform&lt;/depends&gt;
    &lt;depends&gt;com.intellij.modules.lang&lt;/depends&gt;
    &lt;depends&gt;com.intellij.modules.cidr.lang&lt;/depends&gt;


    &lt;extensions defaultExtensionNs=""com.intellij""&gt;
    &lt;/extensions&gt;

    &lt;actions&gt;
        &lt;group id=""MyPlugin.SampleMenu"" text=""Greeting"" description=""Greeting menu""&gt;
            &lt;add-to-group group-id=""MainMenu"" anchor=""last""/&gt;
            &lt;action id=""Myplugin.Textboxes"" class=""HelloAction"" text=""Hello"" description=""Says hello""/&gt;
        &lt;/group&gt;
    &lt;/actions&gt; &lt;/idea-plugin&gt;
</code></pre>
","59702409","2","590","1","0","0","2020-01-10 23:22:32","2020-01-11 08:22:57","2020-01-12 09:12:11",""
"59700809","Error with RawStringFormats in clang-format in CLion","<c++><clion><clang-format>","<p>I'm trying to use a <code>clang-format</code> file in CLion but CLion gives me the error:
<code>Error reading [path to clang-format]: Invalid Argument</code></p>

<p>The error has to do with the <code>RawStringFormats</code> in my <code>.clang-format</code> file. When I remove the <code>RawStringFormats</code> section, CLion gives me no errors.</p>

<p>My <code>.clang-format</code> file is auto-generated by a script using Google's standards.</p>

<p>I need to find out the cause of the problem so I can modify the script to prevent this issue.</p>

<pre><code>RawStringFormats: 
  - Delimiter:       pb
    Language:        TextProto
    BasedOnStyle:    google
</code></pre>
","","","3","1146","1","2","","2020-01-12 03:57:25","2020-01-12 04:03:33","2020-01-30 10:14:17",""
"60410666","Where does CLion's CLangFormat take format settings?","<clang><clion><clang-format>","<p>Where does CLion's CLangFormat take format settings?</p>

<p>I have settings in action I don't like. How to change them and/or how to force using of specific clang configuration file?</p>
","","","1","329","1","0","","2020-02-26 09:31:04","","2020-02-27 15:59:10",""
"60482298","Why can't I configure a CMake target with CLion (Nothing to run on)?","<cmake><clion><run-configuration>","<p>I'm struggling to run a program with CLion on Windows 10. It was working fine a couple weeks ago and the only thing I could think of that might have broken things is installing git.</p>

<p>As you can see from the below picture, the run button is greyed out and the run configuration says ""Nothing to run on"", which I'm guessing refers to the target.</p>

<p><a href=""https://i.stack.imgur.com/jfEIz.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/jfEIz.png"" alt=""enter image description here""></a></p>

<h3>What I've done So Far</h3>

<p>I tried going through the steps outlined in the accepted answer of this question:   <a href=""https://stackoverflow.com/questions/33267305/how-do-i-set-up-clion-to-compile-and-run"">How do I set up CLion to compile and run?</a></p>

<ul>
<li>I installed MinGW in <code>C:\MinGW</code></li>
<li>Added <code>C:\MinGW</code>and <code>C:\MinGW\bin</code> to the path</li>
<li>I've configured paths to my Environment, CMake, Make, C Compiler, and C++ Compiler</li>
</ul>

<p><a href=""https://i.stack.imgur.com/mKLzA.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/mKLzA.png"" alt=""enter image description here""></a></p>

<ul>
<li>I've set my target &amp; executable, but the only target I can choose is 'All targets'.</li>
</ul>

<p><a href=""https://i.stack.imgur.com/ELMqp.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/ELMqp.png"" alt=""enter image description here""></a></p>

<p>If I run this program through 'Run->Run...' and select the 'Wahum' run configuration, I get the following output in my Event Log:</p>

<pre><code>Error running 'Wahum': Cannot run 'Wahum' on '&lt;default&gt;'
</code></pre>
","<p>My setup was a little different, but I managed to make it work doing this:</p>
<ul>
<li>Deleted the &quot;.idea&quot; file for the project.</li>
<li>Deleted all cmake files &amp; folders for the project (cmake-build_xyz, CMakeLists, .clion.source.upload.marker, etc)</li>
<li>Deleted other cmake files found in parent directories (which I knew were not supposed to be used)</li>
<li>Created a new project &quot;from the files&quot; (of the project initial project)</li>
<li>Deleted any CMake Profile (Settings-&gt; Build, Execution, Deployment-&gt;CMake)</li>
<li>Created a new CMake Profile.</li>
<li>Added the code back in the CMakeLists.txt</li>
<li>Reloaded the CMake.</li>
</ul>
<p>A difference in my setup was that I was building on a remote computer (Linux) over SSH. So I had some entries in the &quot;Deployment&quot; section (Settings-&gt; Build, Execution, Deployment-&gt; Deployment). Therefore, I did the same thing on the target and the host to make sure that any conflicting while would not be synced on top of the &quot;other file&quot;.</p>
<p>While looking for a solution, I did try to setup a dummy project using Microsoft Toolchains without any success.</p>
","66676600","5","11389","9","0","","2020-03-02 03:45:35","","2022-01-20 13:17:34",""
"60492800","How can I clean up compiler-file*.d in IntelliJ CLion?","<intellij-idea><clion><compilation-database>","<p>I created a compilation database for a large C  project in IntelliJ CLion.  So far it's been working well, but my directories are filling up with compiler-file*.d files.  Is there a way to clean them up?</p>
","","","1","45","0","1","","2020-03-02 16:17:35","","2020-03-02 16:17:35",""
"62691637","Clion show errors but the codes can be built successfully with Cmake","<c++><boost><cmake><boost-beast>","<p>I'm try to learn about Boost::Beast with IDE CLion.</p>
<p>Here is my environment:</p>
<ul>
<li>MacBook Pro (15-inch 2018) with Core i9</li>
<li>Compiler:
Apple clang version 11.0.3 (clang-1103.0.32.62)
Target: x86_64-apple-darwin19.5.0
Thread model: posix
InstalledDir: /Library/Developer/CommandLineTools/usr/bin</li>
<li>Clion version: CLion 2020.1.2 Build #CL-201.7846.88, built on June 3, 2020</li>
<li>Boost: 1.72 installed by HomeBrew</li>
</ul>
<p>Here is my code:</p>
<pre><code>#include &lt;boost/asio.hpp&gt;
#include &lt;boost/beast.hpp&gt;
#include &lt;iostream&gt;

namespace beast = boost::beast;
namespace http = beast::http;
namespace net = boost::asio;
using tcp = net::ip::tcp;
using boost::asio::awaitable;
using boost::asio::use_awaitable;

awaitable&lt;void&gt; test() {
    net::io_context ctx;
    tcp::resolver resolver(ctx);

    http::response&lt;http::dynamic_body&gt; res;
    auto const results =
    co_await
    resolver.async_resolve(&quot;www.google.com&quot;, &quot;80&quot;, use_awaitable);

    beast::tcp_stream stream(ctx);

    // Set the timeout.
    stream.expires_after(std::chrono::seconds(30));

    // Make the connection on the IP address we get from a lookup
    co_await
    stream.async_connect(results, use_awaitable);

    // Set up an HTTP GET request message
    http::request&lt;http::string_body&gt; req{http::verb::get, &quot;/&quot;, 5};
    req.set(http::field::user_agent, BOOST_BEAST_VERSION_STRING);

    // Set the timeout.
    stream.expires_after(std::chrono::seconds(30));

    // Send the HTTP request to the remote host
    co_await http::async_write(stream, req, use_awaitable);
}

int main() {}
</code></pre>
<p>And the CMkaeLists.txt</p>
<pre><code>cmake_minimum_required(VERSION 3.16)
project(untitled)

if(APPLE)
    include_directories(/usr/local/include)
endif()

find_package(Boost REQUIRED)

set(CMAKE_CXX_STANDARD 20)

add_executable(untitled main.cpp)
</code></pre>
<p>Everything for build is OK, but the IDE show errors for statement <code>co_await http::async_write(stream, req, use_awaitable);</code>:</p>
<pre><code>Function 'async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::executor, boost::beast::unlimited_rate_policy&gt;, true, boost::beast::http::basic_string_body&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, boost::beast::http::basic_fields&lt;std::__1::allocator&lt;char&gt; &gt;, const boost::asio::use_awaitable_t&lt;boost::asio::executor&gt; &amp;&gt;' with deduced return type cannot be used before it is defined 'async_write&lt;boost::beast::basic_stream&lt;boost::asio::ip::tcp, boost::asio::executor, boost::beast::unlimited_rate_policy&gt;, true, boost::beast::http::basic_string_body&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, boost...
</code></pre>
","","","2","239","2","0","","2020-07-02 07:57:10","","2020-07-03 14:56:46",""
"62697326","How can I import a CLion C++ project into Visual Studio?","<c++><visual-studio><cmake><clion>","<p>It seems like this should be easy and I've spent hours trying to find this answer online but haven't had any luck.</p>
<p>I can open the CLion folder path in Visual Studio, but that option doesn't give me the usual options to build and start the project. To do that, I need to open CLion as a Project/Solution, but I can't seem to do this.</p>
<p>My professor requires that my C++ code be executable in Visual Studio, but I prefer CLion. So I've done all my work in CLion and want to test that it runs in Visual Studio. How can I import my CLion project?</p>
<p>Thanks!</p>
","<p>The link provided describes <a href=""https://docs.microsoft.com/en-us/cpp/build/cmake-projects-in-visual-studio?view=vs-2019"" rel=""nofollow noreferrer"">Visual Studio's CMake integration</a>, which (similar to CLion) will install a version of CMake that Visual Studio will use. These instructions are pretty thorough and should provide everything needed to get your CMake project working in Visual Studio.</p>
<p>Now, you probably have <em>two</em> versions of CMake installed on your machine, one that came with CLion and one that came with Visual Studio. I would recommend installing the <em>latest</em> version of <a href=""https://cmake.org/download/"" rel=""nofollow noreferrer"">CMake</a> on your machine <strong>separately</strong>, and configuring both Visual Studio and CLion to use <em>that</em> version instead. However, this is probably getting outside the scope of your immediate problem.</p>
<hr />
<p>As you follow the Microsoft's instructions for <a href=""https://docs.microsoft.com/en-us/cpp/build/cmake-projects-in-visual-studio?view=vs-2019"" rel=""nofollow noreferrer"">&quot;CMake projects in Visual Studio&quot;</a>, you mentioned receiving the error:</p>
<pre><code>1&gt; [CMake] CMake Error at C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.17/Modules/CMakeDetermineSystem.cmake:173 (file): 
1&gt; [CMake] file failed to open for writing (No such file or directory):
</code></pre>
<p>This looks like a <strong>permissions</strong> issue, specifically while running CMake within Visual Studio, so be sure you have read/write access to all the files in your project, and the CMake packages in your Visual Studio installation. Hopefully, this doesn't require you re-install Visual Studio in another location on your machine, or run Visual Studio with elevated privileges, but perhaps that is necessary.</p>
<hr />
<p>If you decide to install CMake <strong>separately</strong>, the instructions would be the following:</p>
<ol>
<li><p>Install the latest CMake on your machine (somewhere you have adequate permissions), and ensure it is available in your <code>Path</code> environment variable. You can verify this by running <code>cmake -version</code> from the command line to see it is the version you just installed.</p>
</li>
<li><p>Using Windows command prompt, navigate to your CMake project directory (containing the top-level <code>CMakeLists.txt</code> file), and run the following:</p>
<pre><code>mkdir build
cd build
cmake -G &quot;Visual Studio 16 2019&quot; -A x64 ..
</code></pre>
<p>You may run <code>-A Win32</code> with the <code>cmake</code> command instead if your project is a 32-bit build.</p>
</li>
<li><p>Open the <code>.sln</code> Visual Studio Solution file that was generated in the <code>build</code> directory. Once, the Solution is loaded in Visual Studio, you can build the project (<strong>CTRL + SHIFT + B</strong>).</p>
</li>
</ol>
","62717044","2","2199","1","6","2","2020-07-02 13:20:34","2020-07-03 10:22:47","2020-07-03 14:03:11",""
"62722763","Is it possible to exclude directories from CLions coverage interface to gcov?","<c++><testing><code-coverage><clion><gcov>","<p>Is it possible to exclude directories from CLion's interface to gcov / gcovr? Its a great tool but I have like 40% coverage because lots of third party directories are being included, including googletest. I've heard that other coverage tools use an exclude file, a bit like a <code>.gitignore</code>, which would be great.</p>
","","","2","63","0","0","1","2020-07-03 21:13:29","","2020-07-03 21:13:29",""
"57257862","What is the command line used by CLion when invoking CMake?","<build><cmake><clion>","<p>What is exactly the command line (process and arguments) used by CLion  when invoking CMake? I'm trying to use the same directory for manual builds using the terminal and for building using the IDE, but it seems that one is interacting badly with the other.</p>

<p>I have no problem with using CLion only to handle CMake configurations (to avoid slight configuration mismatch triggering another CMake execution), but it seems that even standard builds using <code>make</code> on the command line trigger <code>cmake</code> again.</p>

<p>I've seen that CLion prints it's ""call"" to CMake, but I don't see where it references the current working directory. And since on the GUI you configure paths relative to the project root folder (where <code>CMakeLists.txt</code> live), instead of relative to the build folder. I was hoping that this detail is the culprit here.</p>

<p>Usually in the command line I'd do it like this:</p>

<pre><code>$ cd project
$ mkdir -p builds/debug
$ cd builds/debug
$ cmake $MY_CMAKE_OPTS -DSPECIAL_FILE=../../file.ext ../..
</code></pre>

<p>On CLion, though, I have to configure it like this:</p>

<pre><code>CMake options: $MY_CMAKE_OPTS -DSPECIAL_FILE=file.ext
Generation path: builds/debug
The rest I've used the default
</code></pre>

<p>This <em>special file</em> is used on the configuration phase, so using paths other than relative to project root or absolute paths won't work.</p>
","<p><strong>Configuration step</strong> command line is shown in CMake view when you load/reload a CMake project: <code>View - Tool Windows - CMake</code>. The view has no default hotkey.</p>

<p>Example: <code>/Users/vic/bin/cmake_ninja_wrapper.py -DCMAKE_BUILD_TYPE=Debug -G ""CodeBlocks - Unix Makefiles"" /Users/user/src/helloworld</code>.</p>

<p>Depending on configuration, the current directory can be <code>PROJECT_SOURCE_DIR/cmake-build-debug</code> (where the build files were generated for me), <code>PROJECT_SOURCE_DIR/cmake-build-release</code>, or other.</p>

<p><strong>Build step</strong> command line is shown in <code>Messages - Build</code> view. It opens when you invoke build from Build menu. I don't think the current directory matters for it, as all the build files are already generated. </p>

<p>Example: <code>/Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake --build /Users/user/src/helloworld/cmake-build-debug --target helloworld -- -j 6</code></p>

<p>Then the view can be opened with <code>Cmd-0</code> on Mac, or through menu: <code>View - 
Tool Windows - Messages</code>.</p>

<p>To work with relative paths, you can refer to <a href=""https://cmake.org/cmake/help/v3.0/variable/PROJECT_SOURCE_DIR.html"" rel=""nofollow noreferrer"">PROJECT_SOURCE_DIR</a> variable in your <code>CMakeLists.txt</code>.</p>
","57437429","1","1477","1","0","","2019-07-29 16:24:14","","2019-08-10 17:11:04",""
"57269989","Breakpoints won't hit on CLion","<c++><clion>","<p>CLion gives the following hover message accompanied with a ""no"" sign instead of a breakpoint red dot:</p>

<pre><code>This breakpoint will currently not hit. No executable code associated with the following line.
</code></pre>

<p>This also happens when I put a breakpoint on a print statement. The print statement does get printed in the std output. How can the line not be associated with executable code then?</p>
","","","1","1121","2","2","","2019-07-30 10:52:11","","2022-04-20 09:55:33",""
"57269134","How to import settings into CLion afterwards?","<settings><clion>","<p>CLion had upgraded itself automatically and asked me to import settiogs from old version which I refused. </p>

<p>Can I import these settings now? </p>

<p>If I am doing <code>File -&gt; Import Settings</code> and choosing any of </p>

<p><code>/home/MYNAME/.CLion2019.1</code></p>

<p><code>/home/MYNAME/.CLion2019.1/config</code></p>

<p>and so on, it says it can't find <code>settings.zip</code></p>

<p><a href=""https://i.stack.imgur.com/izb9k.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/izb9k.png"" alt=""enter image description here""></a></p>

<p>If I compress <code>/home/MYNAME/.CLion2019.1</code> and try to feed <code>CLion</code> with it, it says</p>

<p><a href=""https://i.stack.imgur.com/BJmIi.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BJmIi.png"" alt=""enter image description here""></a></p>

<p>Is it possible to import, or train is gone now?</p>
","","","1","60","0","0","","2019-07-30 10:03:40","","2019-07-30 10:03:40",""
"57282516","How to use python remote interpreter in CLion","<python><clion>","<p>I want to use remote Python Interpreter in CLion, and I do not find corresponding config in Clion.</p>

<p>I have try to config in Preferences >> Build, Execution, Deployment >> Python Interpreter.</p>

<p>But I don't find where to config a remote Python Interpreter in CLion.<a href=""https://i.stack.imgur.com/c03ls.png"" rel=""nofollow noreferrer"">Here is the config page for Python Interpreter but not where for remote interpreter.</a></p>
","","","2","493","1","0","","2019-07-31 02:54:19","","2019-07-31 15:55:00",""
"58155257","Is there any way to increase memory limit and execution time limit in CLion IDE?","<c++><ide><clion><jetbrains-ide>","<p>I would like to increase the memory limit i.e. <strong>512MB</strong> and increase execution time limit(if there is an execution time limit in the IDE) i.e <strong>10sec</strong> in CLion IDE. How can I achieve that?</p>
","","","1","103","0","0","","2019-09-29 12:36:00","","2019-09-29 12:36:00",""
"58529812","How can i include SDL_gfx libraries in a Clion project?","<cmake><sdl-2>","<p>So there is a weird thing that I've encountered, where i can make the SDL2 libraries work in clion but if i include the SDL_gfx libraries it won't compile.</p>

<p>So here is what I've done so far:</p>

<ol>
<li>I've downloaded the Windows 64 version of SDL from the website, uncompressed it, and dragged the files in the corresponding MinGW folder.</li>
<li><p>I've edited the cmake file so that clion can see it as well, and it really works</p>

<p>My cmake file:</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(pontok C)


set(CMAKE_C_STANDARD 99)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ""${PROJECT_SOURCE_DIR}/cmake"")

find_package(SDL2 REQUIRED)

add_executable(pontok main.c)

include_directories(${SDL2_INCLUDE_DIR}
        ${SDL2_IMAGE_INCLUDE_DIR}
        ${SDL2_MIXER_INCLUDE_DIR}
        )

target_link_libraries(pontok ${SDL2_LIBRARY}
        ${SDL2_IMAGE_LIBRARY}
        ${SDL2_MIXER_LIBRARY}
        )
</code></pre></li>
<li><p>I've downloaded the SDL_gfx package from <a href=""http://www.ferzkopp.net/wordpress/2016/01/02/sdl_gfx-sdl2_gfx/"" rel=""nofollow noreferrer"">here</a> and put the .h and .a files in the corresponding MinGW folders. Clion can see it, and it appears normal until I hit compile:</p>

<p><a href=""https://i.stack.imgur.com/4Jfom.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4Jfom.png"" alt=""Here you can see, that it is not highlighted, and it does nit have a problem with it.""></a></p></li>
</ol>

<p>If my code is:</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
#include &lt;SDL2\SDL2_gfxPrimitives.h&gt;
#include &lt;SDL2\SDL.h&gt;

const int SCREEN_WIDH = 640;
const int SCREEN_HEIGHT = 480;

int main(int argc, char *argv[]) {
    if (SDL_Init(SDL_INIT_EVERYTHING) &lt; 0) {
        SDL_Log(""Nem indithato az SDL: %s"", SDL_GetError());
        exit(1);
    }
    SDL_Window *window = SDL_CreateWindow(""SDL peldaprogram"", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, 440, 360, 0);
    if (window == NULL) {
        SDL_Log(""Nem hozhato letre az ablak: %s"", SDL_GetError());
        exit(1);
    }
    SDL_Renderer *renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_SOFTWARE);
    if (renderer == NULL) {
        SDL_Log(""Nem hozhato letre a megjelenito: %s"", SDL_GetError());
        exit(1);
    }
    SDL_RenderClear(renderer);

    int x, y, r;

    //circleRGBA(renderer, x, y, r, 255, 0, 0, 255);
    //circleRGBA(renderer, x + r, y, r, 0, 255, 0, 255);
    //circleRGBA(renderer, x + r * cos(3.1415 / 3), y - r * sin(3.1415 / 3), r, 0, 0, 255, 255);

    SDL_RenderPresent(renderer);

    SDL_Event ev;
    while (SDL_WaitEvent(&amp;ev) &amp;&amp; ev.type != SDL_QUIT) {
    }

    SDL_Quit();
    return 0;
}
</code></pre>

<p>Than it works. It compiles and the blank window appears. But if i remove those three lines from comments, then it wont compile, and I'll get the next error:</p>

<pre><code>CMakeFiles\pontok.dir/objects.a(main.c.obj): In function `SDL_main':
C:/Prog/pontok/main.c:28: undefined reference to `circleRGBA'
C:/Prog/pontok/main.c:29: undefined reference to `circleRGBA'
C:/Prog/pontok/main.c:30: undefined reference to `circleRGBA'
collect2.exe: error: ld returned 1 exit status
mingw32-make.exe[3]: *** [CMakeFiles\pontok.dir\build.make:88: pontok.exe] Error 1
mingw32-make.exe[2]: *** [CMakeFiles\Makefile2:75: CMakeFiles/pontok.dir/all] Error 2
mingw32-make.exe[1]: *** [CMakeFiles\Makefile2:82: CMakeFiles/pontok.dir/rule] Error 2
mingw32-make.exe: *** [Makefile:117: pontok] Error 2
</code></pre>

<p>The weird thing is that clion can see these circleRGBA unctions, in <a href=""https://i.stack.imgur.com/b2M3Y.png"" rel=""nofollow noreferrer"">this picture</a> we can see that it can recognize the function, it writes the attributes next to the variables.</p>
","<p>Ok so i figured it out. The problem was that clion could not see the .c SDL2_gfx files, so i had to add them to the project and had to edit the following line in the CMakeList.txt:</p>

<p><code>add_executable(pontok main.c SDL2_framerate.c SDL2_gfxPrimitives.c SDL2_imageFilter.c SDL2_rotozoom.c)</code></p>

<p>This way it compiled and worked properly.</p>
","58579290","1","430","2","3","1","2019-10-23 19:30:38","2019-10-24 14:24:29","2019-10-27 12:08:12",""
"58746745","Run CLion Full Remote Mode C++ program as root","<c++><remote-debugging><clion><bluez><superuser>","<p>I am developing some code using the BlueZ Bluetooth stack and running it requires root privileges. As example running <code>hcitool lescan</code> as normal user returns <code>Set scan parameters failed: Operation not permitted</code>, which is also seen from my C++ code where <code>hci_le_set_scan_parameters()</code> functions returns <code>-1</code>.</p>

<p>The question <a href=""https://stackoverflow.com/questions/34927781/run-a-c-program-in-clion-as-root"">Run a C++ program in Clion as root</a> is about running C++ program as root in CLion on the local machine, which can be as simple as running the CLion as root.</p>

<p>I have configured <a href=""https://www.jetbrains.com/help/clion/remote-projects-support.html"" rel=""nofollow noreferrer"">Full Remote Mode</a> with remote toolchain:
<a href=""https://i.stack.imgur.com/eTWBA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eTWBA.png"" alt=""enter image description here""></a></p>

<p>and then I'm using this same configuration for automatic deployment:
<a href=""https://i.stack.imgur.com/e9BzN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/e9BzN.png"" alt=""enter image description here""></a></p>

<p>and then the <em>Run/Debug Configurations</em> are automatically run as this user on the remote machine.</p>

<p>I could replace <code>Non-superuser user</code> in Deployment configuration with <code>root</code> and probably solve the problem (by also giving root privileges to whole <em>Remote Host Browser</em>) - but is there any other way to achieve this any only run the built executable with <code>sudo</code>?</p>
","","","3","312","0","3","","2019-11-07 10:29:41","","2019-11-07 10:29:41",""
"55290066","CLion: force the attach process to attach process to certain debugger","<python><clion><lldb>","<p>I am trying to debug some c++ codes called from a python program (through python-c++ binding). My original approach was to start ipython, open lldb and attach the ipython process in lldb. Then go to ipython to run my python program. This works fine.</p>

<p>Now I want to take advantages of CLion IDE by attaching the ipython process inside CLion. However, When I did the attach process from CLion, it seems to attach to the process to the pydev debugger like below instead of attach the process to lldb:</p>

<pre><code>Attaching to a process with PID=18016
/Library/Frameworks/Python.framework/Versions/3.6/Resources/Python.app/Contents/MacOS/Python /Applications/CLion.app/Contents/plugins/python/helpers/pydev/pydevd_attach_to_process/attach_pydevd.py --port 51406 --pid 18016
Connected to pydev debugger (build 183.5429.37)
</code></pre>

<p>However, I want the process to be attached to lldb, not pydev_debugger. </p>

<p>How do I force the attach_process in CLion to attach the process to lldb instead of pydev_debugger? Thanks!</p>
","","","2","957","1","0","","2019-03-21 22:15:04","","2019-03-22 01:39:42",""
"55520237","Target not showing in CLion run configurations","<c++><cmake><clion>","<p>I have a C++ project in CLion and everything has been working well.
Today I wanted to add a new target, let us call it <code>emst</code>, which is nothing but this <a href=""https://doc.cgal.org/latest/BGL/BGL_triangulation_2_2emst_8cpp-example.html"" rel=""nofollow noreferrer"">https://doc.cgal.org/latest/BGL/BGL_triangulation_2_2emst_8cpp-example.html</a>.
I do the usual thing, which had always worked for me:
1) create a folder, say ""helper""
2) put the file ""emst.cpp"" into it
3) create a CMakeLists.txt with the following contents:</p>

<pre><code>include_directories(${CMAKE_SOURCE_DIR})

add_executable(emst emst.cpp)
target_link_libraries(emst
        PRIVATE sdsl)
target_compile_options(emst BEFORE PUBLIC -mcmodel=large PRIVATE -pg -g -O2)
</code></pre>

<p>Never mind stuff like <code>sdsl</code> -- it is a library installed on my system, and I have no problem with the above set-up for all the other code in the project.
Overall, the structure looks like this:
<a href=""https://i.stack.imgur.com/obbnF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/obbnF.png"" alt=""enter image description here""></a></p>

<p>Now, the target <code>emst</code> does not show up among the targets of <code>CLion</code>.
How could that be? I remember someone suggesting at SE to <code>Mark directory as Source</code> or <code>as Library</code>, but neither of these worked for me.
What am I missing?
I had the exact same setup for all the other <code>cpp</code>-targets in my project, and it worked hitherto fine.</p>

<p>It also says </p>

<blockquote>
  <p>Cannot compile file 'emst.cpp'. Cannot find run configuration for this
  file</p>
</blockquote>

<p>EDIT:
from the icons you can see that <code>CMakeLists.txt</code> is treated as a text-file only, in the above directory:
<a href=""https://i.stack.imgur.com/CcNts.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CcNts.png"" alt=""enter image description here""></a></p>
","","","4","627","0","0","","2019-04-04 15:51:58","2019-04-04 18:55:18","2019-04-04 18:55:18",""
"55942149","CLion filling temp directory","<clion>","<p>CLion has been generating multiple ~100M sized <code>preamble-*</code> files in the standard <code>/tmp</code> directory.</p>

<ol>
<li>Any suggestions on how this can be disabled?</li>
<li>Alternatively any suggestions on how to change the default temp directory?</li>
</ol>
","<p>The <code>preamble-*</code> files are created by Clang that is used by CLion.</p>

<p>To change the directory specify an environment variable <code>TMPDIR=/your/preferred/location</code> when running CLion.</p>
","56022789","5","782","1","1","","2019-05-01 20:12:22","","2019-05-07 12:36:04",""
"56129141","CLion plugin with python packages","<bazel>","<p>I want to implement a python project built with bazel in CLion.
But I can't get auto-completion and import resolving running, means I can't easily ""Go to"" imported files.</p>

<p>I am using Python 2018.3.4 and the Bazel plugin v2019.04.15. I build with bazel version 0.25.0.</p>

<p>I also checked out the fix in the drake repository:
<a href=""https://github.com/RobotLocomotion/drake/tree/master/tools/clion"" rel=""nofollow noreferrer"">https://github.com/RobotLocomotion/drake/tree/master/tools/clion</a>
But CLion still doesn't resolve the imports.</p>

<p>Does anybody have a solution for CLion or run a different IDE where python packages are nicely integrated?</p>
","","","1","30","0","0","","2019-05-14 11:14:53","","2019-05-14 11:14:53",""
"56310502","undefined reference to `curl_easy_init' on CLion/Mingw","<c++><curl><cmake><clion><mingw-w64>","<p>I am trying to use curl inside c++ code. How should i do it properly ?</p>

<p>I have pasted libcurl.a &amp; libcurl.dll.a in this directory:
C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\lib</p>

<p>This is my CMakeLists.txt from CLion/Mingw</p>

<pre><code>cmake_minimum_required(VERSION 3.3) 
project(tan)
set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -std=c++14 -lcurl.dll"")
add_executable(tan Tan/mail.cpp)
project(untitled6)
</code></pre>

<p>When I add ""#define CURL_STATICLIB"" i get these errors:</p>

<pre><code>reference to `curl_easy_init'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:84: undefined  
reference to `curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:86: undefined reference to `curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:91: undefined reference to `curl_slist_append'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:92: undefined reference to `curl_slist_append'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:93: undefined reference to `curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:98: undefined reference to `curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:99: undefined reference to `curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:100: undefined reference to `curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:103: undefined reference to `curl_easy_perform'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:107: undefined reference to `curl_easy_strerror'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:111: undefined reference to `curl_slist_free_all'
C:/Users/John/CLionProjects/tan/Tam/mail.cpp:121: undefined reference to ````curl_easy_cleanup

Without ""#define CURL_STATICLIB"" i get these errors:

CMakeFiles\tan.dir/objects.a(mail.cpp.obj): In function `main':
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:81: undefined reference to `__imp_curl_easy_init'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:84: undefined reference to `__imp_curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:86: undefined reference to `__imp_curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:91: undefined reference to `__imp_curl_slist_append'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:92: undefined reference to `__imp_curl_slist_append'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:93: undefined reference to `__imp_curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:98: undefined reference to `__imp_curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:99: undefined reference to `__imp_curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:100: undefined reference to `__imp_curl_easy_setopt'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:103: undefined reference to `__imp_curl_easy_perform'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:107: undefined reference to `__imp_curl_easy_strerror'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:111: undefined reference to `__imp_curl_slist_free_all'
C:/Users/John/CLionProjects/tan/Tan/mail.cpp:121: undefined reference to `__imp_curl_easy_cleanup'
</code></pre>
","","","1","1168","1","3","","2019-05-26 03:52:07","2019-05-26 03:59:14","2019-05-26 07:16:09","2019-05-26 08:28:39"
"59829660","How to get integrated Console in Visual Studio? (like CLion/IntelliJ)","<visual-studio><intellij-idea><console><visual-studio-2019><clion>","<p>Basically I want :
<a href=""https://i.stack.imgur.com/DZsrl.png"" rel=""nofollow noreferrer"">This</a>
<a href=""https://i.stack.imgur.com/VIsXF.png"" rel=""nofollow noreferrer"">Not this</a></p>

<p>Any help how to achieve that?</p>
","","","1","34","0","0","1","2020-01-20 19:22:04","","2020-01-20 19:22:04",""
"56321933","Cannot compile curl and libgcc as a static library in MinGW/CLion (c++)","<c++><curl><cmake><mingw><libcurl>","<p>I am trying to compile curl and libgcc as a static library so I would not have to include dll files with my program. I am having problems with <code>libcurl.dll</code> not found when I run the executable through command prompt. Also, there is another error <code>libgcc_s_dw2-1.dll</code> not found. </p>

<p>It works when I put the dll files in the same folder as executable but that is not what I am really fond of. I have put <code>-DCURL_STATICLIB</code> in <code>CMAKE_CXX_FLAGS</code> as suggested here:</p>

<p><code>https://curl.haxx.se/docs/install.html</code></p>

<p>Here is my CMakeLists.txt</p>

<pre><code>project(ham)

set(CMAKE_CXX_STANDARD 14)

set(CMAKE_C_FLAGS -m32 -DCURL_STATICLIB)
set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -m32 -std=c++14 -LC:/curlx86 -lcurl"")

set(CMAKE_CXX_STANDARD_LIBRARIES ""${CMAKE_CXX_STANDARD_LIBRARIES} -static-libgcc -static-libstdc++ -lwsock32 -lws2_32 -lwinmm"")
set(CMAKE_EXE_LINKER_FLAGS ""${CMAKE_EXE_LINKER_FLAGS} -Wl,-Bstatic,--whole-archive -Wl,--no-whole-archive"")


project(untitled3)
add_executable(ham Ham/ham.cpp)

target_link_libraries(ham ""C:/curlx86/libcurl.dll.a"")
</code></pre>

<p>I want my program to run without including any extra dll files. What should I do ?</p>

<p><code>Edit</code>
When I use
<code>target_link_libraries(ham ""C:/curlx86/libcurl.dll.a"")</code></p>

<p>I get these errors.</p>

<p>c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(easy.o):(.text+0x8f): undefined reference to <code>libssh2_init'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(easy.o):(.text+0x16b): undefined reference to</code>libssh2_exit'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0xcd): undefined reference to <code>nghttp2_version'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x2ca): undefined reference to</code>nghttp2_submit_rst_stream'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x2dc): undefined reference to <code>nghttp2_session_send'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x31d): undefined reference to</code>nghttp2_session_set_stream_user_data'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x3c0): undefined reference to <code>nghttp2_pack_settings_payload'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x4bd): undefined reference to</code>nghttp2_session_resume_data'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x4fe): undefined reference to <code>nghttp2_session_mem_recv'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x51c): undefined reference to</code>nghttp2_strerror'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x5c3): undefined reference to <code>nghttp2_priority_spec_init'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x614): undefined reference to</code>nghttp2_submit_priority'
c:/mingw/bin/../lib/gcc/mingw32/8.2.0/../../../../mingw32/bin/ld.exe: C:/curlx86/libcurl.a(http2.o):(.text+0x621): undefined reference to `nghttp2_session_send'</p>

<pre><code>


</code></pre>
","","","1","1111","1","3","1","2019-05-27 07:58:20","2019-05-27 12:11:43","2021-04-05 18:39:21",""
"56643980","Clion Remote Pi: undefined reference to wiringPiSetup","<c><cmake><raspberry-pi><clion><wiringpi>","<p>I am trying to run a c-program via clion IDE using the wiringPi library. Hello world runs perfectly fine, so I can assure that the connection to the pi was established correctly. However, when I add the wiringPi-Library #include  and run wiringPiSetup(); I get an error message.</p>

<p>In order to solve this problem, I added ""-lwiringPi"" at Clion/Preferences/Build, Execution, Deployment/CMake/Build options. However, this didn't change anything. Maybe there is something missing in CMakeLists.c but I actually don't know what.</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;wiringPi.h&gt;

// Code I want to make running
int main() {
    wiringPiSetup();
    return 0;
}
</code></pre>

<p><strong>Error Message:</strong></p>

<p>====================[ Build | write_morse | Debug-Remote ]======================
/usr/local/bin/cmake --build /tmp/tmp.tL61Mxt6gP/cmake-build-debug-remote --target write_morse -- -j 4
[ 50%] Linking C executable write_morse
CMakeFiles/write_morse.dir/main.c.o: In function <code>main':
/tmp/tmp.tL61Mxt6gP/main.c:6: undefined reference to</code>wiringPiSetup'
collect2: error: ld returned 1 exit status
CMakeFiles/write_morse.dir/build.make:83: recipe for target 'write_morse' failed
make[3]: <strong>* [write_morse] Error 1
CMakeFiles/Makefile2:72: recipe for target 'CMakeFiles/write_morse.dir/all' failed
make[2]: <em></strong> [CMakeFiles/write_morse.dir/all] Error 2
CMakeFiles/Makefile2:84: recipe for target 'CMakeFiles/write_morse.dir/rule' failed
make[1]: <strong></em> [CMakeFiles/write_morse.dir/rule] Error 2
Makefile:118: recipe for target 'write_morse' failed
make: *</strong> [write_morse] Error 2</p>

<p><strong>Error Message with -lwiringPi:</strong></p>

<p>====================[ Build | write_morse | Debug-Remote ]======================
/usr/local/bin/cmake --build /tmp/tmp.tL61Mxt6gP/cmake-build-debug-remote --target write_morse -- -lwiringPi
[ 50%] Linking C executable write_morse
CMakeFiles/write_morse.dir/main.c.o: In function <code>main':
/tmp/tmp.tL61Mxt6gP/main.c:6: undefined reference to</code>wiringPiSetup'</p>

<p><strong>CMakeList.txt</strong></p>

<pre><code>cmake_minimum_required(VERSION 3.14)
project(write_morse C)

set(CMAKE_C_STANDARD 99)

add_executable(write_morse main.c)
</code></pre>
","","","1","914","0","2","","2019-06-18 07:37:51","2019-06-18 07:44:22","2019-06-18 08:58:17","2019-06-18 08:57:29"
"62083087","Why is CLion not showing exceptions?","<c++><cmake><cygwin><clion><jetbrains-ide>","<p>CLion appears to be not showing me any exceptions when running my code. To test this, I've created a new project with only the following code:</p>

<pre><code>#include &lt;iostream&gt;

int main() {
    std::cout &lt;&lt; ""--- One"" &lt;&lt; std::endl;
    throw 6;
    std::cout &lt;&lt; ""--- Two"" &lt;&lt; std::endl;
    return 0;
}
</code></pre>

<p>Which leads to the following output:</p>

<pre><code>C:\Users\david\CLionProjects\untitled\cmake-build-debug\untitled.exe
--- One

Process finished with exit code 0
</code></pre>

<p>As you can see, code before the exception is executed and code following it is not executed (as you would expect). But instead of a message about the exception, it says ""Process finished with exit code 0"", as if no exception had occurred.</p>

<p>The same code compiled and executed on Ubuntu (via terminal) displayed an error message. So I assume the problem is with CLion.</p>

<p><em>How can I resolve this problem so that I can see messages for exceptions in my code?</em></p>

<p><em>Is there any setting that could lead to such behaviour?</em></p>

<p>I'm using CLion on Windows 10 with Cygwin. Here's a screenshot of the problem:</p>

<p><a href=""https://i.stack.imgur.com/OuRCm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/OuRCm.png"" alt=""Here&#39;s a screenshot of the problem""></a></p>
","","","1","458","1","6","","2020-05-29 09:46:13","2020-05-29 14:41:00","2020-05-29 16:10:04",""
"63516072","""Undefined symbols for architecture x86_64:"" Boost 1.73.0 Clion MacOS","<c++><boost><cmake><boost-thread>","<p>I am super new to C++ and just started dabbling into Boost C++ library</p>
<p>I am currently on a MacOS Catalina and using CLion as my c++ IDE.</p>
<p>I installed boost using Homebrew <code>brew install boost</code></p>
<p>I was following some tutorials from: <a href=""http://antonym.org/2009/05/threading-with-boost-part-i-creating-threads.html"" rel=""nofollow noreferrer"">http://antonym.org/2009/05/threading-with-boost-part-i-creating-threads.html</a> learning about <code>boost::thread</code></p>
<p>Here is the code:</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;boost/thread.hpp&gt;
#include &lt;boost/date_time.hpp&gt;


void workerFunc()
{
    boost::posix_time::seconds workTime(3);
    std::cout &lt;&lt; &quot;Worker: running&quot; &lt;&lt; std::endl;
    // Pretend to do something useful...
    boost::this_thread::sleep(workTime);
    std::cout &lt;&lt; &quot;Worker: finished&quot; &lt;&lt; std::endl;
}


int main(int argc, char* argv[])
{
    std::cout &lt;&lt; &quot;main: startup&quot; &lt;&lt; std::endl;
    boost::thread workerThread(workerFunc);
    std::cout &lt;&lt; &quot;main: waiting for thread&quot; &lt;&lt; std::endl;
    workerThread.join();
    std::cout &lt;&lt; &quot;main: done&quot; &lt;&lt; std::endl;
    return 0;
}

</code></pre>
<p>here is my <code>CMakeLists.txt</code> file</p>
<pre><code>cmake_minimum_required(VERSION 3.17)
project(cpp_boost)

set(CMAKE_CXX_STANDARD 14)

find_package(Boost 1.73.0 COMPONENTS system filesystem REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})

add_executable(${PROJECT_NAME} main.cpp)

target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES})
</code></pre>
<p>And finally, the build error that I get when I run the code.</p>
<pre><code>====================[ Build | cpp_boost | Debug ]===============================
/Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake --build /Users/parvpatel/Desktop/development/dev-projects/lang-tutorials/cpp-tutorials/cpp-boost/cmake-build-debug --target cpp_boost -- -j 12
[ 50%] Building CXX object CMakeFiles/cpp_boost.dir/main.cpp.o
[100%] Linking CXX executable cpp_boost
Undefined symbols for architecture x86_64:
  &quot;boost::this_thread::interruption_point()&quot;, referenced from:
      boost::condition_variable::wait(boost::unique_lock&lt;boost::mutex&gt;&amp;) in main.cpp.o
      boost::condition_variable::do_wait_until(boost::unique_lock&lt;boost::mutex&gt;&amp;, boost::detail::real_platform_timepoint const&amp;) in main.cpp.o
  &quot;boost::detail::thread_data_base::~thread_data_base()&quot;, referenced from:
      boost::detail::thread_data&lt;void (*)()&gt;::~thread_data() in main.cpp.o
  &quot;boost::detail::get_current_thread_data()&quot;, referenced from:
      boost::detail::interruption_checker::interruption_checker(_opaque_pthread_mutex_t*, _opaque_pthread_cond_t*) in main.cpp.o
  &quot;boost::thread::join_noexcept()&quot;, referenced from:
      boost::thread::join() in main.cpp.o
  &quot;boost::thread::native_handle()&quot;, referenced from:
      boost::thread::get_id() const in main.cpp.o
  &quot;boost::thread::start_thread_noexcept()&quot;, referenced from:
      boost::thread::start_thread() in main.cpp.o
  &quot;boost::thread::detach()&quot;, referenced from:
      boost::thread::~thread() in main.cpp.o
  &quot;typeinfo for boost::detail::thread_data_base&quot;, referenced from:
      typeinfo for boost::detail::thread_data&lt;void (*)()&gt; in main.cpp.o
  &quot;vtable for boost::detail::thread_data_base&quot;, referenced from:
      boost::detail::thread_data_base::thread_data_base() in main.cpp.o
  NOTE: a missing vtable usually means the first non-inline virtual member function has no definition.
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[3]: *** [cpp_boost] Error 1
make[2]: *** [CMakeFiles/cpp_boost.dir/all] Error 2
make[1]: *** [CMakeFiles/cpp_boost.dir/rule] Error 2
make: *** [cpp_boost] Error 2

</code></pre>
<p>I tried to look through the internet, but I could not find anything specific. I found its useful to <code>target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES})</code>, but after adding that to the <code>CMakeLists.txt</code> file, the error still persisted.</p>
<p>Any help will be appreciated.</p>
<p>Thank you :)</p>
","","","1","545","1","3","","2020-08-21 03:25:13","2021-09-23 11:24:37","2021-09-23 11:24:37",""
"62112379","CMake Error: configure_file Problem Configuring File - with CLion","<gcc><cmake><g++><clion>","<p>I am trying to setup my CLion on Windows with WSL, following the official tutorial: <a href=""https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-clion.html"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-clion.html</a></p>

<p>When setting up the Toolchains, and now in the editor, I am getting the same error after the identification of the C compiler and features, C++ compiler and features. The lines causing the error are always the same: </p>

<pre><code>configure_file(
  ${CMAKE_ROOT}/Modules/CMakeCXXCompiler.cmake.in
  ${CMAKE_PLATFORM_INFO_DIR}/CMakeCXXCompiler.cmake
  @ONLY
)
</code></pre>

<p><a href=""https://i.stack.imgur.com/zjqic.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zjqic.png"" alt=""enter image description here""></a></p>

<p>I am using Windows Subsystem for Linux 2 with Ubuntu 20.04, GCC and G++ version 9.3.0.</p>

<p>Please help me diagnose the problem.</p>
","<p>I had the same problem.</p>
<p>I found the solution here: <a href=""https://intellij-support.jetbrains.com/hc/en-us/community/posts/360003413779-Troubles-with-WSL-toolchain-Test-CMake-run-finished-with-errors-"" rel=""nofollow noreferrer"">https://intellij-support.jetbrains.com/hc/en-us/community/posts/360003413779-Troubles-with-WSL-toolchain-Test-CMake-run-finished-with-errors-</a></p>
<p>To summarize, you should create a wsl config file <code>/etc/wsl.conf</code> and add the following lines:</p>
<pre><code>[automount]
options = &quot;metadata&quot;
enabled = true
</code></pre>
<p>After this you should reboot your wsl (in powershell).</p>
<pre><code>wsl.exe -l     // gets a list of your linux distributions
wsl.exe -t *name-of-your-distribution*
</code></pre>
","63774558","3","1380","1","1","","2020-05-31 06:20:29","","2020-09-07 09:08:48",""
"62155982","How to add an open source library to CLion in a Mac?","<c++><clion><jetbrains-ide><cjson>","<p>I want to use (<a href=""https://github.com/DaveGamble/cJSON"" rel=""nofollow noreferrer"">cJSON</a>) library in my c++ code. How do I download and add this library to my CLion project in order to import it into my code like this</p>

<p><code>#include &lt;cJSON.h&gt;</code></p>

<p>This is my cMakeLists.txt</p>

<pre><code>cmake_minimum_required(VERSION 3.16)
project(a_star_search)

set(CMAKE_CXX_STANDARD 14)

add_executable(a_star_search main.cpp)
</code></pre>
","","","1","212","1","1","","2020-06-02 15:49:46","","2020-06-06 21:40:26",""
"65408065","Debugging in CLion on an M1 Macbook Pro","<c++><debugging><intel><clion><apple-m1>","<p>Code builds and runs perfectly, but I cannot debug my code. I am an M1 Macbook Pro user and I think the issue lies there. The architecture of Clion as shown in the activity monitor is Intel.
The code exits with code 139- interrupted by signal 11- SIGSEGV- segmentation fault.</p>
<p><a href=""https://i.stack.imgur.com/tws0J.png"" rel=""nofollow noreferrer"">error message after attempting to debug the code</a></p>
<p><a href=""https://i.stack.imgur.com/Ic3VP.jpg"" rel=""nofollow noreferrer"">intel architecture of Clion</a></p>
<p>code</p>
<pre><code>// Created by Kashita Talreja on 22/12/20.
//
#include&lt;bits/stdc++.h&gt;
using namespace std;


bool isvalid(int n) {
    int tmp = n;
    while(tmp) {
        int x = (tmp % 10);
        if(x &gt; 0 &amp;&amp; n % x &gt;  0) return false;
        tmp /= 10;
    }
    return true;
}

void solve() {
    int n;
    cin &gt;&gt; n;
    int ok = 0;
    while(!isvalid(n)) {
        n++;
    }
    cout &lt;&lt; n &lt;&lt; endl;

}
int32_t main() {
    int t;
    cin&gt;&gt;t;
    while(t--) {
        solve();
    }
    return 0;
}
</code></pre>
","","","1","900","0","3","0","2020-12-22 11:40:08","","2020-12-22 11:40:08",""
"62566743","Syntax highlighting and code inspection in CLion stops working after including anything from standard library","<c++><ide><clion>","<p>The problem started happening after upgrading GCC to version 10 on Ubuntu 20.04.Basically my code gets highlighted and inspected fine until I include a standard library header (string for example). Sometimes when I remove the include line the highlighting comes back and sometimes it comes back only if I restart CLion after removing the line. The code compiles fine. I already tried reinstalling GCC, CLion and whole Ubuntu and the problem is exactly the same. The problem is not consistent for all the headers because cstdint works fine and doesn't break anything but string, map and iostream do. I don't have any external plugins, it's a totally fresh install of the newest CLion and Ubuntu. Going back to GCC-9 fixes the problem, but GCC-10 just doesn't seem to work.</p>
","","","1","142","0","1","","2020-06-25 01:58:31","2020-06-25 04:25:14","2020-06-25 05:58:34",""
"55683034","How to link external library in Clion/Cmake?","<c><cmake><clion>","<p>I am new to Cmake, and I am having trouble linking an external library (libtiff). I have installed libtiff and it is in my <code>/usr/local/include</code>. Then I used <code>include_directories()</code> and <code>target_linked_libraries()</code> in my Cmake. However, it still gives me</p>

<pre><code>ld: library not found for -ltiff
</code></pre>

<p>main.c:</p>

<pre><code>#include &lt;stdio.h&gt;
#include ""tiffio.h""

int main() {
    printf(""Hello, World!\n"");
    return 0;
}
</code></pre>

<p>cmake file:</p>

<pre><code>cmake_minimum_required(VERSION 3.13)

project(test2 C)

set(CMAKE_C_STANDARD 99)

include_directories(/usr/local/include)

add_executable(test2 main.c)

target_link_libraries(test2 tiff)
</code></pre>

<p>I would really appreciate if you can help! Thanks in advance!</p>
","","","1","1893","1","4","","2019-04-15 05:27:24","2019-04-15 05:30:10","2019-04-15 05:41:39","2019-04-15 07:30:08"
"65429042","Variable length arrays not possible w CLion and C99 Standard?","<c><clion><c99>","<p>I´ve been happily coding with CLion to create a project for University whilst using C99 standard. As of today variable lengths for array declaration won`t work. Does anyone have any ideas why?
Code:</p>
<pre><code>int main() {
    // to allow debugging with CLION
    setbuf(stdout, 0);
    int number = 5;
    int myarray[number];
    return 0;
}
</code></pre>
<p>CMakeLists.txt</p>
<pre><code>project(PG1 C)

set(CMAKE_C_STANDARD 99)

add_executable(PG1 main.c ...)
</code></pre>
<p>Error is:</p>
<pre>
C:\...\PG1\main.c(10): error C2057: Constant value required
C:\...\PG1\main.c(10): error C2466: Declaration of array with constant size 0 not possible
C:\...\PG1\main.c(10): error C2133: ""myarray"": unknown size
NMAKE : fatal error U1077: ""C:\PROGRA~2\MICROS~2\2019\BUILDT~1\VC\Tools\MSVC\1427~1.291\bin\Hostx86\x86\cl.exe"": Return-Code ""0x2""
Stop.
NMAKE : fatal error U1077: """"C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\14.27.29110\bin\HostX86\x86\nmake.exe"""": Return-Code ""0x2""
Stop.
NMAKE : fatal error U1077: """"C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\14.27.29110\bin\HostX86\x86\nmake.exe"""": Return-Code ""0x2""
Stop.
NMAKE : fatal error U1077: """"C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Tools\MSVC\14.27.29110\bin\HostX86\x86\nmake.exe"""": Return-Code ""0x2""
Stop.
</pre>
","<p>CLion is using MS Visual Studio 2019 as the underlying compiler.  MSVC is not a fully compliant C compiler, and in particular it does not support variable length arrays.</p>
<p>You would have to use gcc or clang to get support for VLAs.</p>
","65429354","1","259","2","4","","2020-12-23 18:17:44","2020-12-23 18:49:48","2020-12-24 22:16:48",""
"65448174","CLion configurate and test library project","<c++><cmake><static-libraries><clion>","<p>Let's say I wanted to develop a simple library with the following structure:</p>
<p><a href=""https://i.stack.imgur.com/GUkJU.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GUkJU.png"" alt=""project structure"" /></a></p>
<p>My CMakeLists.txt then looks like this:</p>
<pre class=""lang-py prettyprint-override""><code>cmake_minimum_required(VERSION 3.17)

set(CMAKE_CXX_STANDARD 14)

set(INC_DIR &quot;${CMAKE_CURRENT_SOURCE_DIR}/include/&quot;)
set(SRC_DIR &quot;${CMAKE_CURRENT_SOURCE_DIR}/src/&quot;)

file(GLOB INCLUDES &quot;${INC_DIR}/httplib/*.hpp&quot;)
file(GLOB SOURCES &quot;${SRC_DIR}/*.cpp&quot;)

project(httplib)
add_library(httplib STATIC ${INCLUDES} ${SOURCES})
include_directories(${INC_DIR})
</code></pre>
<p>This works fine but what is the usual way to configure CLion projects and CMake in order to test a library effectively ?</p>
","","","1","135","0","1","","2020-12-25 12:42:46","","2020-12-25 12:42:46",""
"63020066","CTRL + D ends debugging in CLion","<c++><debugging><gdb><clion>","<p>My program reads standart input to EOF and puts it into string like this</p>
<pre><code>ostringstream ss;
ss &lt;&lt; cin.rdbuf();
m_Input = ss.str();
</code></pre>
<p>It works fine, but when I try to debug this program in CLion, I type some string into the console and then press CTRL + D. But doing this makes the debugging end with SIGHUP on line 2 of this fragment. Is there a way how to avoid this and let the debugging continue? Or is there other way how to give the debugger input with EOF?</p>
","","","1","148","0","2","","2020-07-21 17:39:37","","2020-07-21 17:39:37",""
"64669486","OpenMP does not use all threads / Clion / Windows","<multithreading><openmp><clion>","<p>learning the first steps with openMP and got stuck a little bit. Why my code does not use all allowable threads? OMP_NUM_THREADS=6 has been set as environmental variable.</p>
<pre><code>#include &lt;omp.h&gt;

   int max = omp_get_max_threads();
    std::cout&lt;&lt;&quot;Max threads: &quot;&lt;&lt;max&lt;&lt;std::endl;

#pragma omp parallel
    {
        int n = omp_get_num_threads();
        int tid = omp_get_thread_num();
        std::cout&lt;&lt;&quot;There are threads:&quot;&lt;&lt;n&lt;&lt;&quot;Hello from thread: &quot;&lt;&lt;tid&lt;&lt;std::endl;
    };

/*end of parallel section */
    std::cout&lt;&lt;&quot;Hello from the master thread\n&quot;;
</code></pre>
<p>Output:</p>
<pre><code>Max threads: 6   
There are threads:1 Hello from thread: 0   
Hello from the master thread
</code></pre>
<p>Update: I also tried omp_set_dynamic(0); with no success.</p>
<p>Update: it was solved with compilator flag:</p>
<pre><code>set(CMAKE_CXX_FLAGS &quot;${CMAKE_CXX_FLAGS} /openmp&quot;)
</code></pre>
","","","1","119","1","4","","2020-11-03 19:38:28","2020-11-03 20:45:38","2020-11-04 07:55:22",""
"60517842","Generate then use source file using CMake in CLion","<makefile><cmake><clion>","<p>I'm trying to work on a project in CLion using Gtk+, but the CMake file I came up with to make it work seems overly complex and bad. It also puts a generated source file in the binaries folder, so I want to know if there's a better way of doing this.</p>

<p>I wrote a Makefile to demonstrate how I want CMake to behave:</p>

<pre><code>CC ?= gcc
PKGCONFIG = $(shell which pkg-config)
CFLAGS = $(shell $(PKGCONFIG) --cflags gtk+-3.0)
LIBS = $(shell $(PKGCONFIG) --libs gtk+-3.0)

SRC = main.c labpresentapp.c labpresentappwin.c
GEN_SRC = resources.c

OBJDIR := objdir
OBJS := $(addprefix $(OBJDIR)/,$(SRC:.c=.o) $(GEN_SRC:.c=.o))

.PHONY=all clean

all: labpresentapp

resources.c: labpresentapp.gresource.xml window.ui app-menu.ui
        glib-compile-resources labpresentapp.gresource.xml --target=$@ --generate-source

$(OBJDIR)/%.o: %.c
        $(CC) -c -o $@ $(CFLAGS) $&lt;

$(OBJS): | $(OBJDIR)

$(OBJDIR):
        mkdir $(OBJDIR)

labpresentapp: $(OBJS)
        $(CC) -o $(@F) $(OBJS) $(LIBS)

clean:
        rm -f $(SRC_GEN)
        rm -f $(OBJS)
        rm -rf $(OBJDIR)
        rm -f labpresentapp
</code></pre>

<p>However, I cannot get CMake to do this. Below is my latest attempt:</p>

<pre><code>cmake_minimum_required(VERSION 3.14)
project(LabPresentApp C)

set(LAB_PRESENT_APP_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(LAB_PRESENT_APP_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})

set(LAB_PRESENT_APP_VERSION_MAJOR 1)
set(LAB_PRESENT_APP_VERSION_MINOR 0)
set(LAB_PRESENT_APP_VERSION_PATCH 0)

set(CMAKE_C_STANDARD 11)

find_package(PkgConfig REQUIRED)

pkg_check_modules(MY_PKG REQUIRED IMPORTED_TARGET gtk+-3.0)

set(GLIB_FLAGS --target=resources.c)
set(GLIB_FLAGS ${GLIB_FLAGS} --generate-source)
set(GLIB_FLAGS ${GLIB_FLAGS} --sourcedir=${PROJECT_SOURCE_DIR})

add_custom_command(
        OUTPUT resources.c
        COMMAND glib-compile-resources ${PROJECT_SOURCE_DIR}/labpresentapp.gresource.xml ${GLIB_FLAGS}
        DEPENDS ${PROJECT_SOURCE_DIR}/labpresentapp.gresource.xml ${PROJECT_SOURCE_DIR}/app-menu.ui
                ${PROJECT_SOURCE_DIR}/window.ui
)

add_custom_target(generate_resources DEPENDS resources.c)

set(SOURCE_FILES main.c labpresentapp.c labpresentapp.h labpresentappwin.c labpresentappwin.h resources.c)

add_executable(${PROJECT_NAME} ${SOURCE_FILES})

add_dependencies(${PROJECT_NAME} generate_resources)

target_link_libraries(${PROJECT_NAME} PUBLIC PkgConfig::MY_PKG)
</code></pre>

<p>This emulates most of the function of the Makefile, but <code>resources.c</code> is generated in the binary folder.</p>

<p>Is there a better way to accomplish the function of the Makefile in CMake?</p>
","<p>Since your <code>glib-compile-resources</code> does not specify where to generate the file, it is being generated in current working directory. As <a href=""https://cmake.org/cmake/help/latest/command/add_custom_command.html"" rel=""nofollow noreferrer"">CMake documentation</a> states:</p>

<blockquote>
  <p>WORKING_DIRECTORY</p>
  
  <p>Execute the command with the given current working directory. If it is a relative path it will be interpreted relative to the build tree directory corresponding to the current source directory.</p>
</blockquote>

<p>If you expect a file at a given location, you would probably need to add <code>WORKING_DIRECTORY</code> directive to this <code>add_custom_command</code> to anchor the location at <code>${CMAKE_CURRENT_SOURCE_DIR}</code>. </p>

<p>Personally I would leave the behavior as is and make your sources line read:</p>

<pre><code>set(SOURCE_FILES main.c labpresentapp.c labpresentapp.h labpresentappwin.c labpresentappwin.h ${CMAKE_CURRENT_BINARY_DIR}/resources.c)
</code></pre>

<p>I find this behavior correct. Source directory should be kept intact and generated files should go into binary directory. This way it prevents from accidental putting the generated file into source control and makes cleanup easier (it is enough to remove binary directory instead of purging single files across many locations).</p>
","60523242","1","214","1","2","","2020-03-04 01:25:52","","2020-03-04 09:51:35",""
"56237369","C/C++ standard libraries not found by CLion on remote machine","<c++><c><cuda><clion>","<p>I am working with Cuda C/C++ using CLion, I build and compile on a remote machine. The compilation and execution works without problems but CLion highlight in red C++ standard libraries. 
I can't figure out how to solve the problem, anyone can help me? thank you in advance. </p>

<p>Here my Cmake configuration file:</p>

<pre class=""lang-sh prettyprint-override""><code>cmake_minimum_required(VERSION 3.12 FATAL_ERROR)

set(CUDACXX /usr/local/cuda-8.0/bin/nvcc)
set(CMAKE_CUDA_COMPILER /usr/local/cuda-8.0/bin/nvcc)

project(ProgettoGPU LANGUAGES C CXX CUDA)

add_executable(ProgettoGPU main.cu src/linalgebra/linalgebra.cu src/operations/sigmoid.cu src/operations/sigmoid.h src/utils/matrix.cu src/utils/matrix.h src/utils/common.h src/operations/add.cu src/operations/add.h)

target_compile_features(ProgettoGPU PUBLIC cxx_std_14)
</code></pre>
","<p>CLion doesn't work properly with *.cu files. I found out from <a href=""https://stackoverflow.com/a/47057616/4401979"">this answer</a> that adding an empty dummy *.ccp file inside the root directory of the project make CLion recognize the standard libraries also in the other *.cu files. </p>
","56237866","2","577","1","0","","2019-05-21 11:32:54","2019-05-21 11:51:39","2019-05-21 12:01:24",""
"56244341","How to flash C code to STM32 board with CLion?","<build><embedded><microcontroller><stm32><clion>","<p>I use Eclipse to develop for my STM32F746G-DISCOVERY board, but I would like to switch to CLion. I followed this tutorial (<a href=""https://blog.jetbrains.com/clion/2019/02/clion-2019-1-eap-clion-for-embedded-development-part-iii/"" rel=""nofollow noreferrer"">https://blog.jetbrains.com/clion/2019/02/clion-2019-1-eap-clion-for-embedded-development-part-iii/</a>) for that. Everything looking good so far, so I would like to flash the pre-generated ""helloworld"" code to the board. I suppose it should be done via UPLOAD. When I click build I have the following error message. When I hit RUN the process finished with exit code 127.</p>

<pre><code>====================[ Build | UPLOAD | Debug ]==================================
/Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake --build /Users/hordon/Desktop/GreenFox/CLionSTM32/cmake-build-debug --target UPLOAD -- -j 2
[100%] Built target ClionSTM32.elf
GNU gdb (GNU Tools for Arm Embedded Processors 8-2018-q4-major) 8.2.50.20181213-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type ""show copying"" and ""show warranty"" for details.
This GDB was configured as ""--host=x86_64-apple-darwin10 --target=arm-none-eabi"".
Type ""show configuration"" for configuration details.
For bug reporting instructions, please see:
&lt;http://www.gnu.org/software/gdb/bugs/&gt;.
Find the GDB manual and other documentation resources online at:
    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.

For help, type ""help"".
Type ""apropos word"" to search for commands related to ""word"".
tcp:127.0.0.1:3333: Operation timed out.
""monitor"" command not supported by this target.
""monitor"" command not supported by this target.
You can't do that when your target is `None'
[100%] Built target UPLOAD

Build finished

====================[ Build | ClionSTM32.elf | Debug ]==========================
/Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake --build /Users/hordon/Desktop/GreenFox/CLionSTM32/cmake-build-debug --target ClionSTM32.elf -- -j 2
[100%] Built target ClionSTM32.elf

Build finished
</code></pre>

<p>I'm just getting started with microcontrollers, but my best guess is that CLion can't reach the board (which is connected for sure). I have no clue how to fix this.</p>
","","","1","1212","1","3","","2019-05-21 18:25:49","","2019-05-22 08:07:54",""
"56335462","Clion: setting up remote Makefile project","<clion><jetbrains-ide>","<h2>Context</h2>

<p>I have a remote server with C++ code and <code>Makefile</code>, and I want to use Clion's remote development + Makefile plugin to develop a Makefile project in remote.</p>

<p>I have mostly been following <a href=""https://www.jetbrains.com/help/clion/remote-projects-support.html"" rel=""nofollow noreferrer"">this guide from Jetbrains</a> to set up remote development.</p>

<p>I have followed all the instructions:</p>

<ol>
<li>install Makefile plugin</li>
<li>set up <strong>Remote Host</strong> in <strong>Build, Execution, Deployment | Toolchains</strong> ( there was no problem setting up the remote host )</li>
<li>create corresponding CMake profile in <strong>Build, Execution, Deployment | CMake</strong> and selected the created <strong>Remote Host</strong> in the <strong>Toolchain</strong></li>
<li>set mapping to my newly created C++ Cmake project to the remote directory under <strong>Build, Execution, Deployment | Deployment | Mappings</strong>.</li>
</ol>

<hr>

<h2>Problems with setup</h2>

<p>After following all the instructions, I have two issues:</p>

<ol>
<li><p>My local project and remote repository are out of sync. My local contains dummy files created on project initialization: <code>cmake-build-debug</code> directory, <code>CMakeLists.txt</code>, and <code>main.cpp</code>, while my remote contains code and <code>Makefile</code>.</p></li>
<li><p>There is no configuration created for me to run and build. In the top-right corner where there is <code>run</code>, <code>debug</code> and <code>build</code> buttons, no pre-created configuration is shown:</p></li>
</ol>

<p><a href=""https://i.stack.imgur.com/TiQHW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TiQHW.png"" alt=""enter image description here""></a></p>

<p>Instead, there is <code>Add Configuration</code> button. When I click <code>Add Configuration</code> and navigate to create new Makefile configuration, there is no option for me to set up project in remote.</p>

<p><a href=""https://i.stack.imgur.com/SCNZj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SCNZj.png"" alt=""enter image description here""></a></p>

<hr>

<h2>Question</h2>

<p>So my question is:</p>

<ol>
<li>Do I need <code>cmake-build-debug</code> directory and <code>CMakeLists.txt</code> even if I am only going to use the Makefile plugin to build and run? If not, how should I sink my files with remote?</li>
<li>How can I create debug and run configuration with Makefile s.t. it will only build and run on the remote host I have set up?</li>
</ol>
","<p>Several things here:</p>

<ol>
<li><p>Full remote mode in CLion works only with CMake projects for now.</p></li>
<li><p>Makefile plugin doesn't provide Makefiles project model support in CLion (and you can't work w/o a project model in CLion, the code won't be resolved), it's for syntax highlighting in such files mostly and for Makefiles run/debug configuration. To work with makefiles in CLion, you need a workaround through the compilation database. Please check here: <a href=""https://www.jetbrains.com/help/clion/managing-makefile-projects.html"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/managing-makefile-projects.html</a>. But again this works only for local projects.</p></li>
</ol>
","56345550","3","2920","1","0","","2019-05-28 05:21:51","","2019-05-28 15:29:20",""
"56447526","How to add linker flags in CLion","<c><makefile><cmake><clion><libsodium>","<p>Im trying to use libsodium, ive installed the librarys and trying to make the simplests of tests, when making the project using Makefile there are no probkems but when using CLion and Cmake i get ""undefined reference to `sodium_init'""</p>

<p>Im working on Ubuntu 18.04.
I found the reason for the error was the need to link to add the -lsodium flag to the linking (adding the flag makes a normal Makefile work)
as i searched the web for ways to link to an external library using CMake or in CLion i found many solutions that did not work, including :</p>

<ul>
<li>add_link_options(-lsodium)</li>
<li>set (CMAKE_STATIC_LINKER_FLAGS ""-lsodium"")</li>
</ul>

<p>this is the code im trying to compile:</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;sodium.h&gt;

int main() 
{
    if (sodium_init() &lt; 0)
    {
        printf(""sodium init error"");
    }
    __uint32_t rand = randombytes_random();
    printf(""hello %d, this is a random number \n"", &amp;rand);
    return 0;
}
</code></pre>

<p>The full error message in CLion looks like this :</p>

<pre><code>MakeFiles/TestC.dir/main.c.o: In function `main':
/home/--username--/Projects/TestC/main.c:7: undefined reference to `sodium_init'
collect2: error: ld returned 1 exit status
CMakeFiles/TestC.dir/build.make:83: recipe for target 'TestC' failed
make[3]: *** [TestC] Error 1
CMakeFiles/Makefile2:72: recipe for target 'CMakeFiles/TestC.dir/all' failed
make[2]: *** [CMakeFiles/TestC.dir/all] Error 2
CMakeFiles/Makefile2:84: recipe for target 'CMakeFiles/TestC.dir/rule' failed
make[1]: *** [CMakeFiles/TestC.dir/rule] Error 2
Makefile:118: recipe for target 'TestC' failed
make: *** [TestC] Error 2
</code></pre>

<p>EDIT: 
Ive solved the problem, after looking at - <a href=""https://stackoverflow.com/a/43136754/7276240"">https://stackoverflow.com/a/43136754/7276240</a>
I added the following line to my CMakeLists.txt:
 <code>target_link_libraries(TestC libsodium.a)</code>
TestC being the name of the executable.</p>
","","","3","4379","1","1","","2019-06-04 16:02:41","2019-06-04 18:25:00","2019-06-04 18:25:00","2019-06-04 16:21:23"
"63557496","CLion support for C++ concepts","<c++><clion><c++-concepts>","<p><a href=""https://www.jetbrains.com/clion/whatsnew/#scope-2020-2-c20"" rel=""nofollow noreferrer"">Apparently</a> CLion supports concepts now.</p>
<p>However I can't even get the <a href=""https://en.cppreference.com/w/cpp/language/constraints"" rel=""nofollow noreferrer"">official example</a> to work.</p>
<p>On the <code>std::convertible...</code> CLion shows an error <code>Expected concept name with optional arguments</code>.</p>
<p>When I try to compile it, it tells me to add the <code>-fconcepts</code> flag. When I do that and compile again, I get the error</p>
<pre><code>make: concepts: No such file or directory
make: *** No rule to make target 'concepts'.  Stop.
</code></pre>
<p>I could't find anyone with a similar issue, just found some tutorials on how to get it to work with earlier versions of CLion, which - as far as I can see - don't apply here.</p>
<p>I'm using CLion 2020.2 Build #CL-202.6397.106, built on July 28, 2020, which should be the newest one. At least I don't see any updates.</p>
","<p>I was able to run the cppreference example with CLion 2020.2. The problem why it wasn't working initially for me was that the gcc compiler on my system (Ubuntu 20.04)  was too old (9.2). I tried with the packaged g++10, but that still didn't work, so I had to compiler gcc-10.2 directly from the git sources. That finally made it work.</p>
<p>Also make sure you add <code>set(CMAKE_CXX_STANDARD 20)</code> to your <code>CMakeLists.txt</code>.</p>
","63559277","2","317","1","2","","2020-08-24 08:39:59","2020-08-24 10:15:31","2020-08-24 10:30:15",""
"56548449","Why is my c++ singleton not working on Clion?","<c++><singleton>","<p>I want to have a singleton in my project but some errors occur </p>

<p>this is my codes in three separate files.:</p>

<pre><code>//---------------My main.cpp code

#include &lt;iostream&gt;
#include ""Sports/BBVB.h""


int main() {
    bbvb;
    return 0;
}


// ---------------------------my BBVB.h code
#ifndef SAMAVAR_BBVB_H
#define SAMAVAR_BBVB_H

typedef struct VBResult{
    int set1=-1;
    int set2=-1;
    int set3=-1;
    int set4=-1;
    int set5=-1;
}VBResult;

#include ""Sport.h""
#include ""../TournamentStuf/Tournament.h""

class BBVB: public Sport {
protected:
    vector&lt;Tournament&lt;VBResult&gt;&gt; tours;
public:
    static BBVB&amp; getInstance(){
        static BBVB b;
        return b;
    }
private:
    BBVB(){}

public:
    BBVB(BBVB const&amp;)=delete;
    void operator=(BBVB const&amp;) = delete;


    //-------------Setter------------

    //------------Getter-------------
    vector&lt;Tournament&lt;VBResult&gt;&gt; getTours() const;
    Tournament&lt;VBResult&gt; getTourById(int id) const;

    //----------Others---------------
    void addTour(Tournament&lt;VBResult&gt; v);

};

BBVB &amp;bbvb=BBVB::getInstance(); 



#endif //SAMAVAR_BBVB_H





//------------------my Store and restore code
#ifndef SAMAVAR_STOREANDRESTORE_H
#define SAMAVAR_STOREANDRESTORE_H


#include ""../Sports/BBVB.h""
#include ""../Sports/PingPong.h""
#include ""../Sports/Wrestling.h""

void Start(BBVB &amp;b);
void Update(const BBVB &amp;b);

void Start(PingPong &amp;p);
void Update(const PingPong &amp;p);

void Start(Wrestling &amp;w);
void Update(const Wrestling &amp;w);





#endif //SAMAVAR_STOREANDRESTORE_H

</code></pre>

<p>I have a bbvb instance of BBVB but it says you have multiple definitions of it.</p>

<p>I'm new to Clion and I don't have enough information about somethings like cmake and I feel the problem is because of it.
I want to have something like cout and cin in iostream.so by including my BBVB I can access this object.</p>

<p>Clion shows error below:
<code>CMakeFiles\Samavar.dir/objects.a(BBVB.cpp.obj):BBVB.cpp:(.bss+0x0): multiple definition of `bbvb'
CMakeFiles\Samavar.dir/objects.a(main.cpp.obj):main.cpp:(.bss+0x0): first defined here
CMakeFiles\Samavar.dir/objects.a(StoreAndRestore.cpp.obj):StoreAndRestore.cpp:(.bss+0x0): multiple definition of `bbvb'
CMakeFiles\Samavar.dir/objects.a(main.cpp.obj):Samavar-master/Sports/BBVB.h:24: first defined here
collect2.exe: error: ld returned 1 exit status</code></p>
","","","1","76","0","4","","2019-06-11 16:52:29","2019-06-11 17:12:49","2019-06-11 17:12:49",""
"63598352","Problems with optix and cuda when using CLion","<clion><optix>","<p>I have simply downloaded the OptiX SDK (7.1), and have obviously installed CUDA (11). When opening a sample project in CLion, everything runs as it should, however, all the optix libraries are unknown to the IDE. Do you know anything about this?</p>
<p><a href=""https://i.stack.imgur.com/PPi3t.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PPi3t.png"" alt=""enter image description here"" /></a></p>
","","","1","76","0","1","","2020-08-26 13:07:16","2020-09-03 09:34:51","2020-09-03 09:34:51",""
"56669704","CLion memory usage of running program","<memory><memory-management><clion>","<p>Is there a tool in CLion to view the memory usage (statistics) of a running program. I look for something similar like the Diagnostic Tool in Visual Studio. With that it is possible to view the Process Memory over time and get the maximum.</p>

<p><a href=""https://i.stack.imgur.com/mwHvt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mwHvt.png"" alt=""enter image description here""></a></p>

<p>Is this possible with the memory view somehow or do I need to install a plugin?</p>

<p>I am also not interested in the memory usage of CLion. Instead I want to know the amount of memory used by the program that I am executing.</p>
","","","4","623","0","1","2","2019-06-19 14:08:34","","2019-06-19 14:08:34",""
"63678715","CLion how to specify remote dir for .clion.resources","<c++><linux><gdb><clion><jetbrains-ide>","<p>How do I change the dir where .clion.resources is stored on the remote host?
Goes to /tmp by default</p>
<pre><code>[8/31/2020 5:17 PM] Failed to transfer file 'C:\Users\Foo\AppData\Local\JetBrains\CLion 2020.1.1\bin\gdb\renderers\libstdcxx\__init__.py': could not create folder &quot;sftp://remotebox/tmp/.clion.resources/7aa6df78-4ca6-41da-b851-950e31119c77&quot;. (Permission denied)
</code></pre>
","","","1","63","0","0","","2020-08-31 21:58:04","","2020-08-31 21:58:04",""
"59863524","CUDA C++ problems with CMake on CLion IDE","<c++><makefile><cmake><cuda>","<p>I'm trying to start a project with CUDA C++ using CLion as an IDE.
I installed a fresh version of CUDA Developer Tools (v10.2) and tried to load the changes of the MakeFile.
Apparently, the CUDA compiler (nvcc) doesn't get properly linked, but I'm not sure this is the problem.</p>

<p>This is my CMakeLists.txt:</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(test_cuda LANGUAGES CXX CUDA)
find_package(CUDA)

set(CMAKE_CXX_STANDARD 17)

add_executable(test_cuda main.cu)
</code></pre>

<p>The result I get is the following:</p>

<pre><code>""E:\Program Files\JetBrains\CLion 2019.2.5\bin\cmake\win\bin\cmake.exe"" -DCMAKE_BUILD_TYPE=Debug -G ""CodeBlocks - NMake Makefiles"" &lt;path_to_project&gt;\test_cuda
-- The CUDA compiler identification is NVIDIA 10.2.89
-- Check for working CUDA compiler: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.2/bin/nvcc.exe
-- Check for working CUDA compiler: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.2/bin/nvcc.exe -- broken
CMake Error at E:/Program Files/JetBrains/CLion 2019.2.5/bin/cmake/win/share/cmake-3.15/Modules/CMakeTestCUDACompiler.cmake:46 (message):
  The CUDA compiler

    ""C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.2/bin/nvcc.exe""

  is not able to compile a simple test program.

  It fails with the following output:

    Change Dir: &lt;path_to_project&gt;/test_cuda/cmake-build-debug-visual-studio/CMakeFiles/CMakeTmp

    Run Build Command(s):nmake /nologo cmTC_5cf15\fast &amp;&amp;   ""C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\nmake.exe"" -f CMakeFiles\cmTC_5cf15.dir\build.make /nologo -L                  CMakeFiles\cmTC_5cf15.dir\build
    Building CUDA object CMakeFiles/cmTC_5cf15.dir/main.cu.obj
        C:\PROGRA~1\NVIDIA~2\CUDA\v10.2\bin\nvcc.exe    -D_WINDOWS -Xcompiler="" /GR /EHsc""  -Xcompiler=""-Zi -Ob0 -Od /RTC1"" -Xcompiler=-MDd -x cu -c &lt;path_to_project&gt;\test_cuda\cmake-build-debug-visual-studio\CMakeFiles\CMakeTmp\main.cu -o CMakeFiles\cmTC_5cf15.dir\main.cu.obj -Xcompiler=-FdCMakeFiles\cmTC_5cf15.dir\,-FS
    main.cu
    Linking CUDA executable cmTC_5cf15.exe
        ""E:\Program Files\JetBrains\CLion 2019.2.5\bin\cmake\win\bin\cmake.exe"" -E vs_link_exe --intdir=CMakeFiles\cmTC_5cf15.dir --rc=C:\PROGRA~2\WI3CF2~1\8.1\bin\x86\rc.exe --mt=C:\PROGRA~2\WI3CF2~1\8.1\bin\x86\mt.exe --manifests  -- C:\PROGRA~2\MICROS~1.0\VC\bin\link.exe /nologo ""CMakeFiles\cmTC_5cf15.dir\main.cu.obj""  @&lt;path_to_appdata&gt;\Local\Temp\nm8647.tmp
    LINK Pass 1: command ""C:\PROGRA~2\MICROS~1.0\VC\bin\link.exe /nologo CMakeFiles\cmTC_5cf15.dir\main.cu.obj /out:cmTC_5cf15.exe /implib:cmTC_5cf15.lib /pdb:&lt;path_to_project&gt;\test_cuda\cmake-build-debug-visual-studio\CMakeFiles\CMakeTmp\cmTC_5cf15.pdb /version:0.0 /machine:X86 /debug /INCREMENTAL /subsystem:console kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib -LIBPATH:C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.2/lib/x64 cudadevrt.lib cudart_static.lib /MANIFEST /MANIFESTFILE:CMakeFiles\cmTC_5cf15.dir/intermediate.manifest CMakeFiles\cmTC_5cf15.dir/manifest.res"" failed (exit code 1112) with the following output:
    CMakeFiles\cmTC_5cf15.dir\main.cu.obj : fatal error LNK1112: module machine type 'x64' conflicts with target machine type 'X86'
    NMAKE : fatal error U1077: '""E:\Program Files\JetBrains\CLion 2019.2.5\bin\cmake\win\bin\cmake.exe""' : return code '0xffffffff'
    Stop.
    NMAKE : fatal error U1077: '""C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\nmake.exe""' : return code '0x2'
    Stop.


  CMake will not be able to correctly generate this project.
Call Stack (most recent call first):
  CMakeLists.txt:2 (project)


-- Configuring incomplete, errors occurred!
See also ""&lt;path_to_project&gt;/test_cuda/cmake-build-debug-visual-studio/CMakeFiles/CMakeOutput.log"".
See also ""&lt;path_to_project&gt;/test_cuda/cmake-build-debug-visual-studio/CMakeFiles/CMakeError.log"".
[Finished]
</code></pre>

<p>Where I substitute the path to the project folder with <code>&lt;path_to_project&gt;</code>.</p>

<p>The .cu file is just a simple hello world source file for now, since I'm trying to solve the issue with the CUDA compiler first.</p>

<p>I can't really find any way to solve this.</p>

<p>Thank you a lot in advance.</p>
","","","1","1535","1","3","","2020-01-22 15:51:32","2020-01-22 20:10:49","2020-01-22 20:10:49",""
"59895862","Cannot debug program in CLion editor","<c++><windows><clion><jetbrains-ide>","<p>While trying to debug C++ program using CLion editor following error appears and debugging does not hit any debug point.</p>

<p>What this error means and how to fix this problem?</p>

<pre><code>Could not initialize class com.jetbrains.cidr.execution.WinPipe
</code></pre>
","","","3","159","0","2","","2020-01-24 11:49:01","2020-01-24 16:48:03","2020-01-24 16:48:03",""
"57366399","arm-none-eabi-gcc cross compilation with CLion","<linux><gcc><cmake><stm32><clion>","<p>By issuing make in terminal I can successfully build using cmake. However I cannot build from CLion, arm-none-eabi-gcc is not found.</p>

<p>In the CMakeLists.txt, I setup the tool chain like this:</p>

<pre><code>set(CMAKE_C_COMPILER arm-none-eabi-gcc)
</code></pre>

<p>Running in terminal:</p>

<pre><code>arm-none-eabi-gcc -v
</code></pre>

<p>outputs:</p>

<pre><code>Using built-in specs.
COLLECT_GCC=arm-none-eabi-gcc
COLLECT_LTO_WRAPPER=/home/flo/bin/gcc-arm-none-eabi-7-2018-q2-update/bin/../lib/gcc/arm-none-eabi/7.3.1/lto-wrapper
Target: arm-none-eabi
Configured with: /tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/src/gcc/configure --target=arm-none-eabi --prefix=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/install-native --libexecdir=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/install-native/lib --infodir=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/install-native/share/doc/gcc-arm-none-eabi/info --mandir=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/install-native/share/doc/gcc-arm-none-eabi/man --htmldir=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/install-native/share/doc/gcc-arm-none-eabi/html --pdfdir=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/install-native/share/doc/gcc-arm-none-eabi/pdf --enable-languages=c,c++ --enable-plugins --disable-decimal-float --disable-libffi --disable-libgomp --disable-libmudflap --disable-libquadmath --disable-libssp --disable-libstdcxx-pch --disable-nls --disable-shared --disable-threads --disable-tls --with-gnu-as --with-gnu-ld --with-newlib --with-headers=yes --with-python-dir=share/gcc-arm-none-eabi --with-sysroot=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/install-native/arm-none-eabi --build=x86_64-linux-gnu --host=x86_64-linux-gnu --with-gmp=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/build-native/host-libs/usr --with-mpfr=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/build-native/host-libs/usr --with-mpc=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/build-native/host-libs/usr --with-isl=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/build-native/host-libs/usr --with-libelf=/tmp/jenkins/jenkins-GCC-7-build_toolchain_docker-775_20180622_1529687456/build-native/host-libs/usr --with-host-libstdcxx='-static-libgcc -Wl,-Bstatic,-lstdc++,-Bdynamic -lm' --with-pkgversion='GNU Tools for Arm Embedded Processors 7-2018-q2-update' --with-multilib-list=rmprofile
Thread model: single
gcc version 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] (GNU Tools for Arm Embedded Processors 7-2018-q2-update) 
</code></pre>
","","","1","665","0","7","","2019-08-05 21:39:49","","2019-08-05 21:39:49","2019-08-06 14:11:38"
"60003427","How to configurate CLion to work with makefile instead of CMake.txt?","<c><makefile><clion>","<p>I downloaded <code>CLion</code> IDE for C language development. When I create a new C project as a default IDE creates <code>CMake.txt</code> file, but I have a requirement (in university) work with <code>makefile</code>.</p>

<p>So, question is - how to change the configuration from <code>CMake.txt</code> to <code>makefile</code>?</p>

<p>Because here in configuration block I see <code>CMake project</code>, but don't see <code>makefile project</code></p>

<p><a href=""https://i.stack.imgur.com/VdBaN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VdBaN.png"" alt=""enter image description here""></a></p>

<p>CMake structure</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(test_c C)

set(CMAKE_C_STANDARD 90)

add_executable(test_c main.c)
</code></pre>

<p>makefile structure</p>

<pre><code>myprog1 : main.o
    gcc -g main.o -Wall -ansi -pedantic -o myprog1
main.o : main.c info.h
    gcc -c main.c -Wall -ansi -pedantic -o main.o
</code></pre>
","<p>CLion uses <code>CMakeLists.txt</code> to build your code. But the <code>CMakeList</code> generates a <code>Makefile</code>. So you don't have to configure CLion to work with a Makefile since it's auto generated at compilation by the CMakeLists. I recommend you to keep the <code>CMakeLists</code> because CLion uses it as configuration.</p>

<p>But if you want to use your own Makefile, you can create one as you usually do, and create a new build configuration. I suggest you to read this peace of documentation from CLion: <a href=""https://www.jetbrains.com/help/clion/managing-makefile-projects.html#"" rel=""nofollow noreferrer"">Managing Makefile Projects</a></p>
","60003716","1","1633","1","3","","2020-01-31 11:54:34","2020-01-31 12:14:47","2020-01-31 12:14:47",""
"60032017","Unreal Engine and Clion (Cannot get compiler information)","<c++><clion><unreal-engine4>","<p>I've set up my unreal engine to use Clion as it's text-editor by enabling the Clion extension.
And also downloaded Unreal Engine extension within the Clion market.</p>

<p>When I click on Generate and Open Clion in Unreal Engine Editor, it opens the clion, it takes a few moments for loading the project, and then throws an error saying ""Cannot get compiler information"".</p>

<p>since I Use MinGW to compile my C++ codes, I Thought there might be a problem with the compiler, So I changed the compiler to Visual Studio as you'll see in the following images, but still getting the same error.</p>

<p>Here's the error that I'm getting:</p>

<pre><code>Cannot get compiler information:
Compiler exited with error code 2: ""C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\bin\Hostx86\x86\cl.exe"" @C:\Users\Me\AppData\Local\Temp\response-file16483339914833625835 C:\Users\Me\AppData\Local\Temp\compiler-file6661270899180288812 | @response-file16483339914833625835=/TP -DACTORLAYERUTILITIESEDITOR_API= -DACTORLAYERUTILITIESEDITOR_VTABLE=DLLEXPORT_VTABLE 
</code></pre>

<p>since the error is extremely long, 786000 characters and to my unprofessional eyes, only the first few lines are useful, I'll put the first few lines in here and put the rest in a text file.</p>

<p>full error in a text file: <a href=""https://gofile.io/?c=WSlII1"" rel=""nofollow noreferrer"">https://gofile.io/?c=WSlII1</a></p>

<p>Please tell me if you need more information, Thanks in advance</p>

<p><a href=""https://i.stack.imgur.com/C1Kuk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/C1Kuk.png"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/zqdbE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zqdbE.png"" alt=""enter image description here""></a><a href=""https://i.stack.imgur.com/mbhLj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mbhLj.png"" alt=""enter image description here""></a></p>
","<p>I solved the problem.</p>

<p>Here's my solution: </p>

<ol>
<li><p>In UE editor, click on File, click on Open Clion to open your project in Clion.</p></li>
<li><p>In the Clion, Click on File -> Setting -> Build, Execution, Deployment -> Toolchains, and Set the Visual Studio as the environment compiler. (in my case vs 2017 community)</p></li>
<li><p>File -> Setting -> Build, Execution, Deployment -> CMake, Change the Build type from Debug to Release.</p></li>
</ol>

<p>If this fixed your problem but you got some strange error afterward, that might be because of CMake caches, to fix that one, Click on Tools -> CMake -> Reset Cache and Reload Project.</p>

<p>Hope this helps someone.</p>
","60032413","2","1142","1","3","","2020-02-03 00:58:31","","2020-07-14 11:06:17",""
"60176371","How to do EOF in CLion IDE?","<c><ide><clion><eof>","<p>I'm trying to do a simple scan line code in CLion: </p>

<pre><code>while((c=getchar())!=EOF) {
        char_count++;
    }
</code></pre>

<p>. I learned in class to type Ctrl-D to do a manual EOF, but this doesn't work in CLion. I've looked at previous questions about the same topic, and the command is enabled in the preferences. Any solutions?</p>
","","","1","272","2","3","","2020-02-11 19:50:55","","2020-11-04 02:52:10",""
"64758340","Clion shortcut to move up and down ""switcher""","<intellij-idea><clion><shortcut>","<p>clion has a shortcut to move between targets in the switcher up and down. I want to change to move down <code>control tab</code> to <code>option j</code> and up <code>control shift tab</code> to <code>option k</code> . But I can only add one shortcut to the move down. How can I change the shortcut move up.
I attach a photo as it was <a href=""https://i.stack.imgur.com/sgExv.png"" rel=""nofollow noreferrer"">before</a> and how <a href=""https://i.stack.imgur.com/cRuSS.png"" rel=""nofollow noreferrer"">I did it</a></p>
","<p>It's a <a href=""https://youtrack.jetbrains.com/issue/IDEA-177432"" rel=""nofollow noreferrer"">known limitation</a>, feel free to vote.</p>
","64758453","1","33","1","0","","2020-11-09 19:50:02","","2020-11-09 19:58:38",""
"64777467","Test framework quit unexpectedly in Clion","<c++><googletest><clion>","<p>Trying to run simple TEST using GTest in Clion.</p>
<pre><code>#include &lt;gtest/gtest.h&gt;

TEST(a, b) { ASSERT_EQ(1, 1); }

int main() { return 0; }
</code></pre>
<p>Always getting message &quot;Test framework quit unexpectedly.&quot;.</p>
<p>CMakeLists.txt:</p>
<pre><code>cmake_minimum_required(VERSION 3.15)
project(Valera)

set(CMAKE_CXX_STANDARD 20)

add_executable(Valera main.cpp)

add_subdirectory(googletest-master)
include_directories(googletest-master/googletest/include)
include_directories(googletest-master/googlemock/include)
target_link_libraries(Valera gtest gtest_main)
</code></pre>
","","","1","1132","0","2","1","2020-11-10 22:06:00","","2020-11-10 22:06:00",""
"64819096","""Process finished with exit code 139"" in CLion IDE while the program is running fine in the terminal","<segmentation-fault><clion>","<p>I am working on a software project, which can be build by invoking <code>cmake</code>, <code>make</code> and <code>make install</code>. The IDE I am using is JetBrains' CLion.</p>
<p>The thing that I do not understand is that when I run the program in CLion, I get this feedback:</p>
<blockquote>
<p>Process finished with exit code 139 (interrupted by signal 11: SIGSEGV)</p>
</blockquote>
<p>However, when I run the program in a terminal, it works flawlessly.
When I use the CLion debugger, Assembly code is presented to me and I don't know why (see screenshot below).
<a href=""https://i.stack.imgur.com/vhTwz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vhTwz.png"" alt=""enter image description here"" /></a></p>
<p>I don't know how I should debug this issue. Apologies if my issue is a duplicate, in this case I'd be happy if one could show me the &quot;original&quot;.</p>
<p>I should also mention that (although feeling quite comfortable with my Ubuntu 20.04) I am still fairly new to Linux/Unix in general and also not a master of the C language.</p>
<p>Thanks in advance for any hints, help or pushes in the right direction! Have a nice day!</p>
","<p>I managed to figure it out.</p>
<p>I added the line <code>set( CMAKE_BUILD_TYPE Debug )</code> to the CMakeLists.txt file at the root level of the project.
By doing to, I enabled the debug functionality of CLion. Hence, I was able to break at the point where the segmentation fault happens and to successfully debug it.</p>
<p>(In case someone is interested: What caused the segmentation fault was that a <code>strrchr(const char *str, int c)</code> function was called with <code>str</code> being NULL. <code>str</code> was holding the file name that the program would read. The reason the program worked on the terminal was that I navigated to the folder containing the file and executed the program. In the CLion configuration, I added the path in &quot;global form&quot;. By providing a path relative to the executable file inside the CLion project solved the issue for me.)</p>
","64820640","2","2879","1","0","1","2020-11-13 10:13:44","","2020-11-13 12:16:09",""
"64821367","CLion wont run binary with address sanitizer","<c++><cmake><clion><address-sanitizer>","<p>I'm using CLion IDE, Cmake with GCC compiler and I'm trying to run binary with address sanitizer. I followed this: <a href=""https://stackoverflow.com/questions/44320465/whats-the-proper-way-to-enable-addresssanitizer-in-cmake-that-works-in-xcode"">What&#39;s the proper way to enable AddressSanitizer in CMake that works in Xcode</a> and added</p>
<p><code>set (CMAKE_CXX_FLAGS &quot;${CMAKE_CXX_FLAGS} -fsanitize=address&quot;)</code></p>
<p>to CMakeLists.txt file and then got an error when running the binary in CLion using the run button:</p>
<p><code>==22084==ASan runtime does not come first in initial library list; you should either link runtime to your application or manually preload it with LD_PRELOAD.</code></p>
<p>When I run the binary via terminal, it works as it should be. It doesn't work in CLion's run window. <a href=""https://imgur.com/a/MXOM7BJ"" rel=""nofollow noreferrer"">https://imgur.com/a/MXOM7BJ</a></p>
<p>Edit: The solution was adding <code>LD_PRELOAD=libasan.so.5</code> to environment variables of CLion.</p>
<p>My CMakeLists.txt:</p>
<pre><code>cmake_minimum_required(VERSION 3.17)
project(Playground)

set(CMAKE_CXX_STANDARD 14)

add_executable(Playground main.cpp)

set(CMAKE_CXX_FLAGS &quot;${CMAKE_CXX_FLAGS} -fsanitize=address -g&quot;)
</code></pre>
<p>What's happening?</p>
<p>Adding these lines from the stackoverflow thread to CMakeLists.txt file didnt work too.</p>
<p><code>set (CMAKE_CXX_FLAGS_DEBUG &quot;${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address&quot;)</code></p>
<p><code>set (CMAKE_LINKER_FLAGS_DEBUG &quot;${CMAKE_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address&quot;)</code></p>
<p><code>set(CMAKE_EXE_LINKER_FLAGS_INIT &quot;-fsanitize=address -fno-omit-frame-pointer&quot;)</code></p>
<p>and this line from this guide <a href=""https://www.jetbrains.com/help/clion/google-sanitizers.html#LSanChapter"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/google-sanitizers.html#LSanChapter</a> also didnt work</p>
<p><code>set(CMAKE_CXX_FLAGS &quot;${CMAKE_CXX_FLAGS} -fsanitize=address -fno-omit-frame-pointer -O1&quot;)</code></p>
<p>Then I tried adding <code>LD_TRACE_LOADED_OBJECTS=1</code> to CLion environment variables and nothing changed.</p>
<p>My <code>ldd ./file</code> command output of the binary:</p>
<pre><code>    linux-vdso.so.1 (0x00007ffd82d96000)
    libgtk3-nocsd.so.0 =&gt; /lib/x86_64-linux-gnu/libgtk3-nocsd.so.0 (0x00007f7d532e1000)
    libasan.so.5 =&gt; /lib/x86_64-linux-gnu/libasan.so.5 (0x00007f7d528af000)
    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f7d526bd000)
    libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f7d526b7000)
    libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f7d52694000)
    librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f7d52689000)
    libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007f7d52538000)
    libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f7d5251d000)
    /lib64/ld-linux-x86-64.so.2 (0x00007f7d5350c000)
</code></pre>
","","","1","1180","1","18","","2020-11-13 13:00:00","2020-11-13 15:54:21","2020-11-13 15:54:21",""
"62377390","CLion Can't Find Visual Studio Compiler Even Though It's Installed","<c++><visual-studio><clion>","<p>I'm setting up my CLion compiler to use Visual Studio, but it says that the folder is not found.<a href=""https://i.stack.imgur.com/7WGwe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7WGwe.png"" alt=""enter image description here""></a> But the folder does exist.<a href=""https://i.stack.imgur.com/uSIbs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uSIbs.png"" alt=""enter image description here""></a> Even when I manually selected the Visual Studio folder, it says it doesn't exist. What can I do to fix this?</p>
","","","2","1581","1","1","","2020-06-14 19:40:48","","2021-06-15 05:01:20",""
"60951147","Is this a g++ or CLion bug ( using Ctrl+D in CLion)?","<c++><g++><clion>","<p>On using the following code</p>

<pre><code>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;

int main()
{

    std::vector&lt;std::string&gt; vec;
    std::string temp{};
    while(std::cin &gt;&gt; temp) vec.push_back(temp);

    std::cout &lt;&lt; ""\n[ "" &lt;&lt; vec[0];
    for(int i {1}; i &lt; vec.size(); i++) std::cout &lt;&lt; "", "" &lt;&lt; vec[i];
    std::cout &lt;&lt; ""]"";

}
</code></pre>

<p>with the following inputs</p>

<pre><code>kghukg kjhukg 6887 ^D
</code></pre>

<p>I get</p>

<pre><code>Process finished with exit code 139 (interrupted by signal 11: SIGSEGV)
</code></pre>

<p>I am using CLion on ubuntu and </p>

<pre><code>asmmo@asmmo:~$ g++ --version
g++ (Ubuntu 9.3.0-8ubuntu1) 9.3.0
Copyright (C) 2019 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
</code></pre>

<p>I get that error with <code>std=-s++1z</code> and <code>c++2a</code></p>

<p>Considering a comment, I updated the code to </p>

<pre><code>#include &lt;iostream&gt;
#include &lt;vector&gt;
#include &lt;string&gt;
#include &lt;thread&gt;
using namespace std::chrono_literals;
int main()
{

    std::vector&lt;std::string&gt; vec;
    std::string temp{};
    while(std::cin &gt;&gt; temp) vec.push_back(temp);
    std::cout&lt;&lt;vec.size();
    std::this_thread::sleep_for(10s);
    std::cout &lt;&lt; ""\n[ "" &lt;&lt; vec[0];
    for(int i {1}; i &lt; vec.size(); i++) std::cout &lt;&lt; "", "" &lt;&lt; vec[i];
    std::cout &lt;&lt; ""]"";

}
</code></pre>

<p>then used </p>

<pre><code>kjjkj jkh 555 ^D
</code></pre>

<p>but it waited thwn didn't display anything but the error </p>
","<p>My psychic guess is that this is a problem with how CLion is submitting input to the program.</p>

<p><a href=""https://youtrack.jetbrains.com/issue/CPP-5704"" rel=""nofollow noreferrer"">https://youtrack.jetbrains.com/issue/CPP-5704</a></p>

<blockquote>
  <p>I can disable keycaps for ⌘+D and Ctrl-D, and rely on the ""Send EOF"" action or the ⌘-D and Ctrl-D keypresses with Clion keycaps disabled, the result is the same: the program does not receive a EOF but receives some sort of kill signal.</p>
</blockquote>

<p>Apparently some people find a way to circumvent this:</p>

<p><a href=""https://xbuba.com/questions/45803954"" rel=""nofollow noreferrer"">https://xbuba.com/questions/45803954</a></p>

<blockquote>
  <p>Disabling the run.processes.with.pty in Registry (open via Find Action) usually helps.</p>
</blockquote>

<p>I never understood the hype with Jetbrains tools ...</p>
","60951516","1","185","1","9","","2020-03-31 12:59:30","2020-03-31 13:27:04","2020-03-31 13:27:04",""
"57373875","Clangd cannot find standard libraries in CLion","<path><clang><clion>","<p>In CLion, Clangd underlines in red any includes from the standary C library like</p>

<pre><code>#include ""stdint.h""
</code></pre>

<p>and show a hint: 'stdint.h' not found. However it compiles and run fine. My guess is that Clangd doesn't have the standary library in the path.</p>

<p><strong>Question</strong>:</p>

<p>Are there two different Path for Clangd and Clion ? Can someone point me out a direction to include the standard library in Clangd path.</p>
","","","2","151","0","0","","2019-08-06 10:21:37","2019-08-10 08:46:21","2019-08-10 08:46:21",""
"57376691","Why is CLion giving me a warning?","<c++><clion>","<p>I declared a std::priority_queue as the refernece said on CLion IDE.</p>

<pre><code>priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; pq;
</code></pre>

<p>Warnig says</p>

<pre><code>Clang-Tidy: Prefer transparent functors 'greater&lt;&gt;'
</code></pre>

<p>and this code makes no warning.</p>

<pre><code>priority_queue&lt;int, vector&lt;int&gt;, greater&lt;&gt;&gt; pq;
</code></pre>

<p>I did as the reference says so:</p>

<pre><code>std::priority_queue&lt;int, std::vector&lt;int&gt;, std::greater&lt;int&gt; &gt; third (myints,myints+4);
</code></pre>

<p>Why is CLion giving me this warning and what code should I use?</p>
","<blockquote>
  <p>Why is CLion giving me this warning</p>
</blockquote>

<p>The warning message explains it. Firstly, it begins with <code>Clang-Tidy</code>: This means that the suggestion is produced by the Clang-Tidy static analysis tool.</p>

<p>Secondly, it continues with <code>Prefer transparent functors</code>: This means that Clang-Tidy recommends that you should use transparent (comparison) functors to non-transparent ones. It also demonstrates how to declare a transparent comparison functor: <code>'greater&lt;&gt;'</code>.</p>

<blockquote>
  <p>what code should I use?</p>
</blockquote>

<p>Ideally, following Clang-Tidy's advice would be a good idea in this case, unless you're targeting old pre-C++14 systems where standard containers don't support transparent comparison functors.</p>

<p>While the core advantage of transparent functors, that is avoiding construction of large objects of element type upon lookup doesn't apply (because <code>int</code> is tiny and fast to construct), transparent functors  avoid unnecessary repetition of the element type, which improves maintainability.</p>

<p>For more detailed information and rationale about the subject, see <a href=""http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3421.htm"" rel=""nofollow noreferrer"">this standard proposal (n3421)</a> about transparent functors, <a href=""http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3465.pdf"" rel=""nofollow noreferrer"">this proposal (n3465)</a> about heterogeneous lookup, <a href=""http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3657.htm"" rel=""nofollow noreferrer"">and this one (n3657)</a> which essentially revises n3465 with the help of n3421.</p>
","57376882","2","493","2","1","1","2019-08-06 13:00:30","","2019-08-06 13:30:56",""
"61995386","Clion WSL tool chain error after upgrade to Ubuntu20.04","<c><ubuntu><clion><windows-subsystem-for-linux>","<p>I'm using Windows 10 (version 1909, build 18363.836), CLion 2020.1. Recently I upgrade my wsl from Ubuntu 18.04 LTS to Ubuntu 20.04 LTS, and I run the script Jet Brains provided (<a href=""https://github.com/JetBrains/clion-wsl/blob/master/ubuntu_setup_env.sh"" rel=""nofollow noreferrer"">https://github.com/JetBrains/clion-wsl/blob/master/ubuntu_setup_env.sh</a>), but I got these errors when CLion are loading my projects:</p>

<pre><code>/usr/bin/cmake -DCMAKE_BUILD_TYPE=Debug -G ""CodeBlocks - Unix Makefiles"" /mnt/d/Projects/COMP26120
CMake Error at /usr/share/cmake-3.16/Modules/CMakeDetermineSystem.cmake:185 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- The C compiler identification is GNU 9.3.0
CMake Error at /usr/share/cmake-3.16/Modules/CMakeDetermineCCompiler.cmake:212 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- The CXX compiler identification is GNU 9.3.0
CMake Error at /usr/share/cmake-3.16/Modules/CMakeDetermineCXXCompiler.cmake:210 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - failed
-- Detecting C compile features
-- Detecting C compile features - done
CMake Error at /usr/share/cmake-3.16/Modules/CMakeTestCCompiler.cmake:80 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - failed
-- Detecting CXX compile features
-- Detecting CXX compile features - done
CMake Error at /usr/share/cmake-3.16/Modules/CMakeTestCXXCompiler.cmake:73 (configure_file):
  configure_file Problem configuring file
Call Stack (most recent call first):
  CMakeLists.txt:1 (project)


-- Configuring incomplete, errors occurred!
See also ""/mnt/d/Projects/COMP26120/cmake-build-debug/CMakeFiles/CMakeOutput.log"".
See also ""/mnt/d/Projects/COMP26120/cmake-build-debug/CMakeFiles/CMakeError.log"".

[Failed to reload]
</code></pre>

<p>In CLion settings -> Build, Execution, Deployment -> Toolchains, I also got this warning:
<a href=""https://i.stack.imgur.com/k6Cru.png"" rel=""nofollow noreferrer"">CLion Toolchains warning</a></p>

<p>Everything was fine when I'm using Ubuntu 18.04, What caused this problem? How can I fix it?</p>

<p>Thanks in advance.</p>
","","","1","280","0","1","1","2020-05-25 03:38:43","","2020-07-28 10:47:22",""
"62001175","CLion, SDL2, CMake: No available video device","<c++><cmake><sdl><sdl-2><clion>","<p>I am trying to start using SDL2 (with CLion as my IDE), but I'm running into errors. I'm on Pop!_OS 19.10 (based on ubuntu)</p>
<p>Here are the relevant project files:</p>
<h1>CMakeLists.txt</h1>
<pre><code>cmake_minimum_required(VERSION 3.13)
project(sdlpractice)

set(CMAKE_CXX_STANDARD 20)

find_package(SDL2 REQUIRED)
include_directories(${SDL2_INCLUDE_DIRS})

add_executable(sdlpractice main.cpp)
target_link_libraries(sdlpractice ${SDL2_LIBRARIES})
</code></pre>
<h1>Main.cpp</h1>
<pre><code>#include &quot;SDL2/SDL.h&quot;
#include &quot;stdio.h&quot;

const int SCREEN_WIDTH = 640;
const int SCREEN_HEIGHT = 480;

int main(int argc, char* args[]) {
    // The window we will be rendering to
    SDL_Window * ptrWindow = NULL;
    // The surface contained by the window
    SDL_Surface * ptrScreenSurface = NULL;
    // Initialize SDL
    if (SDL_Init(SDL_INIT_VIDEO) &lt; 0) {
        printf(&quot;SDL could not initialize! SDL_Error: %s\n&quot;, SDL_GetError());
    } else {
        // Create window
        ptrWindow = SDL_CreateWindow(&quot;SDL Practice&quot;,
                SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED,
                SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN);
        if (ptrWindow == nullptr) {
            printf(&quot;Window creation failed: %s\n&quot;, SDL_GetError());
        }
        // Get window surface
        ptrScreenSurface = SDL_GetWindowSurface(ptrWindow);
        // Fill the surface white
        SDL_FillRect(ptrScreenSurface, NULL, SDL_MapRGB(ptrScreenSurface-&gt;format, 0xFF, 0xFF, 0xFF));
        // Update the surface
        SDL_UpdateWindowSurface(ptrWindow);
        // Wait 2 seconds
        SDL_Delay(2000);
        // Destroy window, quit SDL subsystems
        SDL_DestroyWindow(ptrWindow);
        SDL_Quit();
        return 0;
    }
}
</code></pre>
<p>I get the following error:</p>
<pre><code>SDL could not initialize! SDL_Error: No available video device
</code></pre>
<p>I have tried setting DISPLAY=:0.0 in CLion's run configurations. Same error results. Futhermore, I ran</p>
<pre><code>echo $DISPLAY 
:1
</code></pre>
<p>and tried using :1 as well, same error persists.</p>
","<p>Removing <code>/usr/local/bin/sdl2-config</code>,<code>/usr/local/include/SDL2</code> and <code>/usr/local/lib/libSDL2*</code> (as suggested by Botje) solved the problem due to the self-built version of SDL2 missing the required video headers.</p>
","62068069","1","790","1","7","","2020-05-25 11:07:44","2020-06-20 09:12:55","2020-05-28 15:29:40",""
"57715802","CLion 2019.2.1 toolchain: WSL not found","<clion><windows-subsystem-for-linux>","<p>I installed Ubuntu through the Windows store and then followed the Jetbrains CLion/WSL setup guide here: <a href=""https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-clion.html"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-clion.html</a></p>

<p>However after following that guide I was still an error in CLion saying ""WSL not found""</p>

<p><a href=""https://i.stack.imgur.com/NqkCo.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NqkCo.png"" alt=""Toolchains page""></a>
<a href=""https://i.stack.imgur.com/53Cuh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/53Cuh.png"" alt=""WSL error message in Debug panel""></a></p>

<p>I tried restarting CLion but that didn't fix it.</p>

<p>I verified WSL works fine on my PC:</p>

<p><a href=""https://i.stack.imgur.com/2K3xG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2K3xG.png"" alt=""using WSL in command prompt""></a></p>

<p>CLion version information:</p>

<pre><code>CLion 2019.2.1
Build #CL-192.6262.62, built on August 21, 2019
Runtime version: 11.0.3+12-b304.39 amd64
VM: OpenJDK 64-Bit Server VM by JetBrains s.r.o
Windows 10 10.0
GC: ParNew, ConcurrentMarkSweep
Memory: 1987M
Cores: 8
Registry: run.processes.with.pty=TRUE
Non-Bundled Plugins: 
</code></pre>

<p>Windows version: <code>Microsoft Windows [Version 10.0.16299.1331]</code></p>

<p>I found this related question but unfortunately repair/reset didn't work for me <a href=""https://stackoverflow.com/questions/52060650/clion-wsl-not-found-ssh-connected"">CLION: WSL not found, ssh connected?</a></p>
","","","3","626","1","6","","2019-08-29 18:15:59","","2021-10-06 08:54:30",""
"57742334","How to include curl.h in CLion?","<c++><curl><raspberry-pi><clion>","<p>I am programming a Raspberry Pi as a Remote Linux Host in my PC with CLion. In order to include <code>curl</code> I executed:</p>

<pre><code>apt-get install libcurl4-openssl-dev
</code></pre>

<p>Then included in my C++ file:</p>

<pre><code>#include &lt;curl/curl.h&gt;
</code></pre>

<p>And in CMakeList.txt:</p>

<pre><code>cmake_minimum_required(VERSION 3.10.2)
project(Central)

set(CMAKE_CXX_STANDARD 17)

add_executable(Central main.cpp services/MyService.cpp services/MyService.h model/MyModel.cpp model/MyModel.h)

set(EXECUTABLE_OUTPUT_PATH ""bin"")

find_package (CURL)
if (CURL_FOUND)
    include_directories(${CURL_INCLUDE_DIRS})
    target_link_libraries(Central ${CURL_LIBRARIES})
else()
    MESSAGE(FATAL_ERROR ""LibCurl is not found in your system."")
endif (CURL_FOUND)

target_link_libraries(Central ${LIBS})
</code></pre>

<p>Honestly, I am COMPLETELY new to CMake and this code I copied from a blog post, I have no idea on how much I need it or if anything is missing there.</p>

<p>Then I copied and pasted an example from the <code>curl</code> website.</p>

<p>The code executes fine but all the <code>curl</code> definitions are marked as erros in CLion:</p>

<p><a href=""https://i.stack.imgur.com/iGlT5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/iGlT5.png"" alt=""CUrl error""></a></p>

<p>So I can't get autocomplete from <code>curl</code>.</p>

<p>The <code>#include &lt;curl/curl.h&gt;</code> gives me this error:</p>

<p><a href=""https://i.stack.imgur.com/FgQcH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FgQcH.png"" alt=""curl not found""></a></p>

<p>But again, the code executes fine, and other libraries inside the Raspberry Pi don't give me this error.</p>

<p>I can find the library at <code>usr/include/arm-linux-gnueabihf/curl/curl.h</code> inside the Raspberry Pi, but including this path gives me the same error.</p>

<p>Someone could explain me what's going on and how can I fix it?</p>
","","","1","986","1","8","","2019-08-31 23:56:35","2019-09-01 00:14:56","2019-09-02 21:30:38",""
"57778177","How to build CLion based CMake Project with custom Toolchain from Command Line","<cmake><clion>","<p>I've only worked with CMake in conjunction with the CLion IDE but I'm aware that CMake projects can be built on the command line completely without the IDE with the CMake build system only.</p>

<p>Now I have some more complex CLion projects for which I created a custom toolchain and various profiles through the CLion menus (File -> Settings -> Build, Execution, Deployment --> Toolchain / CMake). I want to switch to building these projects through Gitlab CI without CLion. But how do I start a CMake build on the command line in on a build VM without CLion installed that uses the toolchain and profiles that I created in the CLion GUI?</p>

<p>The desired settings to reproduce are: </p>

<ul>
<li>Using a custom gcc cross compiler for all profiles</li>
<li>Dependent on the profile:

<ul>
<li>passing various CMake variables (like <code>-DMY_VAR=FOO</code>) to my CMakeLists </li>
<li>choosing a debug or release build as build type</li>
</ul></li>
</ul>

<p>In CLion I have one custom toolchain with the special gcc and four profiles with different settings, all using this toolchain. </p>

<p>Does CLion generate a toolchain file somewhere in the background that I could just use (didn't find any so far) or do I need to write my own toolchain file and pass it to <code>cmake</code>? </p>
","","","1","487","0","4","","2019-09-03 20:12:35","2019-09-04 09:04:08","2019-09-04 09:04:08",""
"62476087","How to put breakpoints inside a linked library in CLion?","<c++><c><static-libraries><clion><dynamic-library>","<p>Is there a way to put a breakpoint inside a library linked in CLion? The library is compiled with debug symbols.<br>
I can step inside of its code if I put a breakpoint in my code, but I would like to put a breakpoint directly inside of it.<br>
The main problem is that I can't find an option or menu to ""explore"" its sources, even though they are clearly available to CLion and to the debugger.</p>
","","","1","82","0","0","","2020-06-19 18:01:52","","2020-06-19 18:01:52",""
"62494028","CLion not breaking on exceptions inside std lib (MinGW)","<c++><mingw><clion>","<p>When my program causes the C++ standard library to throw an exception, the CLion debugger (with MinGW and gcc) does not stop upon the exception occuring. (My program is accessing a std::vector&lt;&gt; out of bounds somewhere.) Instead, the program and debugging session terminate, in my case with the following error in the console:</p>
<pre><code>terminate called after throwing an instance of 'std::out_of_range'
  what():  vector::_M_range_check: __n (which is 2) &gt;= this-&gt;size() (which is 2)
</code></pre>
<p>I have verified that I have &quot;Exception Breakpoints&quot; -&gt; &quot;When any is thrown&quot; enabled in the Breakpoints view, and if I throw my own exception with <code>throw std::out_of_range(&quot;blah&quot;);</code>, the debugger does stop when it is thrown. How does one make CLion stop when an exception is thrown inside the standard library?</p>
","","","2","127","0","2","","2020-06-21 03:17:17","2020-06-23 02:28:33","2020-06-23 02:28:33",""
"64896067","CLion how to set a breakpoint in exec'd process","<gdb><fork><breakpoints><clion>","<p>I need to debug a complex program (SWUpdate) which spawns (actually fork()s) several sub-processes.</p>
<p>I can &quot;follow&quot; execution on child process using GDB commands:</p>
<pre><code>(gdb) set detach-on-fork off
(gdb) set follow-fork-mode child
</code></pre>
<p>but I didn't find a way to set a breakpoint directly on a line which will be executed only in a child process.
Is there some way to set a breakpoint at a certain location <em>regardless</em> of executing thread/process?</p>
","","","1","81","0","0","","2020-11-18 15:23:52","","2020-11-18 15:23:52",""
"64908133","How do I fix a linker error in Clion when there seems to be no problem with the code?","<c++><visual-studio><cmake><linker-errors><clion>","<p>So, I have no code, just empty files and a CMake, but I keep getting that Linker Error. Can someone please explain in a lot of detail what my problem is? Some info I have is that I am supposed to be using Visual Studio 2015 as my compiler and stuff, which I think I already have set up.</p>
<p>The Error:</p>
<pre><code>[100%] Linking CXX executable Debug\CinderGame\CinderGame.exe
NMAKE : fatal error U1077: '&quot;C:\Program Files\JetBrains\CLion 2020.2.3\bin\cmake\win\bin\cmake.exe&quot;' : return code '0xffffffff'
Stop.
NMAKE : fatal error U1077: '&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\nmake.exe&quot;' : return code '0x2'
Stop.
NMAKE : fatal error U1077: '&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\nmake.exe&quot;' : return code '0x2'
Stop.
NMAKE : fatal error U1077: '&quot;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\BIN\nmake.exe&quot;' : return code '0x2'
Stop.
LINK Pass 1: command &quot;C:\PROGRA~2\MICROS~1.0\VC\bin\link.exe /nologo @CMakeFiles\CinderGame.dir\objects1.rsp /out:Debug\CinderGame\CinderGame.exe /implib:CinderGame.lib /pdb:C:\Users\cesar\Documents\GitHub\final-project-cesarmonsalud\cmake-build-debug\Debug\CinderGame\CinderGame.pdb /version:0.0 /machine:X86 /debug /INCREMENTAL /subsystem:windows /NODEFAULTLIB:LIBCMT /NODEFAULTLIB:LIBCPMT -LIBPATH:C:\Users\cesar\Desktop\cinder_0.9.2_vc2015\lib\msw\x86 C:\Users\cesar\Desktop\cinder_0.9.2_vc2015\lib\msw\x86\Debug\v140\cinder.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:CMakeFiles\CinderGame.dir/intermediate.manifest CMakeFiles\CinderGame.dir/manifest.res&quot; failed (exit code 1120) with the following output:
LIBCMTD.lib(exe_winmain.obj) : error LNK2019: unresolved external symbol _WinMain@16 referenced in function &quot;int __cdecl invoke_main(void)&quot; (?invoke_main@@YAHXZ)
Debug\CinderGame\CinderGame.exe : fatal error LNK1120: 1 unresolved externals
</code></pre>
<p>The Code:</p>
<pre><code>cmake_minimum_required(VERSION 3.12 FATAL_ERROR)
set(CMAKE_CXX_STANDARD 11)
project(Connect4)

# This tells the compiler to not aggressively optimize and
# to include debugging information so that the debugger
# can properly read what's going on.
set(CMAKE_BUILD_TYPE Debug)

# Let's ensure -std=c++xx instead of -std=g++xx
set(CMAKE_CXX_EXTENSIONS OFF)

# Let's nicely support folders in IDE's
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# Warning flags
if(MSVC)
    # warning level 3 and all warnings as errors
    add_compile_options(/W3)
else()
    # lots of warnings and all warnings as errors
    add_compile_options(-Wall -Wpedantic -Werror)
endif()

# FetchContent added in CMake 3.11, downloads during the configure step
include(FetchContent)

# FetchContent_MakeAvailable was not added until CMake 3.14
if(${CMAKE_VERSION} VERSION_LESS 3.14)
    include(cmake/add_FetchContent_MakeAvailable.cmake)
endif()

FetchContent_Declare(
        catch2
        GIT_REPOSITORY https://github.com/catchorg/Catch2.git
        GIT_TAG devel

)

# Adds Catch2 testing library
FetchContent_GetProperties(catch2)
if(NOT catch2_POPULATED)
    FetchContent_Populate(catch2)
    add_library(catch2 INTERFACE )
    target_include_directories(catch2 INTERFACE ${catch2_SOURCE_DIR}/single_include)
endif()

get_filename_component(CINDER_PATH &quot;C:/Users/cesar/Desktop/cinder_0.9.2_vc2015&quot; ABSOLUTE)
get_filename_component(APP_PATH &quot;${CMAKE_CURRENT_SOURCE_DIR}/&quot; ABSOLUTE)

include(&quot;${CINDER_PATH}/proj/cmake/modules/cinderMakeApp.cmake&quot;)

list(APPEND CORE_SOURCE_FILES
        )

list(APPEND SOURCE_FILES    ${CORE_SOURCE_FILES}
        include/core/Connect4.h
        include/visualizer/FinalProjectApp.h
        src/core/Connect4.cpp
        src/visualizer/FinalProjectApp.cpp
        )

list(APPEND TEST_FILES tests/Connect4Tests.cpp)

ci_make_app(
        APP_NAME        CinderGame
        CINDER_PATH     ${CINDER_PATH}
        SOURCES         apps/cinder_game.cpp ${SOURCE_FILES}
        INCLUDES        include
)

ci_make_app(
        APP_NAME        ConsoleGame
        CINDER_PATH     ${CINDER_PATH}
        SOURCES         apps/main_console_game.cpp ${SOURCE_FILES}
        INCLUDES        include
)

ci_make_app(
        APP_NAME        GameTest
        CINDER_PATH     ${CINDER_PATH}
        SOURCES         tests/Connect4Tests.cpp ${SOURCE_FILES} ${TEST_FILES}
        INCLUDES        include
        LIBRARIES       catch2
)


if(MSVC)
    set_property(TARGET GameTest APPEND_STRING PROPERTY LINK_FLAGS &quot; /SUBSYSTEM:CONSOLE&quot;)
endif()
</code></pre>
","","","2","548","0","3","","2020-11-19 08:42:45","","2020-11-19 08:42:45",""
"65086992","CLion does not properly detect clang as CUDA compiler","<c++><cmake><clion>","<p>I use CMake 3.18 with CLion 2020.2.5 and want to use Clang as CUDA compiler. I do with this with the following two lines at the top of my <code>CMakeLists.txt</code>:</p>
<pre><code>set(CMAKE_CUDA_COMPILER_ID Clang)
set(CMAKE_CUDA_COMPILER ${CMAKE_CXX_COMPILER})
</code></pre>
<p>And it works very well for the code, and I also CLion seems to be able to work with the code just fine. But it still complains while configuring the project:</p>
<pre><code>-- Configuring done
-- Generating done
-- Build files have been written to: /home/mu/project

Problems were encountered while collecting compiler information:
    Unexpected compiler output. This compiler might be unsupported.
    If you are using GCC/Clang, please report the bug in https://youtrack.jetbrains.com/issues/CPP.
</code></pre>
<p>In the error log I find this:</p>
<pre><code>Checking whether the CUDA compiler is NVIDIA using &quot;&quot; did not match &quot;nvcc: NVIDIA \(R\) Cuda compiler driver&quot;:
clang version 11.0.0 (Fedora 11.0.0-2.fc33)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
</code></pre>
<p>In the output log it seems that it can identify the compiler just fine:</p>
<pre><code>Checking whether the CUDA compiler is Clang using &quot;&quot; matched &quot;(clang version)&quot;:
clang version 11.0.0 (Fedora 11.0.0-2.fc33)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
Compiling the CUDA compiler identification source file &quot;CMakeCUDACompilerId.cu&quot; succeeded.
Compiler: /usr/bin/clang++ 
Build flags: 
Id flags: --cuda-path=/usr/local/cuda;--cuda-gpu-arch=sm_52 -v

The output was:
0
clang version 11.0.0 (Fedora 11.0.0-2.fc33)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /usr/bin
Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-redhat-linux/10
Found candidate GCC installation: /usr/lib/gcc/x86_64-redhat-linux/10
Selected GCC installation: /usr/lib/gcc/x86_64-redhat-linux/10
Candidate multilib: .;@m64
Candidate multilib: 32;@m32
Selected multilib: .;@m64
Found CUDA installation: /usr/local/cuda, version 10.0
 &quot;/usr/bin/clang-11&quot; -cc1 -triple nvptx64-nvidia-cuda -aux-triple x86_64-unknown-linux-gnu -S -disable-free -disable-llvm-verifier -discard-value-names -main-file-name CMakeCUDACompilerId.cu -mrelocation-model static -mframe-pointer=all -fno-rounding-math -fno-verbose-asm -no-integrated-as -munwind-tables -aux-target-cpu x86-64 -fcuda-is-device -mlink-builtin-bitcode /usr/local/cuda/nvvm/libdevice/libdevice.10.bc -target-feature +ptx63 -target-sdk-version=10.0 -target-cpu sm_52 -fno-split-dwarf-inlining -debugger-tuning=gdb -v -resource-dir /usr/lib64/clang/11.0.0 -internal-isystem /usr/lib64/clang/11.0.0/include/cuda_wrappers -internal-isystem /usr/local/cuda/include -include __clang_cuda_runtime_wrapper.h -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10 -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/x86_64-redhat-linux -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/backward -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10 -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/x86_64-redhat-linux -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/backward -internal-isystem /usr/local/include -internal-isystem /usr/lib64/clang/11.0.0/include -internal-externc-isystem /include -internal-externc-isystem /usr/include -internal-isystem /usr/local/include -internal-isystem /usr/lib64/clang/11.0.0/include -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdeprecated-macro -fno-dwarf-directory-asm -fno-autolink -fdebug-compilation-dir /home/mu/project/CMakeFiles/3.18.4/CompilerIdCUDA -ferror-limit 19 -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -o /tmp/CMakeCUDACompilerId-b39068.s -x cuda CMakeCUDACompilerId.cu
clang -cc1 version 11.0.0 based upon LLVM 11.0.0 default target x86_64-unknown-linux-gnu
ignoring nonexistent directory &quot;/include&quot;
ignoring nonexistent directory &quot;/include&quot;
ignoring duplicate directory &quot;/usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10&quot;
ignoring duplicate directory &quot;/usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/x86_64-redhat-linux&quot;
ignoring duplicate directory &quot;/usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/backward&quot;
ignoring duplicate directory &quot;/usr/local/include&quot;
ignoring duplicate directory &quot;/usr/lib64/clang/11.0.0/include&quot;
ignoring duplicate directory &quot;/usr/include&quot;
#include &quot;...&quot; search starts here:
#include &lt;...&gt; search starts here:
 /usr/lib64/clang/11.0.0/include/cuda_wrappers
 /usr/local/cuda/include
 /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10
 /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/x86_64-redhat-linux
 /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/backward
 /usr/local/include
 /usr/lib64/clang/11.0.0/include
 /usr/include
End of search list.
 &quot;/usr/local/cuda/bin/ptxas&quot; -m64 -O0 -v --gpu-name sm_52 --output-file /tmp/CMakeCUDACompilerId-0e6743.o /tmp/CMakeCUDACompilerId-b39068.s
ptxas info    : 0 bytes gmem
 &quot;/usr/local/cuda/bin/fatbinary&quot; --cuda -64 --create /tmp/CMakeCUDACompilerId-346390.fatbin --image=profile=sm_52,file=/tmp/CMakeCUDACompilerId-0e6743.o --image=profile=compute_52,file=/tmp/CMakeCUDACompilerId-b39068.s
 &quot;/usr/bin/clang-11&quot; -cc1 -triple x86_64-unknown-linux-gnu -target-sdk-version=10.0 -aux-triple nvptx64-nvidia-cuda -emit-obj -mrelax-all -disable-free -disable-llvm-verifier -discard-value-names -main-file-name CMakeCUDACompilerId.cu -mrelocation-model static -mframe-pointer=all -fmath-errno -fno-rounding-math -mconstructor-aliases -munwind-tables -target-cpu x86-64 -fno-split-dwarf-inlining -debugger-tuning=gdb -v -resource-dir /usr/lib64/clang/11.0.0 -internal-isystem /usr/lib64/clang/11.0.0/include/cuda_wrappers -internal-isystem /usr/local/cuda/include -include __clang_cuda_runtime_wrapper.h -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10 -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/x86_64-redhat-linux -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/backward -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10 -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/x86_64-redhat-linux -internal-isystem /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/backward -internal-isystem /usr/local/include -internal-isystem /usr/lib64/clang/11.0.0/include -internal-externc-isystem /include -internal-externc-isystem /usr/include -internal-isystem /usr/local/include -internal-isystem /usr/lib64/clang/11.0.0/include -internal-externc-isystem /include -internal-externc-isystem /usr/include -fdeprecated-macro -fdebug-compilation-dir /home/mu/project/CMakeFiles/3.18.4/CompilerIdCUDA -ferror-limit 19 -fgnuc-version=4.2.1 -fcxx-exceptions -fexceptions -fcuda-include-gpubinary /tmp/CMakeCUDACompilerId-346390.fatbin -faddrsig -o /tmp/CMakeCUDACompilerId-4af90f.o -x cuda CMakeCUDACompilerId.cu
clang -cc1 version 11.0.0 based upon LLVM 11.0.0 default target x86_64-unknown-linux-gnu
ignoring nonexistent directory &quot;/include&quot;
ignoring nonexistent directory &quot;/include&quot;
ignoring duplicate directory &quot;/usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10&quot;
ignoring duplicate directory &quot;/usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/x86_64-redhat-linux&quot;
ignoring duplicate directory &quot;/usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/backward&quot;
ignoring duplicate directory &quot;/usr/local/include&quot;
ignoring duplicate directory &quot;/usr/lib64/clang/11.0.0/include&quot;
ignoring duplicate directory &quot;/usr/include&quot;
#include &quot;...&quot; search starts here:
#include &lt;...&gt; search starts here:
 /usr/lib64/clang/11.0.0/include/cuda_wrappers
 /usr/local/cuda/include
 /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10
 /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/x86_64-redhat-linux
 /usr/lib/gcc/x86_64-redhat-linux/10/../../../../include/c++/10/backward
 /usr/local/include
 /usr/lib64/clang/11.0.0/include
 /usr/include
End of search list.
 &quot;/usr/bin/ld&quot; --hash-style=gnu --build-id --eh-frame-hdr -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o a.out /usr/lib/gcc/x86_64-redhat-linux/10/../../../../lib64/crt1.o /usr/lib/gcc/x86_64-redhat-linux/10/../../../../lib64/crti.o /usr/lib/gcc/x86_64-redhat-linux/10/crtbegin.o -L/usr/lib/gcc/x86_64-redhat-linux/10 -L/usr/lib/gcc/x86_64-redhat-linux/10/../../../../lib64 -L/usr/bin/../lib64 -L/lib/../lib64 -L/usr/lib/../lib64 -L/usr/lib/gcc/x86_64-redhat-linux/10/../../.. -L/usr/bin/../lib -L/lib -L/usr/lib /tmp/CMakeCUDACompilerId-4af90f.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-redhat-linux/10/crtend.o /usr/lib/gcc/x86_64-redhat-linux/10/../../../../lib64/crtn.o


Compilation of the CUDA compiler identification source &quot;CMakeCUDACompilerId.cu&quot; produced &quot;a.out&quot;

The CUDA compiler identification is Clang, found in &quot;/home/mu/project/CMakeFiles/3.18.4/CompilerIdCUDA/a.out&quot;
</code></pre>
<p>How can I resolve with issue between CMake and CLion?</p>
","","","2","251","0","0","0","2020-12-01 08:26:00","","2020-12-01 08:26:00",""
"58020077","CLion has Run buttons greyed out or they dont work correctly","<c++><configuration><ide><clion>","<p>I just got CLion today, and wanted to try it out. However, no matter what version I use, the following comes up when I open the run menu (I am on Windows):
Under ""Run"" in the top bar the normal Run and Debug are greyed out and I can only use the Run... / Debug... ones</p>

<p>In the top-right corner of the IDE the run button, the debug button and two other ones are also greyed out.</p>

<p>If I click on the run button or the debug button from the run menu (the ones with <code>...</code> on the end) there is a run option 0 called ""edit configurations"" which allows me to make a new run configuration.</p>

<p>So I tried to set up something that works, but I was unable to do so. I also could not find anything on the internet that I was able to understand, and every tutorial that I watched had already had it working.</p>

<p>Could someone please help me in an idiot-proof way?</p>
","","","4","3800","1","4","1","2019-09-19 23:46:32","2019-09-20 11:53:28","2019-09-26 11:06:44",""
"58091057","CLion - build within a docker container, but deploy for execution/debugging to a different host","<docker><deployment><raspberry-pi><cross-compiling><clion>","<p>I have constructed an x86 docker container, containing an armv8 gcc toolchain for cross-compilation of my C++ software. The idea is that I can use the docker container to cross-compile my software and then transfer the resulting binaries to a Raspberry Pi. This all works fine, manually.</p>

<p>What I'd like to do is integrate this with JetBrains CLion, somehow. I know that a docker container can be set up as a Remote Host (via ssh), but this would build <em>and try to execute</em> the binaries within the container. What I'd like to do instead is build the binaries within the container, then deploy them to an alternative Remote Host (i.e. the Raspberry Pi) for execution, and eventually debugging.</p>

<p>Is there an appropriate workflow supported by CLion? Is it possible to configure a Toolchain remote host and a <em>separate</em> Deployment remote host? From what I can see CLion only lets you select a single environment (i.e. CMake config) for a build, and that is where the resultant binary ends up executing.</p>
","","","10","484","1","0","1","2019-09-25 04:13:19","2019-09-25 04:19:07","2021-12-14 20:13:04",""
"58097214","pure virtual destructors in c++ Clion and VS2019","<c++><visual-c++><clion><virtual-functions><pure-virtual>","<p>I'm trying do declare pure virtual destructor,
in VS2019 I'm writing like that:</p>

<pre><code>    virtual ~A() = 0 {};
</code></pre>

<p>and it's fine, but in Clion don't accept that
I'm getting the following message:</p>

<blockquote>
  <p>pure-specifier on function-definition virtual ~A() = 0{ };</p>
</blockquote>

<p>and it forces me to write a different implementation for the function (not that it to much trouble but id like to know why is that)</p>
","<p>From the C++ 20 (11.6.3 Abstract classes)</p>

<blockquote>
  <ol start=""2"">
  <li>...[Note: A function declaration cannot provide both a pure-specifier and
  a definition — end note] [Example:</li>
  </ol>
</blockquote>

<pre><code>struct C {
  virtual void f() = 0 { }; // ill-formed
};
</code></pre>

<blockquote>
  <p>— end example]</p>
</blockquote>
","58097345","3","142","1","4","","2019-09-25 11:20:29","2019-09-25 11:32:03","2019-09-25 11:32:03","2019-09-25 11:33:59"
"58105485","Linking boost in CLion project","<c++><boost><cmake><clion><mingw-w64>","<p>I want to link my c++ project on CLion with Boost. In order to make everything way easier to port I'd prefer having all the libraries directly in the project files so I put the boost folder directly in my project files and then proceeded to edit the CMakeList.txt to link the library.
I want to link my c++ project on CLion with Boost. In order to make everything way easier to port I'd prefer having all the libraries directly in the project files so I put the boost folder directly in my project files and then proceeded to edit the CMakeList.txt to link the library.</p>

<pre><code>set(BOOST_NO_SYSTEM_PATHS ON)
set(BOOST_ROOT ${PROJECT_SOURCE_DIR}/boost_1_71_0/)
set(BOOST_INCLUDEDIR ${PROJECT_SOURCE_DIR}/boost_1_71_0/boost)
find_package(Boost COMPONENTS system filesystem)
/.../
target_link_libraries(untitled ${Boost_LIBRARIES})
</code></pre>

<p>But CMake keeps tellming me that it ""-- Could NOT find Boost (missing: system filesystem) (found version ""1.71.0"")"". I tried to add 1.71.0 to the find_package but it won't change the fact that CMake tells me that it can't find Boost. The thing is that if my find_package line becomes this :</p>

<pre><code>find_package(Boost COMPONENTS)
</code></pre>

<p>CMake says ""Found Boost: C:/Users/kimer/CLionProjects/untitled/boost_1_71_0 (found suitable version ""1.71.0"", minimum required is ""1.71.0"")"".
I'm not sure what to think about this.</p>

<p>I don't necessarily want to compile the library since most of the components are header only and don't require to be compiled. Furthermore I tried to compile Boost but it requires msvc, but the compiler i'm using is mingw w64 g++ and have not found any solutions about that either (I tried running the boost.build bootstrap.bat with the mingw parameter but it returns a cpp error and won't compile).</p>

<p>What am I doing wrong to link the library?</p>

<p>Edit : I have the exact same problem with header only libs such as chrono</p>

<p>Edit 2 : Alright it seems that I have to compile Boost with my compiler which is Mingw x86_64-win32, but whenever i try to compile it I get this error :</p>

<pre><code>.\bootstrap.bat gcc
Bootstrapping the build engine
sysinfo.cpp: In function 'unsigned int {anonymous}::std_thread_hardware_concurrency()':
sysinfo.cpp:93:21: error: 'std::thread' has not been declared
         return std::thread::hardware_concurrency();
                     ^~~~~~
Fichier introuvable

Failed to bootstrap the build engine
Please consult bootstrap.log for further diagnostics.
</code></pre>

<p>Edit 3 : I found out why it did not compile : I was using the w32 version of Mingw and not the POSIX one. The whole thing compiled fine with the POSIX version ; I now have the compiled boost library in a ""boost"" folder. I changed my CMakeLists.txt file :</p>

<pre><code>set(Boost_DEBUG ON)
set(BOOST_INCLUDEDIR ${PROJECT_SOURCE_DIR}/boost/include/boost-1_71/)
set(BOOST_LIBRARYDIR ${PROJECT_SOURCE_DIR}/boost/lib)
set(BOOST_NO_SYSTEM_PATHS ON)
find_package(Boost COMPONENTS system)
</code></pre>

<p>The boost library searches in the right directories as the debug tells me. It is also searching for files with names like these :</p>

<pre><code>-- [ D:/Dev/CMake/share/cmake-3.15/Modules/FindBoost.cmake:2040 ] Searching for SYSTEM_LIBRARY_RELEASE: boost_system-mgw81-mt-1_71;boost_system-mgw81-mt;boost_system-mgw81-mt;boost_system-mt-1_71;boost_system-mt;boost_system-mt;boost_system-mt;boost_system
-- [ D:/Dev/CMake/share/cmake-3.15/Modules/FindBoost.cmake:2095 ] Searching for SYSTEM_LIBRARY_DEBUG: boost_system-mgw81-mt-d-1_71;boost_system-mgw81-mt-d;boost_system-mgw81-mt-d;boost_system-mt-d-1_71;boost_system-mt-d;boost_system-mt-d;boost_system-mt;boost_system
</code></pre>

<p>while my compiled boost library produced these A files :</p>

<pre><code>libboost_system-mgw81-mt-d-x64-1_71.a
libboost_system-mgw81-mt-x64-1_71.a
</code></pre>

<p>That might be the issue but how can i solve it ?</p>
","<p>I found the whole story, and I'm writing down the solution in case someone a little lost like me needs it.</p>

<p>So if you want to link boost to a project on windows using cmake with mingw as compiler, first you need to download and install mingw, with <strong>posix</strong> threads, and of cours x86_64 architecture. Then you download the boost sources and you can follow <a href=""https://gist.github.com/sim642/29caef3cc8afaa273ce6"" rel=""nofollow noreferrer"">this tutorial</a> in order to build Boost. Building Boost is <strong>mandatory</strong> for most of the boost libraries. By the way, to add things to windows PATH you need to go to Control Panel > System and Security > System > Advanced parameters > Environment variables and there you edit the PATH variable (you might want to add the mingw/bin folder to PATH). The last step will take a somewhat long time.</p>

<p>Once you have build your libraries, what you want to do is to link them on your CMakeLists.txt file. This is the code you want to add to the file :</p>

<pre><code>set(Boost_ARCHITECTURE -x64)
set(BOOST_ROOT &lt;path/to/boost&gt;)
set(BOOST_INCLUDEDIR &lt;path/to/boost/includes&gt;)
set(BOOST_LIBRARYDIR &lt;path/to/boost/lib&gt;)
set(BOOST_NO_SYSTEM_PATHS ON)
find_package(Boost COMPONENTS  &lt;the components you want to load&gt;)
include_directories(${Boost_INCLUDE_DIRS})

add_executable(your_project main.cpp)

target_link_libraries(untitled ${Boost_LIBRARIES})
</code></pre>

<p>So there is something up there that you won't find on FindBoost doc which is the Boost_ARCHITECTURE variable, which for some reason is not specified. The thing is that the lib files produced by the boost build will be named like this :
<code>libboost_atomic-mgw81-mt-x64-1_71.a</code>, but by default FindBoost will look for names such as <code>boost_atomic-mgw81-mt-1_71</code>, which it will never find since all the names have the architecture in it. So to enable FindBoost to search for .a files with -x64 (or -x32) in their name you need to add the <code>set(Boost_ARCHITECTURE -x64)</code> line, otherwise cmake will tell you that it did not find Boost. </p>
","58108293","1","1511","1","3","","2019-09-25 19:39:57","2019-09-26 00:26:19","2019-09-26 01:27:59",""
"58123963","Running Tests in CLion using CMake's CTest","<c++><cmake><googletest><clion><ctest>","<p>I have a C++ project using CMake. The project is built on CentOS machine. I have configured CLion to build remotely from MacOS. I have unit tests for the project and I am trying to run them from CLion. I can run the tests from CentOS machine using CTest like below</p>

<pre><code>ctest -r utCppProject -v
</code></pre>

<p>CLion tries to run the executable directly with gtest flags like below</p>

<pre><code>./utCppProject --gtest_filter=* --gtest_color=no
Process finished with exit code 0
</code></pre>

<p>No tests are actually run.</p>

<p>How can I configure CLion to be able to use CTest for running unit tests?</p>

<p>Here is my CMakeLists.txt for the unit test project</p>

<pre><code>cmake_minimum_required(VERSION 3.4.1)

include(../../cmake-dependencies/Boost.cmake)
include(../../cmake-dependencies/GoogleTest.cmake)

set(CMAKE_BINARY_DIR ""${CMAKE_CURRENT_LIST_DIR}/../build"")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)


include_directories(${GOOGLE_TEST_DIR}/googletest/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/.)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../include)


set(TARGET utCppProject)

add_executable (
   ${TARGET}
   utCppProject.cpp
)

target_link_libraries (
    ${TARGET}
    CppProject
    gtest
    boost_system
    pthread
)

set(CMAKE_CXX_FLAGS ""-fPIC -DPIC -Wall -Werror -std=c++0x"")

set(TEST_OUTPUT ""${CMAKE_BINARY_DIR}/test_results/${TARGET}.xml"")
add_test(${TARGET} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${TARGET})
set_tests_properties(${TARGET} PROPERTIES
  ENVIRONMENT 
  ""UT_FOLDER_PATH=${CMAKE_CURRENT_SOURCE_DIR};GTEST_OUTPUT=xml:${TEST_OUTPUT}"")
</code></pre>
","<p>You can easily configure CLion to use CTest. Simply duplicate the default configuration for the test target and configure it to use the CTest executable and set the working directory to the build directory:
<a href=""https://i.stack.imgur.com/ki1vo.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ki1vo.png"" alt=""enter image description here"" /></a></p>
<p>In detail:</p>
<ul>
<li>Executable &gt; Select other... &gt; Find and select ctest (for me it is <code>/usr/bin/ctest</code>, on UNIX-like systems you can use <code>which ctest</code> to find it)</li>
<li>Set program arguments - <code>-j</code> sets the amount of threads to use, then the name of the executable to test, and <code>--output-on-failure</code> to get the test output when something went wrong - you could simply set it to <code>-r utCppProject -v</code></li>
<li>Set working directory to <code>cmake-build-debug</code> under the project dir, the default build directory for CLion</li>
</ul>
","62762745","6","1703","4","1","","2019-09-26 20:00:16","","2022-05-20 18:47:59",""
"58291759","I installed vcpkg-master for visual studio code and install their package and after that only my Clion stopped working","<c><cmake><clion>","<pre><code>/Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake -DCMAKE_BUILD_TYPE=Debug -G ""CodeBlocks - Unix Makefiles"" /Users/kushthakker/CLionProjects/dog_age
-- The C compiler identification is unknown
-- The CXX compiler identification is unknown
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- broken
CMake Error at /Applications/CLion.app/Contents/bin/cmake/mac/share/cmake-3.15/Modules/CMakeTestCCompiler.cmake:60 (message):
  The C compiler

    ""/usr/bin/cc""

  is not able to compile a simple test program.
</code></pre>

<p>It fails with the following output:</p>

<pre><code>Change Dir: /Users/kushthakker/CLionProjects/dog_age/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_dced2/fast &amp;&amp; xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun
</code></pre>
","","","1","349","0","1","","2019-10-08 18:01:12","2019-10-08 22:31:27","2019-10-08 22:31:27",""
"58506437","CMake version in CLion not updating","<cmake><clion>","<p>I cloned a project from my teacher, and I wanted to run it on CLion. However, I noticed an error:</p>

<blockquote>
  <p>CMake Error at CMakeLists.txt:1 (cmake_minimum_required):
    CMake 3.14 or higher is required.  You are running version 3.13.2</p>
</blockquote>

<p>I configured a new CMake debugger in CLion, but I still keep getting the error. </p>

<p><a href=""https://i.stack.imgur.com/TWypM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TWypM.png"" alt=""enter image description here""></a></p>

<p>I have a new version of CMake installed:</p>

<p><a href=""https://i.stack.imgur.com/U6ybj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/U6ybj.png"" alt=""enter image description here""></a></p>

<p>When I install a new CMake version in cygwin, CLion returns this:
<a href=""https://i.stack.imgur.com/uYu4W.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uYu4W.png"" alt=""enter image description here""></a></p>

<p><a href=""https://i.stack.imgur.com/FJGKc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FJGKc.png"" alt=""enter image description here""></a></p>

<p>Does anyone know what I am missing or doing wrong?</p>
","<p>Eventually, I solved the problem by installing a new version of CMake inside the cygwin installer. I also updated CLion, because I had the 2018 version and that version only supports CMake versions up to and including 3.13. After updating CLion to the 2019 version, it supported CMake versions up to and including 3.15. Because the CMake version 3.16 is pretty recently released. CLion automatically takes the maximum supported version, which in this case is the 3.15. The minimum version in de CMakeLists.txt was 3.14, so 3.15 worked fine.  </p>
","58522552","4","8496","2","4","","2019-10-22 14:23:23","2019-10-22 15:52:08","2019-10-23 12:09:52",""
"60060543","Eigen3 and Clion: How to display matrix contents in Clion ide?","<clion><eigen3>","<p>I have followed the instructions for updating my GDB for use with Eigen3.  However, the CLion IDE is unable to load the contents of eigen matrices in the debug panel. </p>

<p>What should be a quick validation and debug process of results is turning into a time consuming manual print process (or worse: running gdb in interactive mode in cygwin's terminal). </p>

<p>There must be a way to enable eigen to be used with clion's debugger?</p>
","","","3","708","2","1","2","2020-02-04 15:24:44","","2022-01-16 10:13:44",""
"59145646","CLion debugging using Makefile [UNIX]","<ubuntu><debugging><makefile><compilation><clion>","<p>currently I'm using CLion on my ubuntu and I've followed the steps to be able to use Makefile with CLion, to autocompile on Makefile change and so... <a href=""https://www.jetbrains.com/help/clion/managing-makefile-projects.html"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/managing-makefile-projects.html</a></p>

<p>Everything is working as it should, but I can't use the clion debugging now
Is there any way to debug using Makefile or is it only possible with cmakelists?</p>

<p>Thanks</p>
","<p>Follow the instructions <a href=""https://www.jetbrains.com/help/clion/custom-build-targets.html"" rel=""nofollow noreferrer"">here</a>. </p>

<p>The process involves creating a 'Custom Build Application', with 'Custom Build Target' and custom 'External Tools' - but it is rather quick and painless. The examples in the doc pertain specifically to make.</p>
","60528440","1","225","1","0","0","2019-12-02 19:41:47","","2020-03-04 14:53:01",""
"61568250","CLion - how to configure to attach to existing process for debugging a .dylib","<debugging><clion><lldb><dylib><dsym>","<p>I am developing a plugin for a third-party host application on MacOS that compiles as a .dylib (with associated DSYM directory). The .dylib and DSYM directory is automatically copied to the host's plugin directory by a supplied build script. The build script uses <code>clang</code> to build the .dylib. The host application is able to open the plugin.</p>

<p>With Xcode, I am able to debug the .dylib with <code>lldb</code> within Xcode, because Xcode is somehow able to identify that the sources match the dylib once it is loaded.</p>

<p>I wish to set up a similar system with CLion, however I have not been able to get CLion to associate the breakpoint lines in the source with the dylib. When I create a breakpoint in the source it warns me that ""Breakpoint will not currently be hit. No executable code is associated with this line"". I almost expect this kind of warning because the image hasn't been loaded into the host application yet. However loading the plugin does not trigger the breakpoints.</p>

<p>I tried setting the Configuration's Executable to the .dylib, and setting the working directory to the location of the .dylib and the DSYM directory (this is what I have to do when running lldb manually), and this does not seem to help.</p>

<p>My questions are:</p>

<ol>
<li>Does CLion use <code>lldb</code> internally?</li>
<li>Is what I am trying to do possible with CLion?</li>
<li>If so, what is the correct configuration for this situation?</li>
</ol>

<p>One important thing to note is that I am not building the .dylib with CLion directly, it is build by an external build system, I am just trying to debug the resulting image with CLion, which I understand should work (it works with Xcode &amp; lldb at least). I have a basic <code>CMakeLists.txt</code> that is sufficient for CLion to understand the code base, but it is not used to build it (beyond any background compilation that CLion might do to check syntax etc).</p>
","","","3","228","0","0","","2020-05-03 00:43:58","","2020-05-03 00:43:58",""
"60122278","How to export Visual Studio Code Color Scheme to JetBrains IDEs (for example, CLion)?","<visual-studio-code><clion><jetbrains-ide>","<p>I really love Atom One Dark theme shown in the picture. I would really like to export that to have it in its full form in CLion. Is this possible? Because that theme in CLion's marketplace doesn't have coloring for all the things that the one in VSC does. (I need it for C++)</p>

<p><a href=""https://marketplace.visualstudio.com/items?itemName=akamud.vscode-theme-onedark"" rel=""nofollow noreferrer"">https://marketplace.visualstudio.com/items?itemName=akamud.vscode-theme-onedark</a></p>

<p><a href=""https://i.stack.imgur.com/5eTxQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5eTxQ.png"" alt=""enter image description here""></a></p>
","<p>As stated by rioV8, to get the exact behavior from Visual Studio's theme to CLION you have to copy the theme, as <strong>there is no theme importer between Visual Studio Code and JetBrains CLion</strong>.  </p>

<p>The process to do so would be as follows:</p>

<ol>
<li><p><strong>Get the source of your Visual Studio Color Scheme:</strong>  </p>

<ul>
<li>You can get the source code from this repo (<a href=""https://github.com/akamud/vscode-theme-onedark"" rel=""nofollow noreferrer"">VSCode There One Dark</a>) and open it at your preferred editor or download it from the <a href=""https://marketplace.visualstudio.com/items?itemName=akamud.vscode-theme-onedark"" rel=""nofollow noreferrer"">Visual Studio Marketplace</a>.</li>
</ul></li>
<li><p><strong>Customize your CLION's Theme:</strong></p>

<ul>
<li>Select a Theme at Settings/Preferences</li>
<li>Clone using the Duplicate option at the config icon if you don't want to override the existing one</li>
<li>Enable/Edit the Semantic Highlighting: Editor -> Color Scheme -> Language Defaults -> Semantic highlighting.</li>
<li>Edit the Color Scheme by expanding the Editor -> Color Scheme and editing as you like.</li>
</ul></li>
</ol>

<p>You can find more detailed instructions at the docs: <a href=""https://www.jetbrains.com/help/clion/configuring-colors-and-fonts.html"" rel=""nofollow noreferrer"">Configuring colors and fonts</a></p>

<p>** <strong>Alternative:</strong><br>
<strong>You also can pick a similar JetBrains theme</strong>; there are many apart from the default ones at the <a href=""https://plugins.jetbrains.com"" rel=""nofollow noreferrer"">JetBrains Plugins directory</a>.<br>
For example, this <a href=""https://plugins.jetbrains.com/plugin/11938-one-dark-theme"" rel=""nofollow noreferrer"">JetBrains Dark theme similar to Atom One Dark</a>.</p>
","60231386","1","7211","1","1","","2020-02-07 23:06:11","2020-02-08 10:30:35","2020-02-14 18:00:11",""
"60189951","How to set the CLion build architecture in the CMakeLists.txt file for Visual Studio?","<c++><visual-studio><cmake><clion>","<p>In CLion, how can I set the Visual Studio build architecture in the CMakeLists.txt file ? </p>

<p>According to <a href=""https://cmake.org/cmake/help/latest/variable/CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE.html"" rel=""noreferrer"">cmake.org</a>, one can set host=x64 in the CMAKE_GENERATOR_TOOLSET option. </p>

<blockquote>
  <p>The Visual Studio Generators for VS 2013 and above support using
  either the 32-bit or 64-bit host toolchains by specifying a host=x86
  or host=x64 value in the CMAKE_GENERATOR_TOOLSET option. CMake
  provides the selected toolchain architecture preference in this
  variable (x86, x64, or empty).</p>
</blockquote>

<p>But whatever I do, it has no effect when I click on run in CLion. </p>

<p>CMakeLists.txt:</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(native_data_types)

set(CMAKE_CXX_STANDARD 14)

# http://www.saoe.net/blog/generating-64-bit-projects-for-visual-studio-with-cmake/


# https://cmake.org/cmake/help/latest/variable/CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE.html
# How to set this ?

# set(host ""x64"")
# set(CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE ""x64"")
# set(CMAKE_GENERATOR_TOOLSET ""host=x64"")



# set (native_data_types_ARCHITECTURE ""x64"")
# set(BUILD_ARCH ""-m64"")
# set(BUILD_ARCH ""-m32"")

# set(CMAKE_C_FLAGS -m32)
# set(CMAKE_CXX_FLAGS -m32)

# set(CMAKE_C_FLAGS -m64)
# set(CMAKE_CXX_FLAGS -m64)

add_executable(native_data_types main.cpp)
</code></pre>

<p>What I can do is set an additional toolchain in the CLion settings, and set the desired toolchain as the default toolchain, but the encompassing slowness is absolutely horrid and not what I want. <br />
I want to set the executable architecture in the CMakeLists.txt file, so I can quickly switch, in a second. </p>

<p>For example, on Linux, where I use gcc, I can just set either</p>

<pre><code>set(CMAKE_C_FLAGS -m32)
</code></pre>

<p>or </p>

<pre><code>set(CMAKE_CXX_FLAGS -m32)
</code></pre>

<p>But unfortunately, the Visual-Studio-Compiler seems to not have such an option...</p>
","","","5","4335","1","0","1","2020-02-12 13:54:06","","2020-02-13 03:50:41",""
"60217470","In CLion, how do you set CMakeLists.txt option values?","<cmake><clion><buildconfiguration><cmakelists-options>","<p>I'm trying to use CLion (latest version - 2019.3) to work on a source repository of mine, which already uses CMake (i.e. has a <code>CMakeLists.txt</code>). Now, the package has some options regarding which targets to build; by default it builds just a few, but if you set an option to <code>ON</code>, then a bunch of tests are compiled and built.</p>

<p>Unfortunately, I don't quite see where CLion lets you set CMake option values for the build subdirectories it generates. Is it really forcing the defaults on you, or am I missing something in the main UI or the preferences?</p>
","<p>For now, there's no UI for setting option values. You'll need to edit your CMake profiles (on the menu: File | Settings | Build, Execution, Deployment | CMake) and manually add CMake command-line options, e.g. <code>-DBUILD_TESTS:BOOL=ON</code>.</p>
<p>I've filed bug <a href=""https://youtrack.jetbrains.com/issue/CPP-20268"" rel=""nofollow noreferrer"">CPP-20268</a> about this fact.</p>
<p>CLion developers are planning to allow this through a mechanism for editing all of the CMake cache - an approach which I disapprove of, but it'll be better than nothing I suppose. That is issue <a href=""https://youtrack.jetbrains.com/issue/CPP-423"" rel=""nofollow noreferrer"">CPP-423</a>.</p>
","61901738","3","1168","1","6","","2020-02-13 22:31:15","","2022-03-08 07:56:43",""
"62310211","Connect to microsoft virtual machnine with Clion and debug `xv6` with `GDB`","<gdb><virtual-machine><clion>","<p>I have a virtual machine in Microsoft Azure which runs Linux, and has the code of the <code>xv6 operating system</code>.</p>

<p>I want to debug it on my (Windows) computer. How can I connect to to the VM and the GDB/CGDB with my <code>Clion</code>?</p>

<p>I tried to add a <code>Remote Host</code> configuration in <code>Build, Execution, Deployment | Toolchains</code> and managed to connect to the VM, but it <code>Clion</code> requires a path to <code>CMake</code> and the compilers, and I (and <code>Clion</code>) can't find it, and get errors.</p>

<p><a href=""https://i.stack.imgur.com/zNJg2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zNJg2.png"" alt=""enter image description here""></a></p>

<p>This is the error details (appears when I click <code>more...</code>):
<a href=""https://i.stack.imgur.com/y0Go0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/y0Go0.png"" alt=""enter image description here""></a></p>
","","","1","122","0","1","","2020-06-10 18:06:15","2020-06-10 18:59:37","2020-06-10 18:59:37",""
"62364387","CLion is unable to find Eigen3 on macOS","<c++><cmake><eigen><clion><eigen3>","<p>I know there have been similar questions in the past. However, none of the solutions have worked for me so far. Just a few details: I am using CLion 2020.1 and Eigen 3.3.7 on macOS 13.13.6. Just an overview of what I have done so far:</p>

<ol>
<li>I downloaded Eigen 3.3.7 and unzipped the file. After that I renamed the file from ""eigen-3.3.7"" to ""Eigen3"".</li>
<li>I moved this to the ""usr/local/"" directory.</li>
<li>Within ""Eigen3"", in the ""cmake"" folder, there is a file called ""Eigen3Config.cmake.in"". I wondered why it had that extra "".in"" extension. </li>
<li><p>I opened CLion. And this is what I edited the CMakeLists.txt file to look like.</p>

<pre><code>cmake_minimum_required(VERSION 3.16)
project(Project_1)

set(CMAKE_CXX_STANDARD 17)

find_package(Eigen3 3.3 REQUIRED NO_MODULE)

add_executable(Project_1 main.cpp)
target_link_libraries(Project_1 Eigen3::Eigen)
</code></pre></li>
</ol>

<p>This is the error I got:</p>

<pre><code>CMake Error at CMakeLists.txt:6 (find_package):
Could not find a package configuration file provided by ""Eigen3"" (requested
version 3.3) with any of the following names:

Eigen3Config.cmake
eigen3-config.cmake

Add the installation prefix of ""Eigen3"" to CMAKE_PREFIX_PATH or set
""Eigen3_DIR"" to a directory containing one of the above files.  If ""Eigen3""
provides a separate development package or SDK, be sure it has been
installed.
</code></pre>

<p>After this, I proceeded to change the file name from ""Eigen3Config.cmake.in"" to ""Eigen3Config.cmake"". This is the error I got:</p>

<pre><code>CMake Error at CMakeLists.txt:6 (find_package):
Could not find a configuration file for package ""Eigen3"" that is compatible
with requested version ""3.3"".

The following configuration files were considered but not accepted:

/usr/local/Eigen3/cmake/Eigen3Config.cmake, version: unknown
</code></pre>

<p>What can I try next?</p>
","<p>I thing next solution should help here.</p>

<blockquote>
  <p>I downloaded Eigen 3.3.7 and unzipped the file. After that I renamed the file from ""eigen-3.3.7"" to ""Eigen3"". I moved this to the ""usr/local/"" directory.</p>
</blockquote>

<p>Please try to install eige n3.3.7 via brew. Just do <code>brew install eigen</code>. That's it. find_package will find it properly.</p>
","62371514","1","434","1","0","","2020-06-13 19:00:51","2020-06-14 07:51:36","2020-06-14 10:54:06",""
"59187030","Why can CLion correctly build and link Qt, but not run my executable?","<c++><qt><cmake><clion><dynamic-linking>","<h1>Summary</h1>
<p>I am trying to compile ánd run/debug Qt code in Clion on Windows. Both CMake and the building process return no errors.</p>
<p>The following scenarios occur:</p>
<ol>
<li><p>When I try to run I get <code>Process finished with exit code -1073741511 (0xC0000139)</code></p>
</li>
<li><p>When I try to debug I get <code>Process finished with exit code 1</code></p>
</li>
<li><p>When I try to run the executable via Windows CMD directly, the executable runs as intended.</p>
</li>
<li><p>When I copy all dll files from <code>../Qt/5.12.6/mingw73_64/bin</code> to the project's <code>cmake-build-debug</code> folder, the executable runs and debugs within CLion as expected.</p>
</li>
</ol>
<h1>My setup</h1>
<ul>
<li>Windows 10</li>
<li>Qt 5.12.6 (mingw73_64 build)</li>
<li>CLion 2019.2.5</li>
<li>MinGW (x86_64-8.1.0-win32-seh-rt_v6_rev0)</li>
<li>CMake (bundled, 3.15.3)</li>
</ul>
<h1>Other findings</h1>
<p>I believe there are many related topics on StackOverflow that deal with the same issue. But none manage to provide a definitive answer to what I believe to be a Path/Environment issue. Many suggestions boil down to &quot;Add Qt to your path/PATH/Path environment variable and reboot reboot reboot!&quot;, and/or mostly pertain to linux installs. Hence I hope this becomes a more complete question and answer for people running into the same error code within this context, as it is likely related to this same issue.</p>
<p>As things work outside of CLion (as shown by (3)) and work inside of CLion when I copy DLLs (4), I believe I am dealing a dynamic linking issue as a result of CLion related environment issues. Adding the Qt bin folder, which is <code>C:\Qt\5.12.6\mingw73_64\bin</code>, to my <code>System Environment Variables</code> made it so I could run the exe file directly from CMD. Note that I added the Qt bin folder path to the <code>Path</code> variable.</p>
<p>Given that some mentioned online that it is possibly an issue with the user variables due to CLion running as a certain system user, I also added said path as a <code>User Environment Variable</code>, again <code>Path</code>. But alas.</p>
<p>Additionally, I tried adding it as an environment variable directly in CLion via <code>Settings -&gt; Appearance &amp; Behavior -&gt; Path Variables</code>. Here I tried mapping the Qt bin folder to <code>Path</code>, <code>PATH</code>, and <code>QT_DIR</code> respectively. Still no success, even though I tried many reboots. Both Windows restarts and real shutdowns were attempted many times in between changing paths etc.</p>
<h1>Main question:</h1>
<p>How can I resolve the issue I described, so I can run and debug my Qt builds in CLion without having to copy Qt related DLLs to my <code>cmake-build-debug</code> where the executable is located.</p>
<h1>CMakeLists.txt</h1>
<p>Within <code>Settings -&gt; Build, Execution, Deployment -&gt; CMake</code> I have set <code>CMake options: </code> to <code>-DCMAKE_PREFIX_PATH=C:\\Qt\\5.12.6\\mingw73_64\\lib\\cmake</code></p>
<pre><code>cmake_minimum_required(VERSION 3.8)
project(HelloWorld)

set(CMAKE_CXX_STANDARD 14)

# Include a library search using find_package()
# via REQUIRED, specify that libraries are required
find_package(Qt5Core REQUIRED)
find_package(Qt5Gui REQUIRED)
find_package(Qt5Widgets REQUIRED)

set(SOURCE_FILES main.cpp)
add_executable(${PROJECT_NAME} ${SOURCE_FILES})

# specify which libraries to connect
target_link_libraries(${PROJECT_NAME} Qt5::Core)
target_link_libraries(${PROJECT_NAME} Qt5::Gui)
target_link_libraries(${PROJECT_NAME} Qt5::Widgets)
</code></pre>
<h1>main.cpp</h1>
<pre class=""lang-cpp prettyprint-override""><code>#include &lt;QtWidgets/QApplication&gt;
#include &lt;QtWidgets/QWidget&gt;
#include &lt;QtWidgets/QGridLayout&gt;
#include &lt;QtWidgets/QLabel&gt;

int main (int argc, char * argv []) {

    QApplication app (argc, argv);

    QWidget widget;
    widget.resize (640, 480);
    widget.setWindowTitle (&quot;Hello, world !!!&quot;);

    QGridLayout * gridLayout = new QGridLayout (&amp; widget);

    QLabel * label = new QLabel (&quot;Hello, world !!!&quot;);
    label-&gt; setAlignment (Qt :: AlignVCenter | Qt :: AlignHCenter);
    gridLayout-&gt; addWidget (label);

    widget.show ();

    return app.exec ();
}
</code></pre>
","<p>This has been resolved for me in the meanwhile. </p>

<p>Solution was as follows:</p>

<ol>
<li>Go to <code>edit configurations</code></li>
<li>Add the Qt bin folder to <code>Working directory</code></li>
<li>Hit <code>OK</code> and/or <code>APPLY</code></li>
</ol>

<p>Now I am able to run and build my Qt applications from within CLion directly.</p>

<p><a href=""https://i.stack.imgur.com/xNDuq.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/xNDuq.png"" alt=""Edit configurations option""></a>
<a href=""https://i.stack.imgur.com/CV8TY.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/CV8TY.png"" alt=""Run/Debug Configurations window""></a></p>
","59440037","6","989","1","0","1","2019-12-05 01:44:27","2020-06-20 09:12:55","2019-12-21 21:42:28",""
"59477680","CLion, MinGW and SDL2: Process finished with exit code -1073741515 (0xC0000135)","<c++><cmake><sdl><sdl-2><clion>","<p>I am trying to add SDL2 to my CLion project. I found this <a href=""https://github.com/muvox/roguetutorial"" rel=""nofollow noreferrer"">guide</a> and tried to follow it while including only SDL2. Everything compiles, but when I start my app I get ""Process finished with exit code -1073741515 (0xC0000135)"".</p>

<p>In my CMakeLists.txt file:</p>

<pre><code>cmake_minimum_required(VERSION 3.15)
project(Test)

set(CMAKE_CXX_STANDARD 14)

set(CMAKE_CXX_FLAGS ""-lmingw32 -static-libgcc -static-libstdc++"")
set(SDL2_PATH ""C:/CPP/libs/SDL2-2.0.10/x86_64-w64-mingw32"")
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ""C:/CPP/libs/CMakeModules"")

find_package(SDL2 REQUIRED)
include_directories(${SDL2_INCLUDE_DIR})

if (${SDL2_FOUND})
    message(VERBOSE, ""sdl found!"")
else ()
    message(FATAL_ERROR, ""sdl not found"")
endif ()

message(VERBOSE, ${SDL2_INCLUDE_DIR})
message(VERBOSE, ${SDL2_LIBRARY})

add_executable(Test src/main.cpp)
target_link_libraries(Test ${SDL2_LIBRARY})
</code></pre>

<p>main.cpp:</p>

<pre><code>#include &lt;SDL.h&gt;
#include &lt;cstdio&gt;

int main(int argc, char *args[]) {

    if (SDL_Init(SDL_INIT_VIDEO) &lt; 0) {
        printf(""SDL could not initialize! SDL_Error: %s\n"", SDL_GetError());
    }
    SDL_Quit();
    return 0;
}
</code></pre>

<p>I am using CLion 2019.3.2 with bundled CMake, latest MinGW build (x86_64-8.1.0-win32-seh-rt_v6-rev0) and latest SDL2 (2.0.10).
CMake output also looks ok:</p>

<pre><code>VERBOSE,sdl found!
VERBOSE,C:/CPP/libs/SDL2-2.0.10/x86_64-w64-mingw32/include/SDL2
VERBOSE,mingw32-mwindowsC:/CPP/libs/SDL2-2.0.10/x86_64-w64-mingw32/lib/libSDL2main.aC:/CPP/libs/SDL2-2.0.10/x86_64-w64-mingw32/lib/libSDL2.dll.a-lpthread
</code></pre>
","<p>if you are using visual studio toolchains in CLion:</p>
<p>You need to paste in folder <code>cmake-build-debug</code> or <code>cmake-build-release</code> the files <code>.dll</code>,  but no only <code>SDL2_image.dll</code>, all files from folder <code>lib/x86</code></p>
<p><a href=""https://www.libsdl.org/projects/SDL_image/release/SDL2_image-devel-2.0.5-VC.zip"" rel=""nofollow noreferrer"">SDL2_image-devel-2.0.5-VC.zip</a></p>
","65268629","1","972","2","3","","2019-12-25 10:57:57","","2020-12-12 18:51:55",""
"59713236","How to import OpenMP and MPI to a large CLion CMake project?","<c++><cmake><mpi><openmp><clion>","<p>I am new to OpenMP and MPI, and I want to import OpenMP and MPI to my existing CMake project. Therefore --</p>

<p>First, I created a very simple MPI project. </p>

<p>main.cpp:</p>

<pre><code>#include ""mpi.h""
#include ""iostream""

int main(int argc, char** argv){
    MPI_Init(NULL, NULL);

    int world_size;
    MPI_Comm_size(MPI_COMM_WORLD, &amp;world_size);

    int world_rank;
    MPI_Comm_rank(MPI_COMM_WORLD, &amp;world_rank);

    char processor_name[MPI_MAX_PROCESSOR_NAME];
    int name_len;
    MPI_Get_processor_name(processor_name, &amp;name_len);

    printf(""Hello world from processor %s, rank %d out of %d processors\n"",processor_name, world_rank, world_size);

    MPI_Finalize();
}
</code></pre>

<p>I can successfully compile and run the project using the command:</p>

<pre><code>$ mpicxx main.cpp -o main.out
$ mpirun -np 2 main.out
</code></pre>

<p>Then I created and configurated a CMake project using CLion. I can also successfully compile and run it using CLion, but it only used one processor. </p>

<p>CMakeLists.txt:</p>

<pre><code>cmake_minimum_required(VERSION 3.5)
project(Test)
set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -std=c++11"")

find_package(MPI)
include_directories(${MPI_INCLUDE_PATH})

SET(CMAKE_CXX_COMPILER mpicxx)
SET(CMAKE_C_COMPILER  mpicc)

set(SOURCE_FILES main.cpp)
add_executable(Test ${SOURCE_FILES})
</code></pre>

<p>Thus my first question is <strong>how can I use multiple processors using CLion?</strong></p>

<p>Second, I created a simple OpenMP project and run successfully.</p>

<p>But my second question is <strong>how can I include both MPI and OpenMP?</strong> It seems that I cannot just merge the two <code>CMakeLists.txt</code> of the MPI project and OpenMP project. Because I got an error about the <code>-fopenmp</code> flag: </p>

<pre><code>clang: error: unsupported option '-fopenmp'
</code></pre>

<p>CMakeLists.txt:</p>

<pre><code>cmake_minimum_required(VERSION 3.12)
project(OpenMP_MPI)

set(CMAKE_CXX_STANDARD 14)

OPTION (USE_OpenMP ""Use OpenMP to enamble &lt;omp.h&gt;"" ON)

if(APPLE)
    set(CMAKE_C_COMPILER ""/usr/local/Cellar/llvm/9.0.0_1/bin/clang"")
    set(CMAKE_CXX_COMPILER ""/usr/local/Cellar/llvm/9.0.0_1/bin/clang++"")
    set(OPENMP_LIBRARIES ""/usr/local/Cellar/llvm/9.0.0_1/lib"")
    set(OPENMP_INCLUDES ""/usr/local/Cellar/llvm/9.0.0_1/include"")
    if(CMAKE_C_COMPILER_ID MATCHES ""Clang"")
        set(OpenMP_C ""${CMAKE_C_COMPILER}"")
        set(OpenMP_C_FLAGS ""-fopenmp=libomp -Wno-unused-command-line-argument"")
        set(OpenMP_C_LIB_NAMES ""libomp"" ""libgomp"" ""libiomp5"")
        set(OpenMP_libomp_LIBRARY ${OpenMP_C_LIB_NAMES})
        set(OpenMP_libgomp_LIBRARY ${OpenMP_C_LIB_NAMES})
        set(OpenMP_libiomp5_LIBRARY ${OpenMP_C_LIB_NAMES})
    endif()
    if(CMAKE_CXX_COMPILER_ID MATCHES ""Clang"")
        set(OpenMP_CXX ""${CMAKE_CXX_COMPILER}"")
        set(OpenMP_CXX_FLAGS ""-fopenmp=libomp -Wno-unused-command-line-argument"")
        set(OpenMP_CXX_LIB_NAMES ""libomp"" ""libgomp"" ""libiomp5"")
        set(OpenMP_libomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
        set(OpenMP_libgomp_LIBRARY ${OpenMP_CXX_LIB_NAMES})
        set(OpenMP_libiomp5_LIBRARY ${OpenMP_CXX_LIB_NAMES})
    endif()
endif()

find_package(OpenMP REQUIRED)
if (OPENMP_FOUND)
    if(APPLE)
        include_directories(""${OPENMP_INCLUDES}"")
        link_directories(""${OPENMP_LIBRARIES}"")
    endif()
    set (CMAKE_C_FLAGS ""${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}"")
    set (CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}"")
    # set (CMAKE_EXE_LINKER_FLAGS ""${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}"")
endif(OPENMP_FOUND)

find_package(MPI REQUIRED)
include_directories(${MPI_INCLUDE_PATH})

SET(CMAKE_CXX_COMPILER mpicxx)
SET(CMAKE_C_COMPILER  mpicc)

add_executable(OpenMP_MPI main.cpp)
</code></pre>
","<p>The <code>CMakeLists.txt</code> should not be so complicated. It should be like this:</p>
<pre><code>cmake_minimum_required(VERSION 3.12)
project(OpenMP_MPI)

set(CMAKE_CXX_STANDARD 14)

find_package(MPI REQUIRED)
include_directories(SYSTEM ${MPI_INCLUDE_PATH})

set(CMAKE_CXX_FLAGS &quot;${CMAKE_CXX_FLAGS} -fopenmp&quot;)

add_executable(OpenMP_MPI main.cpp)

target_link_libraries(OpenMP_MPI ${MPI_C_LIBRARIES})
</code></pre>
<p>For linux, you should use the following command to build and run.</p>
<pre><code>mkdir build &amp;&amp; cd build &amp;&amp; cmake .. &amp;&amp; make &amp;&amp; mpirun -n 2 ./OpenMP_MPI
</code></pre>
<p>For MacOS, just change the command to</p>
<pre><code>mkdir build &amp;&amp; cd build &amp;&amp; cmake -DCMAKE_CXX_COMPILER=g++-9 .. &amp;&amp; make &amp;&amp; mpirun -n 2 ./OpenMP_MPI
</code></pre>
<p>It should work. (You can go to <code>/usr/local/bin</code> to check whether your compiler is g++-9.)</p>
","68690539","5","902","2","1","","2020-01-13 08:54:23","2020-01-13 13:19:46","2021-08-07 08:11:10",""
"59717658","Plugin Development for CLion: How to add a method call to an existing method","<java><clion><intellij-plugin>","<p>I am currently learning about how to write plugins for IntelliJ IDEs. I am especially interested in writing plugins for CLion.
I am trying to find a way how to add a method call to the top of the body of an existing method.
I already found a way to get the Function Definitions  in a File.</p>

<pre class=""lang-java prettyprint-override""><code>psiFile.accept(new PsiRecursiveElementWalkingVisitor(){
    @Override
    public void visitElement(PsiElement element) {
        super.visitElement(element);
        //OCFunctionDefinition test = new OCFunctionDefinition();
        if(element instanceof OCFunctionDefinition){
            infoBuilder.append(element.getText()).append(""\n"");
            element.add(elementAtCarret);
        }
    }
});
</code></pre>

<p>I read in the documentation that I can create new PsiFiles via PsiFileFactory.
For Java I could get a Factory with:</p>

<pre class=""lang-java prettyprint-override""><code>PsiElementFactory factory = JavaPsiFacade.getInstance(project).getElementFactory();
</code></pre>

<p>Is there also a factory for c++? Something like:</p>

<pre class=""lang-java prettyprint-override""><code>PsiElementFactory factory = OcPsiFacade.getInstance(project).getElementFactory();
</code></pre>

<p>Also is this approach in general the right one, for adding a method call to an existing method body?</p>
","","","1","41","0","2","","2020-01-13 13:31:19","2020-01-13 14:39:22","2020-01-13 14:39:22",""
"60149121","Using CLion IDE for code developing for QNX6.5 Neutrino targets","<c++>","<p>I am trying to use CLion IDE as my development environment for QNX6.5 Neutrino. I want to write a <code>CMakeList.txt</code> to automate my build process. I want to cross-compile my source code in CLion which the output can be on the target embedded system.</p>

<p>I found some hints to how prepare the <code>CMakeList.txt</code> file, in this file the local <code>C_Compiler</code> and <code>CXX_Compiler</code> addresses are specified:</p>

<pre><code>set(CMAKE_C_COMPILER qcc)
set(CMAKE_C_COMPILER_TARGET ${arch})

set(CMAKE_CXX_COMPILER qcc -lang-c++)
set(CMAKE_CXX_COMPILER_TARGET ${arch})
</code></pre>

<p>But the following error shows up:</p>

<blockquote>
  <p>is not able to compile a simple test program</p>
</blockquote>

<p>How can I configure CLion for that purpose?</p>

<p>I also need to use Valgrind for analyzing my code behavior inside QNX.</p>
","","","1","267","0","3","1","2020-02-10 11:09:27","2020-02-10 21:32:02","2020-02-10 21:32:02",""
"60593472","How to run CLion with SFML and CMake on Linux? Errors in Make and audio?","<linux><cmake><linker-errors><sfml><clion>","<p>I'm pretty new to installing, rearranging files, and somewhat writing code on Linux. When tasked to install CLion along with SFML and CMake, I've come into a lot of problems figuring out how to make them work. I'm currently using a Debian GNU/Linux bullseye/sid(copied straight from what I saw), so if there's anything specific about that, that'd be nice to know too.</p>

<p>The problem in particular that I'm encountering is when I decide to run my file. I get these set of errors.</p>

<pre><code>/usr/bin/ld: attempted static link of dynamic object `/home/user/Development/sfmlbuild/lib/libsfml-audio.so'
collect2: error: ld returned 1 exit status
make[3]: *** [CMakeFiles/sfml_project.dir/build.make:88: sfml_project] Error 1
make[2]: *** [CMakeFiles/Makefile2:76: CMakeFiles/sfml_project.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:83: CMakeFiles/sfml_project.dir/rule] Error 2
make: *** [Makefile:118: sfml_project] Error 2
</code></pre>

<p>This is what I have in my CMakeLists.txt as well, which I assume locates most of the SFML files, so CLion can use them.</p>

<pre><code>cmake_minimum_required(VERSION 3.7)
set(PROJECT_NAME sfml_project)

project(${PROJECT_NAME})
set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -std=c++14 -static"")

set(CMAKE_CXX_STANDARD 14)

set(SOURCE_FILES main.cpp)

if (CMAKE_BUILD_TYPE STREQUAL ""Release"")
    add_executable(${PROJECT_NAME} WIN32 ${SOURCE_FILES})
else ()
    add_executable(${PROJECT_NAME} ${SOURCE_FILES})
endif ()

set(SFML_ROOT ""/home/user/Development/sfmlbuild"")
cmake_policy(SET CMP0074 NEW)
set(SFML_STATIC_LIBRARIES FALSE)

set(CMAKE_MODULE_PATH ""${CMAKE_CURRENT_LIST_DIR}/cmake_modules"")
find_package(SFML  REQUIRED COMPONENTS audio graphics window system)
if (SFML_FOUND)
    include_directories(${SFML_INCLUDE_DIR})
    target_link_libraries(${PROJECT_NAME} ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
endif ()
</code></pre>

<p>I'm unsure what to do from here, or if there's anything wrong in particular with how I have my CLion setup. I set my CMake application to the folder where I have my sfml_project. And my sfmlbuild which contains the Linux version of SFML, downloaded from the suit, is in a separate folder which is where the libsfml-audio.so is located inside of. As for the build, execution, and development part of the CLion program, I have the Toolchains to detect the Make, C compiler, and C++ compiler where I also left the profile that's available to default. Maybe those have to do with something that's wrong, but I'm honestly unsure what to do from here.</p>

<p>If anyone can provide me feedback, small or large, then I would greatly appreciate it and try to get back as fast as I can with responses on whether or not I've done certain things.</p>

<p>I furthermore apologize as this is my first time utilizing this website to ask for any questions, so if this is a question poorly done, I accept my inexperience, and I hope to do better next time.</p>

<p>---Edit Update---
I suppose I should've put what the errors were exactly as well, so I'll add them here too.</p>

<p>For make[3]: Error 1</p>

<pre><code># External object files for target sfml_project
sfml_project_EXTERNAL_OBJECTS =

sfml_project: CMakeFiles/sfml_project.dir/main.cpp.o
sfml_project: CMakeFiles/sfml_project.dir/build.make
sfml_project: /home/user/Development/sfmlbuild/lib/libsfml-audio.so
sfml_project: /home/user/Development/sfmlbuild/lib/libsfml-graphics.so
sfml_project: /home/user/Development/sfmlbuild/lib/libsfml-window.so
sfml_project: /home/user/Development/sfmlbuild/lib/libsfml-system.so
sfml_project: CMakeFiles/sfml_project.dir/link.txt
    @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir=/home/user/CLionProjects/sfml_project/CMakeFiles --progress-num=$(CMAKE_PROGRESS_2) ""Linking CXX executable sfml_project""
//Line #88 is the next one which the error refers to.
    $(CMAKE_COMMAND) -E cmake_link_script CMakeFiles/sfml_project.dir/link.txt --verbose=$(VERBOSE)
</code></pre>

<p>For make[2], Error 2:</p>

<pre><code># All Build rule for target.
CMakeFiles/sfml_project.dir/all:
    $(MAKE) -f CMakeFiles/sfml_project.dir/build.make CMakeFiles/sfml_project.dir/depend
//The next line is line 76 for which error 2 occurs with make[2].
    $(MAKE) -f CMakeFiles/sfml_project.dir/build.make CMakeFiles/sfml_project.dir/build
    @$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir=/home/user/CLionProjects/sfml_project/CMakeFiles --progress-num=1,2 ""Built target sfml_project""
.PHONY : CMakeFiles/sfml_project.dir/all
</code></pre>

<p>For make[1], Error 2:</p>

<pre><code># Build rule for subdir invocation for target.
CMakeFiles/sfml_project.dir/rule: cmake_check_build_system
    $(CMAKE_COMMAND) -E cmake_progress_start /home/user/CLionProjects/sfml_project/CMakeFiles 2
//The next line is 83 for which make[1] occurs.
    $(MAKE) -f CMakeFiles/Makefile2 CMakeFiles/sfml_project.dir/all
    $(CMAKE_COMMAND) -E cmake_progress_start /home/user/CLionProjects/sfml_project/CMakeFiles 0
.PHONY : CMakeFiles/sfml_project.dir/rule
</code></pre>

<p>The make error is as follows, Error 2:</p>

<pre><code># Build rule for target.
sfml_project: cmake_check_build_system
//The next line is 118 for the make error.
    $(MAKE) -f CMakeFiles/Makefile2 sfml_project
.PHONY : sfml_project
</code></pre>

<p>I apologize for posting all of this information so late; I still don't quite understand too much, but I hope this gives some more information for aid.</p>
","","","1","319","1","0","","2020-03-09 00:49:19","2020-03-16 22:17:33","2020-03-16 22:17:33",""
"60684120","Can't use a library installed with VCPKG in CLion","<cmake><clion><vcpkg><openmesh>","<p>I followed the tutorial described in the VCPKG <a href=""https://github.com/microsoft/vcpkg/blob/master/docs/examples/installing-and-using-packages.md"" rel=""noreferrer"">github site</a>  and then installed OpenMesh 8.0, and after, i linked the toolchain</p>

<pre><code>-DCMAKE_TOOLCHAIN_FILE=/home/diolante/vcpkg/scripts/buildsystems/vcpkg.cmake 
</code></pre>

<p>in Clion toolchain settings and when I reload the <code>CMakeLists.txt</code> that I changed in the Clion project:</p>

<pre><code># CMakeLists.txt
cmake_minimum_required(VERSION 3.14)
project(lul)

find_package(openmesh REQUIRED)

add_executable(main main.cpp)
target_link_libraries(main openmesh)
</code></pre>

<p>The following error returns at Clion output:</p>

<pre><code>CMake Error at /home/diolante/vcpkg/scripts/buildsystems/vcpkg.cmake:288 (_find_package):   By not providing ""Findopenmesh.cmake"" in CMAKE_MODULE_PATH this project has   asked CMake to find a package configuration file provided by ""openmesh"",   but CMake did not find one.

  Could not find a package configuration file provided by ""openmesh"" with any
  of the following names:

    openmeshConfig.cmake
    openmesh-config.cmake

  Add the installation prefix of ""openmesh"" to CMAKE_PREFIX_PATH or set
  ""openmesh_DIR"" to a directory containing one of the above files. If
  ""openmesh"" provides a separate development package or SDK, be sure it has
  been installed.
</code></pre>
","","","11","2393","1","0","","2020-03-14 15:04:55","2020-03-14 19:54:37","2020-12-21 00:33:38",""
"60725679","CLion does not recognize CMakeLists.txt file","<c><clion><jetbrains-ide>","<p>I am currently trying to set up CLion, as I like IntelliJ a lot, and I ran into this seemingly very basic problem: </p>

<pre><code>CMake Error: The source directory ""/cygdrive/c/.../untitled"" does not appear to contain CMakeLists.txt.
Specify --help for usage, or press the help button on the CMake GUI. 
</code></pre>

<p>This happens even when building a clean C project from scratch in CLion, where a <code>CMakeLists.txt</code> file is present in <strong>exactly</strong> that directory. I use cygwin64 as compiler and work on a Windows x64 machine. I guess <code>/cygdrive/</code> before <code>c</code> is due to that.</p>

<p>Sorry to bother you guys with that basic stuff, but I simply cannot work it out. I know there are a lot of similar questions around, unfortunately that did not help me.</p>
","","","1","415","0","0","","2020-03-17 15:43:16","2020-03-17 20:48:25","2020-03-17 20:48:25",""
"60783217","How can I add configuration for an existing project in Clion?","<configuration><ide><clion>","<p>I just installed the Clion on Linux and now face some problems. If I create a new project in Clion, I can choose a c/c++ configuration from some given options like in the linked photo.
<a href=""https://i.stack.imgur.com/wSF7r.png"" rel=""nofollow noreferrer"">finding configuration</a></p>

<p>So the work of configuration will be done. I can run or debug my program without problems.</p>

<p>However, if I open an existing file using Clion, I need to add configuration but no finding any given options. I tried to ""edit configuration"" but can't find any configuration like those in the linked pickture above.
Just like this below:
<a href=""https://i.stack.imgur.com/Tnl70.png"" rel=""nofollow noreferrer"">no finding configuration</a></p>

<p>My question is: how could I add configuration for a existing project in Clion like for a new project? Or how could I find thoes configuration in the first linked picture?</p>

<p>Thanks for help. </p>
","","","3","257","0","0","","2020-03-21 00:14:04","","2020-03-21 00:14:04",""
"60790566","Debugging Rust in Clion results in ""Error creating process""","<debugging><rust><compilation><ide><clion>","<p>I'm new to rust and would like to debug my Rust code using <a href=""https://www.jetbrains.com/clion/"" rel=""nofollow noreferrer"">Clion</a> (19.3 currently) and followed <a href=""https://stackoverflow.com/a/57585193/3797758"">this answer</a> to switch the compiler from MSVC to GNU, Now when I run my program (in debug) I get this error from Clion:</p>

<pre><code>com.jetbrains.cidr.execution.debugger.backend.gdb.GDBDriver$GDBCommandException: Error creating process &lt;Program Path&gt;, (error 50).
</code></pre>

<p>Though running without debugging works fine.</p>

<p>If I google the error I get this <a href=""https://github.com/intellij-rust/intellij-rust/issues/2565"" rel=""nofollow noreferrer"">issue on github</a> which essentially says use a 64bit compiler on a 64bit app. The compiler I added is 64 bit and since I installed the 64 bit version of rust I assume that the programs that it outputs are 64bit... (though I don't know enough about rust to be 100% sure)</p>

<p>Running <code>rustup show</code> returns this:</p>

<pre><code>rustup show
Default host: x86_64-pc-windows-msvc
rustup home:  C:\Users\User\.rustup

installed toolchains
--------------------

stable-x86_64-pc-windows-gnu (default)
stable-x86_64-pc-windows-msvc

active toolchain
----------------

stable-x86_64-pc-windows-gnu (default)
rustc 1.42.0 (b8cedc004 2020-03-09)
</code></pre>

<p>Which is where I'm getting the idea that the correct toolchain is being used (as it says <code>x86_64</code> all over the place).</p>

<p>Where as I going wrong? and what is miss configured? </p>
","<p>Turns out that I'm super dumb and had the Clion pointing at a 32 bit install rather than the 64 bit install. I ended up following this guide by Jetbrains themselves: <a href=""https://blog.jetbrains.com/clion/2019/10/debugging-rust-code-in-clion/"" rel=""nofollow noreferrer"">https://blog.jetbrains.com/clion/2019/10/debugging-rust-code-in-clion/</a></p>
<blockquote>
<p>On Windows, go to <strong>Settings | Build, Execution, Deployment | Toolchain</strong> and set either Cygwin or MinGW as your working environment. Then, run rustup toolchain list and check the first line: it should be one of the gnu versions matching the bitness of the debugger. For example, if you’re working on <strong>MinGW (32-bit), the default toolchain should be i686-pc-windows-gnu.</strong> If you’re on <strong>MinGW64, it should be x86_64-pc-windows-gnu</strong>. You can set the appropriate toolchain by running rustup default &quot;toolchain_name&quot;.</p>
</blockquote>
<h2>Update October 2021</h2>
<p>Jetbrains have release an updated blog post that shows some improvements they have made to the debug process, for example on windows you no longer need to change settings in order to get debugging to work! <a href=""https://blog.jetbrains.com/rust/2021/10/19/debugging-rust-in-jetbrains-ides-state-of-affairs/"" rel=""nofollow noreferrer"">https://blog.jetbrains.com/rust/2021/10/19/debugging-rust-in-jetbrains-ides-state-of-affairs/</a></p>
","60805575","1","874","1","0","","2020-03-21 16:51:47","","2021-11-07 01:48:03",""
"60800068","Warn about auto promoted return type in CLion/while compilation","<c++><clion>","<p>I recently made a very minor but very hard to find mistake in my code, here's an MCVE:</p>

<pre><code>#include&lt;iostream&gt;

int foo(){
    return false;
}

int main(){
    int x = foo();
    std::cout &lt;&lt; x;
    return 0;
}
</code></pre>

<p>As you can see, here the function <code>foo</code> <code>return</code>s <code>false</code>, which - as far as I can tell - gets auto-promoted to <code>int</code> and stored into <code>x</code>. </p>

<p>However, this was a logical mistake on my end, and, surprisingly, was not caught both while compilation and in CLion. <code>gmm</code> is my compilation flag. It is supposed to catch memory leaks, runtime errors (mostly all usual undefined behavior) as well as it internally calls <code>gww</code> which has the most common warnings enabled.</p>

<p>Moreover, in CLion, CLang-tidy and Clang's own inspector almost always catch all the common mistakes in my code.</p>

<p>I do a lot of competitive programming, and this mistake recently happened live in contest. I would rather want to avoid it. I have attached my compilation flag below. I have all possible C/C++ inspections enabled in CLion Settings. Is it possible to adjust them, add a new setting, or do anything - during either compilation or in CLion or both - to be able to catch this issue at compile time? </p>

<hr>

<pre><code>alias gww='g++ -Wall -Weffc++ -pedantic  \
-pedantic-errors -Wextra -Wcast-align \
-Wcast-qual -Wconversion \
-Wdisabled-optimization \
-Wfloat-equal -Wformat=2 \
-Wformat-nonliteral -Wformat-security  \
-Wformat-y2k \
-Wimport  -Winit-self  -Winline \
-Winvalid-pch   \
-Wmissing-field-initializers -Wmissing-format-attribute   \
-Wmissing-include-dirs -Wmissing-noreturn \
-Wpacked  -Wpointer-arith \
-Wredundant-decls \
-Wshadow -Wstack-protector \
-Wstrict-aliasing=2 -Wswitch-default \
-Wswitch-enum \
-Wunreachable-code -Wunused \
-Wunused-but-set-variable \
-Wunused-parameter \
-Wvariadic-macros \
-Wwrite-strings'
alias gmm=""gww -fsanitize=address -fsanitize=undefined -D_GLIBCXX_DEBUG""
</code></pre>
","","","2","27","0","3","","2020-03-22 13:42:46","","2020-03-22 13:42:46",""
"61320012","Having problems trying to read a file using CLion with WSL toolchain","<c><clion><windows-subsystem-for-linux>","<p>Code path is: <code>C:\Users\*****\CLionProjects\bst</code></p>

<p>File path is: <code>C:\Users\*****\CLionProjects\bst\Resources\students</code></p>

<p>File content is:</p>

<pre><code>AB123456 ASD SMITH 1.0
AB234567 OMAR SDF 30.0
AB345678 XCV WER 69.0
</code></pre>

<p>My code is:</p>

<pre><code>FILE *input = fopen(""Resources\\students"", ""r"");
if(!input){
    printf(""Error while opening the file."");
    exit(-1);
}
</code></pre>

<p>and the output is:</p>

<pre><code>Error while opening the file.
Process finished with exit code 255
</code></pre>

<p>I've also tried the absolute path or to change the file extension but the output won't change. I've never had this problem working on Linux. What should I do?</p>
","","","1","171","0","1","","2020-04-20 10:14:48","","2020-04-20 10:14:48",""
"61346400","Clion clangd, how to limit memory usage","<clion><clangd>","<p>clangd uses a lot of Memory (Up to 2.5Gig on my System). On my 8GIG System I frequently run into OOM situations. </p>

<p>Currently the only solution I have found is to kill clangd once it uses a lot of memory. </p>

<p>clangd has some commandline options that look like they may reduce memory usage. But  I have not found a way how to configure them in CLion. </p>

<p>CLion doesn't like limiting its memory via ulimit, but maybe it could be possible to limit memory only for the clangd processes? </p>
","<p>Default limit for clangd is 8GB, but you can easily customize it.
CLion offers you a bunch of settings via ""registry"".
Open <code>Help | Find Action ...</code> and find for <code>Registry...</code>. In the registry find <code>clion.clangd.max.memory</code> and reduce value to 1000. In this case CLion will automatically kill clangd process if it will eat more memory that you specified.</p>

<p><a href=""https://i.stack.imgur.com/Mtfip.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Mtfip.png"" alt=""enter image description here""></a></p>

<p>You also can add <code>Clangd Memory Indicator</code> widget to bottom bar. In the latest CLion version you need to right click on bottom bar and enabled it.</p>

<p><a href=""https://i.stack.imgur.com/yWmgd.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/yWmgd.png"" alt=""enter image description here""></a></p>

<p>BTW, clangd works only with opened files. So as few files opened in editor as less memory clangd eats. If it's not your case better to submit ticket to CLion <a href=""https://youtrack.jetbrains.com/issues/CPP"" rel=""noreferrer"">tracker</a>, cause 2.5 GB is too much IMHO.  </p>
","61357833","5","2654","1","0","","2020-04-21 14:48:38","","2020-11-10 09:38:45",""
"61363516","CLion: Go to Header/Source menu includes QT MOC files","<c++><qt><ide><clion><moc>","<p>CLion with a Qt library. </p>

<p>Then I'm using ""Go to Header/Source"" shortcut in any of my class inherited from QObject, I have this problem:</p>

<p><img src=""https://i.stack.imgur.com/xmzEj.png"" alt=""screenshot""></p>

<p>It causes some inconvenience. </p>

<ol>
<li>Extra ""Enter"" click to jump into a file.</li>
<li>Then I'm using code-generation options (alt + insert menu), for example ""Generate definition for function ***"", it can be generated inside of moc_filename.cpp file.</li>
</ol>

<p>So, CLion considers every moc_filename.cpp file as a header's source.</p>

<p>I tried to find the answer in a Google and Jetbrains IDE documentation, but unsuccessfully. Maybe anyone encounters the same problem and find a solution? This problem is really annoying...</p>

<p>Thanks.</p>
","","","1","125","0","0","","2020-04-22 11:02:36","2020-04-22 14:29:06","2020-04-22 14:29:06",""
"61410814","CLion CMake ld: library not found + Vulkan and OpenGL questions","<c++><opengl><cmake><glfw><vulkan>","<p>I am trying to get a basic setup with GLFW and Vulkan for an upcoming project. I was trying to get a simple HelloTriangle Example to work. While the Vulkan library is building normally, the GLFW is throwing a <code>ld: library not found for -lglfw3</code> on running the program. I am also unsure whether my HelloTriangle example is a working example; it was the most basic example I have to seen to test Vulkan.
Here is my CMakeList.txt:</p>

<pre><code>cmake_minimum_required(VERSION 3.16)
project(OpenGLRun)

set(CMAKE_CXX_STANDARD 14)
set(glfw3_DIR /usr/local/Cellar/glfw/3.3.2/lib/cmake/glfw3)

add_executable(OpenGLRun main.cpp)

find_package(vulkan REQUIRED)
find_package(glm REQUIRED)
find_package(OpenGL REQUIRED)
find_package(glfw3 REQUIRED)

target_link_libraries(OpenGLRun Vulkan::Vulkan)
target_link_libraries(OpenGLRun glm)
target_link_libraries(OpenGLRun OpenGL::GL)
target_link_libraries(OpenGLRun glfw3)
</code></pre>

<p>And the main.cpp example code that I was trying to run for proof that everything was working:</p>

<pre><code>#define GLFW_INCLUDE_VULKAN
#include &lt;GLFW/glfw3.h&gt;

#include &lt;iostream&gt;
#include &lt;stdexcept&gt;
#include &lt;cstdlib&gt;

const uint32_t WIDTH = 800;
const uint32_t HEIGHT = 600;

class HelloTriangleApplication {
public:
    void run() {
        initWindow();
        initVulkan();
        mainLoop();
        cleanup();
    }

    private:

        GLFWwindow* window;

        void initWindow() {
            glfwInit();

            glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
            glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);

            GLFWwindow *window = glfwCreateWindow(WIDTH, HEIGHT, ""Vulkan"", nullptr, nullptr);
        }

private:
    void initVulkan() {

    }

    void mainLoop() {
        while (!glfwWindowShouldClose(window)) {
            glfwPollEvents();
        }
    }

    void cleanup() {
        glfwDestroyWindow(window);

        glfwTerminate();
    }
};

int main() {
    HelloTriangleApplication app;

    try {
        app.run();
    } catch (const std::exception&amp; e) {
        std::cerr &lt;&lt; e.what() &lt;&lt; std::endl;
        return EXIT_FAILURE;
    }

    return EXIT_SUCCESS;
}
</code></pre>

<p>And finally, for the future, would you recommend package managers in C++/CMake?</p>

<p>Thanks in advance</p>
","<p>The GLFW <a href=""https://www.glfw.org/docs/3.3/build_guide.html#build_link_cmake_source"" rel=""nofollow noreferrer"">Build Guide</a> suggests that whether you are compiling and linking GLFW along with your application, or linking an <em>installed</em> GLFW to your application, you can <strong>link</strong> GLFW to your application using the <code>glfw</code> target (not <code>glfw3</code>). Change the <a href=""https://cmake.org/cmake/help/latest/command/target_link_libraries.html"" rel=""nofollow noreferrer""><code>target_link_libraries()</code></a> command in your CMake to this:</p>

<pre><code>target_link_libraries(OpenGLRun PRIVATE glfw)
</code></pre>

<p>Note, you should <em>always</em> provide the scoping argument when using the target-based commands such as this, to tell CMake whether this is a build requirement, a usage requirement, or both. </p>
","61411584","1","623","1","5","","2020-04-24 14:33:11","2020-04-24 15:26:15","2020-04-24 15:26:15",""
"61446168","Wrong compiler used in the target offload process in CLion during CUDA compilation","<gcc><cmake><clion>","<p>I'm trying to configure a very simple CUDA project in CLion 2020.1.</p>

<p>I'm on Fedora 31 (default gcc is 9.3), but compiled gcc 8.2 from source to use it with Cuda Toolkit 10.2.</p>

<p>The Cuda samples compile and run fine using the provided make, so the compiler is working and playing nicely with nvcc.</p>

<p>In CLion, I have googletest downloaded with Conan. The Conan profile specifies 8.2 as the gcc version to be used.</p>

<p>All references to GCC in CMakeOutput.log are to the correct bin file.
And yet, I keep getting the compiler error because the wrong version is being used.</p>

<p>In my CMakeLists.txt, I have:</p>

<pre><code>set(gcc82 /usr/local/gcc82/bin)
set(CMAKE_C_COMPILER ${gcc82}/gcc82)
set(CMAKE_CXX_COMPILER ${gcc82}/g++82)
set(CMAKE_CUDA_HOST_COMPILER ${gcc82}/g++82)

project(RBF-Interpolation-Tests CUDA CXX)
</code></pre>

<p>The CMake configuration step seems to be happy too:</p>

<pre><code>/opt/clion-2018.3.4/bin/cmake/linux/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=/usr/local/gcc82/bin/gcc82 -DCMAKE_CXX_COMPILER=/usr/local/gcc82/bin/g++82 -G ""CodeBlocks - Unix Makefiles"" /home/rafael/Projects/bitbucket/RBF-Interpolation-Tests
-- The CUDA compiler identification is NVIDIA 10.2.89
-- The CXX compiler identification is GNU 8.2.0
-- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc
-- Check for working CUDA compiler: /usr/local/cuda/bin/nvcc -- works
-- Detecting CUDA compiler ABI info
-- Detecting CUDA compiler ABI info - done
-- Check for working CXX compiler: /usr/local/gcc82/bin/g++82
-- Check for working CXX compiler: /usr/local/gcc82/bin/g++82 -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Conan: Adjusting output directories
-- Conan: Using cmake global configuration
-- Conan: Adjusting default RPATHs Conan policies
-- Conan: Adjusting language standard
-- Current conanbuildinfo.cmake directory: /home/rafael/Projects/bitbucket/RBF-Interpolation-Tests/build
-- Conan: Compiler GCC&gt;=5, checking major version 8.2
-- Conan: Checking correct version: 8.2
-- Configuring done
-- Generating done
-- Build files have been written to: /home/rafael/Projects/bitbucket/RBF-Interpolation-Tests/build
</code></pre>

<p>Despite the path to CLion on my machine, the version is the most recent:</p>

<pre><code>CLion 2020.1
Build #CL-201.6668.126, built on April 9, 2020
Runtime version: 11.0.6+8-b765.25 amd64
VM: OpenJDK 64-Bit Server VM by JetBrains s.r.o
Linux 5.5.17-200.fc31.x86_64
GC: ParNew, ConcurrentMarkSweep
Memory: 10227M
Cores: 12
Registry: run.processes.with.pty=TRUE
Non-Bundled Plugins: GLSL, com.jfrog.conan.clion, lermitage.intellij.extra.icons
Current Desktop: GNOME
</code></pre>

<p>The error I always get is:</p>

<pre><code>Cannot get compiler information:
    Compiler exited with error code 1: gcc -xc++ -D__CUDA_ARCH__=300 -E -x c++ -DCUDA_DOUBLE_MATH_FUNCTIONS -D__CUDACC__ -D__NVCC__ -I/home/rafael/.conan/data/gtest/1.10.0/_/_/package/65eda67f91bbd445d66656724e8acbe2afb564b0/include -I/usr/local/cuda/bin/../targets/x86_64-linux/include -D__CUDACC_VER_MAJOR__=10 -D__CUDACC_VER_MINOR__=2 -D__CUDACC_VER_BUILD__=89 -include cuda_runtime.h -m64 -g -gdwarf-2 -fpch-preprocess -v -dD -E
    Using built-in specs.
    COLLECT_GCC=gcc
    OFFLOAD_TARGET_NAMES=nvptx-none
    OFFLOAD_TARGET_DEFAULT=1
    Target: x86_64-redhat-linux
    Configured with: ../configure --enable-bootstrap --enable-languages=c,c++,fortran,objc,obj-c++,ada,go,d,lto --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-shared --enable-threads=posix --enable-checking=release --enable-multilib --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-gcc-major-version-only --with-linker-hash-style=gnu --enable-plugin --enable-initfini-array --with-isl --enable-offload-targets=nvptx-none --without-cuda-driver --enable-gnu-indirect-function --enable-cet --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux
    Thread model: posix
    gcc version 9.3.1 20200408 (Red Hat 9.3.1-2) (GCC) 
    COLLECT_GCC_OPTIONS='-D' '__CUDA_ARCH__=300' '-E' '-D' 'CUDA_DOUBLE_MATH_FUNCTIONS' '-D' '__CUDACC__' '-D' '__NVCC__' '-I' '/home/rafael/.conan/data/gtest/1.10.0/_/_/package/65eda67f91bbd445d66656724e8acbe2afb564b0/include' '-I' '/usr/local/cuda/bin/../targets/x86_64-linux/include' '-D' '__CUDACC_VER_MAJOR__=10' '-D' '__CUDACC_VER_MINOR__=2' '-D' '__CUDACC_VER_BUILD__=89' '-include' 'cuda_runtime.h' '-m64' '-g' '-gdwarf-2' '-fpch-preprocess' '-v' '-dD' '-E' '-D' '___CIDR_DEFINITIONS_END' '-mtune=generic' '-march=x86-64'
</code></pre>

<p>which is definitely the wrong GCC version.</p>

<p>I've tried specifying the GCC version in Settings -> Cmake -> Environment with <code>CC=/usr/local/gcc82/bin;CXX=/usr/local/gcc82/bin/g++82</code>,
and also in Settings -> Toolchains -> C and C++ Compiler, and the result is the same.</p>

<p>I have no idea why the target offloading process is not picking up the specified gcc version. Any ideas?</p>
","<p>So, I filed a bug against CLion about this issue - the one @MaximBanaev pointed out:</p>

<p><a href=""https://youtrack.jetbrains.com/issue/CPP-19089"" rel=""nofollow noreferrer"">CPP-19089: Can't get CLion to use a non-default C++ compiler with CUDA</a> </p>

<p>CLion has simply not properly taken this issue into account in its toolchain mechanism. The issue is not even just the environment - there needs to be proper UI to set the ""backing"" C++ compiler for CUDA, in addition to CLion noticing the relevant settings when it comes up.</p>

<p>This isn't the only ""fundamental"" bug I've encountered trying to use CLion with CUDA projects. The support is still rather half-baked IMHO. I wish they get it right, because I would like to this IDE out and for now, I can't.</p>
","61466899","1","584","1","2","","2020-04-26 18:42:27","2020-04-26 19:10:51","2020-04-27 19:30:18",""
"61457121","How to use pthread header file in C project in CLion which uses MinGW in windows","<c><pthreads>","<p>I am trying to include <code>#include &lt;pthread.h&gt;</code> in my project which uses CLion but I am cannot use it directly. Is there any specific way to include pthread to a C project?</p>
","<p>I finally came up with a solution. Since I am using MinGW I Used MinGW installation manager and install packages that need to execute pthreads and openmp related tasks in CLion. Here is the procedure.</p>

<p>After opening the installation manager go to all packages and select the select packages named using mingw32-pthreads-w32 and select them for installation.</p>

<p><a href=""https://i.stack.imgur.com/iC4Vu.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/iC4Vu.png"" alt=""enter image description here""></a></p>

<p>Then go to the installtion -> Apply changes to install new packages. The you can use pthread.h and omp.h inside your c or c++ program without any problem.</p>
","61475020","5","999","2","0","","2020-04-27 10:48:20","","2020-04-28 07:41:06",""
"61484152","CLion not running in Terminal","<c><clion><jetbrains-ide>","<p>There's this bug with the placement of certain characters in the embedded terminal in CLion (the Run tab that pops up when you click the Run button), and I figured out that if I changed the terminal in CLion, that wouldn't happen. I changed the terminal to cmder, and it is all working now, except one thing: I can't figure out how to make CLion run the program to that terminal.</p>

<p>I tried changing the configuration, but all it did on run was open cmder but not execute the program (I had to run it manually, by writing the file name).</p>

<p>I wonder, what's the way to fix this, and make CLion directly run C programs on the terminal, instead of the Run tab?</p>

<p>Thank you.</p>
","","","1","248","1","0","","2020-04-28 15:38:14","","2020-04-28 16:10:44",""
"61814802","Use SDL2 with CLion 2020","<c++><cmake><mingw><sdl-2><clion>","<p>I can't seem to link SDL2 correctly. I am using CLion with MinGW. My CMakeLists.txt looks like this currently, but I tried using the FindSDL2 module floating around, though it always said that it could not find the SDL2 library. This is the only way I've found it to stop giving back errors.</p>

<pre><code>cmake_minimum_required(VERSION 3.16)
project(CBeat)

set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ""CC:/Development/SDL2_MinGW_32bit/lib/cmake/SDL2"")

set(SDL2_DIR C:/Mingw)

set(CMAKE_CXX_STANDARD 14)

set(SDL2_LIB_DIR ${SDL2_DIR}/lib)
include_directories(${SDL2_DIR}/include)

add_executable(CBeat main.cpp)

target_link_libraries(CBeat ${SDL2_LIB_DIR}/libSDL2.dll.a ${SDL2_LIB_DIR}/libSDL2main.a ${SDL2_LIB_DIR}/libSDL2.a  -mwindows -lmingw32 -lSDL2main -lSDL2)
add_definitions(-DSDL_MAIN_HANDLED)
</code></pre>

<p>Now, the main.cpp looks like this, CLion shows no errors and actually is able to give me suggestions and information in each function, but when running it marks various functions as undefined. I attach evidence. I am so desperate right now, I've been trying to figure out this for days now and nothing seems to work!</p>

<pre><code>  #include &lt;iostream&gt;
#include &lt;SDL2/SDL.h&gt;

using namespace std;

const int SWIDTH=640, SHEIGHT=420;

int main( int argc, char* args[] ){
SDL_Window* window = NULL;
SDL_Surface* screenSurface = NULL;

if( SDL_Init( SDL_INIT_EVERYTHING ) &lt; 0 )
{
    cout&lt;&lt; ""SDL could not initialize! SDL_Error:"" &lt;&lt; SDL_GetError &lt;&lt; endl;
}
else
{
    window = SDL_CreateWindow( ""SDL Tutorial"", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, SWIDTH, SHEIGHT, SDL_WINDOW_SHOWN );
    if( window == NULL )
    {
        cout &lt;&lt; ""Window could not be created! SDL_Error: "" &lt;&lt; SDL_GetError &lt;&lt; endl;
    }
    else
    {
        screenSurface = SDL_GetWindowSurface(window);
        SDL_FillRect(screenSurface, NULL,SDL_MapRGB(screenSurface-&gt;format, 0xFF,0xFF,0xFF));
        SDL_UpdateWindowSurface( window );
        SDL_Delay( 2000 );
    }
    SDL_DestroyWindow( window );
    SDL_Quit();
    return 0;


   }
}
</code></pre>

<p><a href=""https://i.stack.imgur.com/S1REJ.png"" rel=""nofollow noreferrer"">CLion trying to be useful</a></p>

<p>And these are the errors it gives back:</p>

<pre><code>    [ 50%] Linking CXX executable CBeat.exe
c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe: CMakeFiles\CBeat.dir/objects.a(main.cpp.obj): in function `main':
C:/Users/yello/CLionProjects/CBeat/main.cpp:12: undefined reference to `SDL_Init'
c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe: C:/Users/yello/CLionProjects/CBeat/main.cpp:18: undefined reference to `SDL_CreateWindow'
c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe: C:/Users/yello/CLionProjects/CBeat/main.cpp:25: undefined reference to `SDL_GetWindowSurface'
c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe: C:/Users/yello/CLionProjects/CBeat/main.cpp:26: undefined reference to `SDL_MapRGB'
c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe: C:/Users/yello/CLionProjects/CBeat/main.cpp:26: undefined reference to `SDL_FillRect'
c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe: C:/Users/yello/CLionProjects/CBeat/main.cpp:27: undefined reference to `SDL_UpdateWindowSurface'
c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe: C:/Users/yello/CLionProjects/CBeat/main.cpp:28: undefined reference to `SDL_Delay'
c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe: C:/Users/yello/CLionProjects/CBeat/main.cpp:30: undefined reference to `SDL_DestroyWindow'
c:/mingw/bin/../lib/gcc/mingw32/9.2.0/../../../../mingw32/bin/ld.exe: C:/Users/yello/CLionProjects/CBeat/main.cpp:31: undefined reference to `SDL_Quit'
collect2.exe: error: ld returned 1 exit status
CMakeFiles\CBeat.dir\build.make:88: recipe for target 'CBeat.exe' failed
CMakeFiles\Makefile2:74: recipe for target 'CMakeFiles/CBeat.dir/all' failed
mingw32-make.exe[3]: *** [CBeat.exe] Error 1
mingw32-make.exe[2]: *** [CMakeFiles/CBeat.dir/all] Error 2
mingw32-make.exe[1]: *** [CMakeFiles/CBeat.dir/rule] Error 2
mingw32-make.exe: *** [CBeat] Error 2
CMakeFiles\Makefile2:81: recipe for target 'CMakeFiles/CBeat.dir/rule' failed
Makefile:117: recipe for target 'CBeat' failed
</code></pre>
","","","2","380","0","3","1","2020-05-15 08:19:46","2020-05-15 14:09:40","2020-05-15 14:09:40",""
"62183958","User-defined functions in another CMakeLists.txt file in CLion","<cmake><clion>","<p>I want to separate my user-defined functions from the main <code>CmakeLists.txt</code> so they are not in the way of my stuff.</p>

<p>I work in CLion primarily and want to have syntax highlight and code completion, which CLion provides for CMake.</p>

<p>How do I do this?</p>
","<p>First you add another file alongside with your main <code>CMakeLists.txt</code> and name it something like: <code>myfunctions.cmake</code>.</p>

<p><code>*.cmake</code> extension is recognized by CLion and enables CMake syntax highlight and code completion.</p>

<p>Then in your <code>CMakeLists.txt</code> you add line:
<code>include(myfunctions.cmake)</code></p>

<p>Now you can use your user-defined functions in your main and all derived (from add_subdirectory) <code>CMakeLists.txt</code> files. Also you'll get CLion code completion for your user-defined functions as well (it works in CLion 2020.1, but I don't know about older versions)</p>
","62183959","2","66","1","0","","2020-06-03 22:44:12","2020-06-03 22:46:23","2020-06-03 22:46:23",""
"62200053","Error running google test on default in CLion","<c++><unit-testing><googletest><clion>","<p>So, unfortunatly I am unsure how to properly describe the error message.
Essentially I am trying to get used to google test, - I want to use it to test my C++ project in CLion. I create a new library project, with the following classes:</p>

<pre><code>#include ""gtest/gtest.h""

int main(int argc, char **argv) {
    ::testing::InitGoogleTest(&amp;argc, argv);
    return RUN_ALL_TESTS();
}
</code></pre>

<p>and also:</p>

<pre><code>#include ""gtest/gtest.h""

TEST(MyTestCategory, Vec2DAdditionTest){
    EXPECT_EQ(1, 1);
}
</code></pre>

<p>Of course these tests are not useful at all - but its just to see if everything works the way it should.
Now when I tried to run them, I am prompted the following error:</p>

<pre><code>6:46 PM Error running 'MyTestCategory.Vec2DAdditionTest': Cannot run 'MyTestCategory.Vec2DAdditionTest' on '&lt;default&gt;'

6:47 PM Error running 'All in main.cpp': Cannot run 'All in main.cpp' on '&lt;default&gt;'
</code></pre>

<p>What am I missing? I can't get the tests to run, - neither individually, nor directly over the main function?
Also after this, the build/run button gets greyed out in CLion and I have to right click on the main.cpp to force it to run/compile.. </p>

<p>Essential I have a project structure like so:</p>

<pre><code>src/
  a.cpp
  b.cpp
  CMakeLists.txt
test/
  main.cpp
  atests.cpp
  CmakeLists.txt
CMakeLists.txt
</code></pre>

<p>My run configuration for the test project looks like so:</p>

<p><a href=""https://i.stack.imgur.com/IKSSx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IKSSx.png"" alt=""""></a></p>
","","","4","1400","1","8","2","2020-06-04 16:51:44","2020-06-05 18:46:13","2020-06-07 20:59:26",""
"62228767","Why CLion don't put Spaces automatically when I finish a line with semicolon?","<styles><editor><settings><clion><spaces>","<pre><code>#include &lt;stdio.h&gt;

int main(){
    int a=0;
    double b=25.8;
    char *s=""Hello!"";
    int a2=45;
    if(a==a2){
        printf(""No!"");
    }

    return 0;
}
</code></pre>

<p>It looks just like above, it should be spaces before and after ""="" or ""=="".
But in Jetrains Rider, it works fine, I don't know why CLion cannot.
I think my setting is right, I don't even change it.</p>

<p><a href=""https://i.stack.imgur.com/Pot1G.png"" rel=""nofollow noreferrer"">My Code Style setting</a></p>
","","","1","101","1","0","","2020-06-06 07:40:02","","2020-06-08 11:09:18",""
"62657931","How to use MS MPI with Clion","<c++><c><mpi><clion><ms-mpi>","<p>i try to use MS MPI with the Clion ide.<br />
The msmpisdk.msi and the msmpisetup is already installed.<br />
How can i include the MS MPI sdk in Clion?</p>
<p>Thanks for your Help</p>
","","","1","122","0","0","","2020-06-30 12:53:50","","2020-06-30 12:53:50",""
"63876194","Error when trying to use Cygwin to compile a makefile in Clion","<c><makefile><clion>","<p>I am trying to compile a simple makefile program in C using Clion. I have the most up to date version of Clion and have reinstalled Cygwin and the suggested plugins as referenced by <a href=""https://www.jetbrains.com/help/clion/quick-tutorial-on-configuring-clion-on-windows.html#Cygwin"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/quick-tutorial-on-configuring-clion-on-windows.html#Cygwin</a>
However, I keep getting this error:
<a href=""https://i.stack.imgur.com/3fj3p.png"" rel=""nofollow noreferrer"">Error message</a><br />
&quot;CreateProcess error=2, The system cannot find the file specified
Cannot run program &quot;make&quot; (in directory &quot;C:\College\Fall2020\COMS 327\coms327p1&quot;): CreateProcess error=2, The system cannot find the file specified:
CreateProcess error=2, The system cannot find the file specified&quot;<br />
At first I figured it was just an issue with my make file, however I transferred this project over to linux and ran it from the command line and it works perfectly. So I am not sure why I cannot get this makefile project to run on windows.</p>
<p>For reference I am including my makefile as well:</p>
<pre><code>all: gensine gendial

gensine: main.c
    gcc -o gensine main.c -lm

gendial: main2.c
    gcc -o gendial main2.c -lm

clean:
    rm gensine gendial
</code></pre>
","","","1","91","0","2","","2020-09-13 22:34:33","2020-09-13 22:39:40","2020-09-13 22:39:40",""
"63915526","Why can I modify a string literal with CLion?","<c><string><pointers><char><string-literals>","<pre><code>#include &lt;stdio.h&gt;

int main() {
    char *name = &quot;Thank you&quot;;
    name[0] = 'a';
    printf(&quot;%s&quot;, name);
}
</code></pre>
<p>and it works fine:</p>
<p><a href=""https://i.stack.imgur.com/AqWaL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AqWaL.png"" alt=""it works"" /></a></p>
<p>My understanding is that <code>name[0] = 'a'</code> should not work.</p>
<p>So why is it working?</p>
","","","2","72","2","0","","2020-09-16 07:53:54","2020-09-16 08:20:27","2020-09-16 12:41:24",""
"63930215","CLion not showing any symbols when working with Unreal Engine 4.25","<clion><unreal-engine4>","<p>So, this is my first time ever using CLion and I've already set it up with Unreal Engine 4.25.</p>
<p>The thing is, the editor does not show any color or symbol in the format, only auto completes when writing variable types and, when hovering over them, it does not show the description of it. It also shows those red squiggles under the class name on the functions and it does not show them anywhere else, even if I make any mistake when coding.</p>
<p><a href=""https://i.stack.imgur.com/yLHEQ.png"" rel=""nofollow noreferrer"">Screenshot on the IDE 1</a> <a href=""https://i.stack.imgur.com/IPQf3.png"" rel=""nofollow noreferrer"">Screenshot on the IDE 2</a></p>
<p>I made sure I set CLion as my code editor in Unreal and installed the engine plugin into the IDE, but still no problem solved. I've also generated the CLion project files into the editor</p>
<p><a href=""https://i.stack.imgur.com/71Vy2.png"" rel=""nofollow noreferrer"">Unreal plugin installed on CLion</a> <a href=""https://i.stack.imgur.com/zeDwF.png"" rel=""nofollow noreferrer"">CLion set as my default code editor in Unreal</a> <a href=""https://i.stack.imgur.com/fPrEw.png"" rel=""nofollow noreferrer"">CLion plugin installed in Unreal</a></p>
<p>I'm also a bit unfamiliar with any IDE that is not Visual Studio, so the solution for this might as well be very trivial and I'm not aware of it, so I would appreciate any help you could give me in order to solve this problem with CLion.</p>
","","","1","39","0","0","","2020-09-17 01:59:06","","2020-09-17 01:59:06",""
"64036740","io.h not found CLion in Ubuntu 20.04","<c++><linux><ubuntu><gcc><clion>","<p>I am trying to run a c++ code however, io.h is not found.</p>
<pre><code>'io.h' file not found
</code></pre>
<p>It is shown as</p>
<pre><code>#include &lt;io.h&gt;
</code></pre>
<p><a href=""https://i.stack.imgur.com/10Qwg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/10Qwg.png"" alt=""enter image description here"" /></a></p>
<p>Additionally, I am getting a bunch of weird problems (for a code that is rather &gt; 16 years old):</p>
<pre><code> Use of undeclared identifier '_read'
</code></pre>
<p>or</p>
<pre><code>Unknown type name '__int64'; did you mean '__int64_t'?
</code></pre>
<p>or</p>
<pre><code>Use of undeclared identifier '_O_RDONLY'
</code></pre>
<p>or</p>
<pre><code>Use of undeclared identifier '_lseeki64'; did you mean 'fseeko64'?
</code></pre>
<p>or</p>
<pre><code>Cannot initialize a parameter of type 'FILE *' (aka '_IO_FILE *') with an lvalue of type 'int'
</code></pre>
<p>or</p>
<pre><code>Use of undeclared identifier '_lseek'; did you mean 'fseek'?
</code></pre>
<p>or</p>
<pre><code>Use of undeclared identifier '_close'
</code></pre>
<p>I wonder if these are related to io.h not being found.</p>
<pre><code>$ lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 20.04.1 LTS
Release:    20.04
Codename:   focal
</code></pre>
<p>I have CLion 2020.2.3
and</p>
<pre><code>$ gcc --version
gcc (Ubuntu 9.3.0-10ubuntu2) 9.3.0
Copyright (C) 2019 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
</code></pre>
","<p>Add compiler directives to manage multi-os compilation.</p>
<pre><code>//old line: #include&lt;io.h&gt;
#ifdef _WIN32
    #include &lt;io.h&gt;
#elif __linux__
    #include &lt;inttypes.h&gt;
    #include &lt;unistd.h&gt;
    #define __int64 int64_t
    #define _close close
    #define _read read
    #define _lseek64 lseek64
    #define _O_RDONLY O_RDONLY
    #define _open open
    #define _lseeki64 lseek64
    #define _lseek lseek
    #define stricmp strcasecmp
#endif
//SAF_Handle.cpp line:458 old line:INFILE = _open(infilename, _O_RDONLY | _O_BINARY);
#ifdef __linux__
  INFILE = _open(infilename, _O_RDONLY);
#elif
  INFILE = _open(infilename, _O_RDONLY | _O_BINARY);
#endif
</code></pre>
<p>Fixed a few loops where the iterator variable 'i' was undeclared.</p>
","64092929","1","1971","1","5","","2020-09-23 21:49:12","","2020-09-27 20:18:50",""
"64103057","CLion regex replace with pattern with found string","<regex><clion>","<p>I want to replace string <code>Sleep(*any value*)</code>
to <code>std::this_thread::sleep_for(std::chrono::milliseconds(*found value*))</code>.</p>
<p>For example, from <code>Sleep(5000)</code>
to <code>std::this_thread::sleep_for(std::chrono::milliseconds(5000))</code>.</p>
<p>I tried to do this:<br />
from regex: <code>Sleep\((.*)\)</code> to regex: <code>std::this_thread::sleep_for\(std::chrono::milliseconds\(\1\)\)</code></p>
<p>It works in notepad++, but not in CLion. Why?<br />
<code>\1, \2, \3, ..., \n</code> works only in notepad++?</p>
","<p>In CLion, it is not <code>\n</code>, but <code>$n</code> to reference capture groups.</p>
<p>See: <a href=""https://www.jetbrains.com/help/clion/tutorial-finding-and-replacing-text-using-regular-expressions.html#capture_groups_and_backreference"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/clion/tutorial-finding-and-replacing-text-using-regular-expressions.html#capture_groups_and_backreference</a></p>
","64103133","3","234","1","3","","2020-09-28 13:22:43","2020-09-28 14:16:20","2020-10-14 06:30:48",""
"64578304","Nested CMakeLists.txt files in CLion","<c++><cmake><clion>","<p>Using CLion, I have a project structure that looks like this:</p>
<p><a href=""https://i.stack.imgur.com/ANTek.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ANTek.png"" alt=""enter image description here"" /></a></p>
<p>You'll see that in the root there are an <code>include</code> directory, a <code>src</code> directory, a <code>lib</code> directory, a <code>cmake-build-debug</code> directory, a <code>CMakeLists.txt</code> file (see red arrow), and a <code>tests</code> directory. The project builds a shared object into <code>lib</code> using the root-level <code>CMakeLists.txt</code> file and the various source, header, and external files.</p>
<p>I can successfully run the root-level <code>CMakeList.txt</code> file and build the library. So far, so good.</p>
<p>Here is the issue. In addition to the above, I am now interested -- on an informal, exploratory basis -- in testing some of the code in the project. To that end, as an initial example, I have created a <code>test_nnls</code> directory with its own <code>CMakeLists.txt</code> (see yellow arrow) file and a <code>test_nnls.cpp</code> file. The code in <code>test_nnls.cpp</code> creates some dummy data, calls a function in <code>src/nnls.cpp</code>, and prints the results. The build process here just creates an executable that does this. This approach is not meant to be part of any formal test framework and I do not want the test to run as part of the root-level build. This is just me adding a simple test program in the overall project that I would like to compile and run on an independent basis when I feel the need. I plan to possibly implement a formal test framework later, but at present I don't know how to do this and for now just need to print some simple output to see if the chosen code is working correctly.</p>
<p>The problem is that I cannot seem to execute the <code>CMakeLists.txt</code> file (yellow arrow) to build the test. It does not appear to be possible in CLion to set up a build for the test program using <code>cmake</code>. How do I structure all of this to get what I want? Thanks.</p>
","<p>You don't execute a <code>CMakeLists.txt</code>. It is read by <code>cmake</code> (the root <code>CMaksLists.txt</code> file), which is called by CLion. However, CLion only passes the root <code>CMaksLists.txt</code> file to <code>cmake</code>. Even if you call cmake yourself you would only pass this root <code>CMaksLists.txt</code> file.</p>
<p>If you want to define targets (or anything) in other <code>CMaksLists.txt</code> files located in other folders, then you must add <code>add_subdirectory(folder_name_that_contains_another_CMakeLists_file)</code> to your root <code>CMaksLists.txt</code> file. Only then targets in these other <code>CMaksLists.txt</code> files will appear in CLion.</p>
<p>Note that a few things should appear in the root <code>CMaksLists.txt</code> file, but not in the other ones. Particularly, the two lines below should only be in the root file</p>
<pre><code>cmake_minimum_required(VERSION 3.14)  # Choose the minimum cmake version
project(name_of_your_project)
</code></pre>
","64581031","1","493","1","1","1","2020-10-28 17:34:26","","2020-10-28 20:46:13",""
"64596606","gcov not working with pthreads, WSL-2, Clion","<c++><pthreads><clion><gcov><wsl-2>","<p>Background:
This seems to work fine if I don't use any threads or just spawn 1 thread, which makes this all the more confusing.</p>
<p>Clion Project <a href=""https://drive.google.com/file/d/1P0dN89iiP-YQXtXc1mDA5-aGHgGFcLVK/view?usp=sharing"" rel=""nofollow noreferrer"">here</a></p>
<p>Problem:
I set up a basic example project that starts 2 threads and does some printing to the console from main thread, thread 2, and thread 3.</p>
<pre><code>#include &lt;iostream&gt;
#include &lt;thread&gt;

void thread1()
{
    for(int i = 0; i &lt; 10000; i++)
    {
        std::cout &lt;&lt; &quot;thread1&quot; &lt;&lt; std::endl;
    }
}

void thread2()
{
    for(int i = 0; i &lt; 10000; i++)
    {
        std::cout &lt;&lt; &quot;thread2&quot; &lt;&lt; std::endl;
    }
}

int main()
{
    std::cout &lt;&lt; &quot;Hello, World!&quot; &lt;&lt; std::endl;
    std::thread threadObj(thread1);
    std::thread threadObj2(thread2);
    for(int i = 0; i &lt; 10000; i++)
    {
        std::cout&lt;&lt;&quot;MainThread&quot;&lt;&lt;std::endl;
    }
    threadObj.join();
    std::cout&lt;&lt;&quot;Exit of Main function&quot;&lt;&lt;std::endl;
    return 0;
}
</code></pre>
<p>Compiling using:</p>
<pre><code>--coverage -pthread -g -std=gnu++2a
</code></pre>
<p>When I run in clion using &quot;Run 'EvalTest' with Coverage&quot;, I get the following error:</p>
<blockquote>
<p>Could not find code coverage data</p>
</blockquote>
<p><a href=""https://i.stack.imgur.com/Jq9Zd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Jq9Zd.png"" alt=""enter image description here"" /></a></p>
<p>So it's not producing the gcov files needed, but it works fine if I comment out the following line of code:</p>
<pre><code>int main()
{
    std::cout &lt;&lt; &quot;Hello, World!&quot; &lt;&lt; std::endl;
    std::thread threadObj(thread1);
//    std::thread threadObj2(thread2);
    for(int i = 0; i &lt; 10000; i++)
    {
        std::cout&lt;&lt;&quot;MainThread&quot;&lt;&lt;std::endl;
    }
    threadObj.join();
    std::cout&lt;&lt;&quot;Exit of Main function&quot;&lt;&lt;std::endl;
    return 0;
}
</code></pre>
<p><a href=""https://i.stack.imgur.com/8VPmw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8VPmw.png"" alt=""enter image description here"" /></a></p>
","<p>Needed to do threadObj.join() and threadObj2.join().  So code looks like:</p>
<pre><code>int main()
{
    std::cout &lt;&lt; &quot;Hello, World!&quot; &lt;&lt; std::endl;
    std::thread threadObj(thread1);
    std::thread threadObj2(thread2);
    for(int i = 0; i &lt; 10000; i++)
    {
        std::cout&lt;&lt;&quot;MainThread&quot;&lt;&lt;std::endl;
    }
    threadObj.join();
    threadObj2.join();  // need to join both thread for gcov to work properly
    std::cout&lt;&lt;&quot;Exit of Main function&quot;&lt;&lt;std::endl;
    return 0;
}
</code></pre>
","64599255","1","226","1","9","","2020-10-29 17:47:58","2020-10-29 21:00:28","2020-10-29 21:09:08",""
"64604973","Navigate through usages in CLion's Hierarchy View and opening the Hierarchy View for fields and constructors","<c++><linux><clion><jetbrains-ide>","<p>I'm having some troubles when using the hierarchy view (<code>ctrl</code> + <code>alt</code> + <code>H</code>) in CLion 2020.2.3 for a C++ project. I could not figure out the following two things, even after searching the web:</p>
<ol>
<li>Navigating between different usages: In the hierarchy view for a method <code>X</code>, there is sometimes a method <code>Y</code> that calls <code>X</code> from multiple places within the same method. It shows this by having (3 usages), for example, next to the method <code>Y</code>. When clicking on method <code>Y</code>, I get to the first usage of <code>X</code>. How can I navigate to the next usage of <code>X</code> within method <code>Y</code> (the remaining 2 usages)? I intuitively double clicked on it but that does not work.</li>
<li>Opening the hierarchy view does not seem to work on constructors and fields. Why? When following a call chain in the hierarchy view, it stops to load once a constructor is opened. This is a little bit annoying. This worked perfectly fine in Eclipse, for example.</li>
</ol>
<p>Coming from Eclipse (using <code>ctrl</code> + <code>alt</code> + <code>G</code>/<code>H</code>), this is a pain point as I used the hierarchy view a lot there. Going over the usages window shows me the direct usages but not the hierarchy. Can anybody help on these two points or provide some suitable alternatives? Thanks a lot!</p>
","","","1","37","0","0","","2020-10-30 08:31:59","","2020-10-30 08:31:59",""
"65024565","CLion remote debugging will not kill remote process","<remote-debugging><clion><gdbserver>","<p>I have the newest (2020.3 EAP ATM) version of CLion and I currently use it to remote debug a program on an embedded target (linux-mipsel).</p>
<p>Everything works as expected, after a bit of configuration, using self-built cross-toolchain and <code>gdbserver</code>.</p>
<p>My only problem is hitting the &quot;red square&quot; to stop execution will neither kill the running program nor <code>gdbserver</code> itself.
This means next iteration of edit-compile-debug cycle I will have two copies of both (I can get more, if I insist) which will not work as each tries to open the same resources (e.g.: a serial port) concurrently.</p>
<p>I have to manually log into target and kill the offending processes.</p>
<p>Am I missing something, is it a known bug or what?</p>
<h3>Small update:</h3>
<p><code>gdbserver</code> is actually killed (does not show in <code>ps ax</code>) but underlying program (debugee) is still there. I am unsure why I was convinced otherwise, my bad.</p>
","","","1","121","1","0","","2020-11-26 15:05:08","2020-11-27 11:27:48","2021-06-07 10:38:53",""
"65041670","CLion MakeFile Build Failure","<c++><windows><makefile><clion>","<p>When I Try to build CPP Project with MakeFile I have the next error:
CreateProcess error=2
Cannot run program &quot;make&quot; (in directory [Path])
<a href=""https://i.stack.imgur.com/9CGzF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9CGzF.png"" alt=""enter image description here"" /></a></p>
","","","1","57","0","2","","2020-11-27 17:46:08","","2020-11-27 17:46:08",""
"54145722","How to load and index C++ project to CLion without dependency","<clion>","<p>I have big C++ project, with many dependences. I don't want to build it on my local PC, just edit, so i really don't want to install all dependences. But in this way, CLion doesn't index project, and i can't use: <code>Find Usages</code> and <code>Go To -&gt; Declaration\Definition\...</code>. Is it possible to load and index C++ project in CLion without dependences?</p>
","","","1","54","0","0","","2019-01-11 11:34:21","","2019-01-11 11:34:21",""
"54160548","Custom file template for C files in CLion","<c><linux><velocity><clion>","<p>I want to create author header for C file in <em>CLion</em> (it use <strong>Apache Velocity template language</strong>) wich looks like this:</p>

<pre><code>/*********************************/
/* ${FILE_NAME}                  */
/*                               */
/* By: ${USER}                   */
/*                               */
/* Created: ${DATE} by ${USER}   */
/* Updated: ${??} by ${USER}     */
/*                               */
/*********************************/
</code></pre>

<p>There are two problems:<br>
1. How to add <code>Updated date</code> and how can I change it format?<br>
2. I want to fix the width of header, now its width varies depending on length of the <code>FILE_NAME</code> and <code>USER</code>. How can I fix it?   </p>
","","","1","231","1","0","0","2019-01-12 14:32:29","","2019-01-12 20:11:43",""
"54166303","CLion for PHP Extension development?","<ide><php-extension>","<p>I'm developing a PHP extension. I choose to use CLion since I'm familiar with IntelliJ, but it seems CLion doesn't support Makefile which is generated by <code>phpize</code>. Is there any workaround to make CLion recognize phpize macros?</p>

<p>Or can anyone recommend a IDE supporting PHP extension development better?</p>
","","","1","442","2","0","","2019-01-13 05:24:34","","2020-08-14 23:37:08",""
"54188849","CLion failing to detect C/C++ compiler ABI info","<cmake><clion>","<p>I have a custom toolchain for building projects. And by custom toolchain, I mean a derivative of the Clang C compiler, C++ compiler, and linker.</p>

<p>The project(s) build just fine, but I'm unable to use the Intellij features of CLion, because it can't build a tags database (or whatever it does under the hood) due to not being able to recognize the custom toolchain.</p>

<p>Thus, hitting <code>Tools</code> -> <code>CMake</code> -> <code>Reset Cache and Reload Project</code> spits out:</p>

<pre><code>/Applications/CLion.app/Contents/bin/cmake/mac/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=~/&lt;path-to-custom-toolchain&gt;/Toolchain.cmake -G ""CodeBlocks - Unix Makefiles"" /Users/&lt;project-directory&gt;/src
-- Setting up Toolchain 1.0 at /Users/&lt;tools&gt;/build
-- Setting up Toolchain 1.0 at /Users/&lt;tools&gt;/build
-- The C compiler identification is Clang 7.0.0
-- The CXX compiler identification is Clang 7.0.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - failed
-- Detecting C compile features
-- Detecting C compile features - failed
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - failed
-- Detecting CXX compile features
-- Detecting CXX compile features - failed
-- Configuring done
</code></pre>

<hr>

<p>Screenshot of the preference options for the project (It's a link because I don't have the rep required to post images yet):
<br>
<a href=""https://i.stack.imgur.com/GgL8p.png"" rel=""nofollow noreferrer"">Project Preferences</a></p>

<hr>

<p>So my question is, how should I go about solving this problem? Or does this problem exceed the limitations of CLion? Or do I have an incomplete understanding of the problem?</p>
","","","1","1742","0","5","","2019-01-14 20:39:15","2019-01-18 20:51:30","2019-01-18 20:51:30",""
"54206799","How to run and debug AzerothCore using CLion","<clion><azerothcore>","<p><a href=""https://www.jetbrains.com/clion/?from=AzerothCore"" rel=""nofollow noreferrer"">CLion</a> is a powerful multi-platform IDE that allows to run and debug C++ applications.</p>

<p>I tried to use it with an <a href=""https://github.com/azerothcore/azerothcore-wotlk"" rel=""nofollow noreferrer"">AzerothCore</a> core project.</p>

<p>It is smart enough to detect all the processes:</p>

<p><a href=""https://i.stack.imgur.com/gxiO6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gxiO6.png"" alt=""AzerothCore processes in CLion""></a></p>

<p>Mostly I'm interested in running the <code>worldserver</code>.</p>

<p>However when I try to run or debug it, it correctly compile and runs but it will look for the <code>worldserver.conf.dist</code> configuration file in the directory <code>/usr/local/etc/</code>, giving error because that file is not there.</p>

<p>I would like to manually specify the path of such configuration file, as well as passing other CMake parameters.</p>
","","","3","350","1","0","","2019-01-15 21:06:00","2019-01-15 21:13:51","2022-02-08 01:43:05",""
"54280901","Error when compiling a program that uses Assimp with MinGW in CLion","<cmake><mingw><clion><assimp>","<p>I'm trying to compile a program in CLion that uses the Assimp library using the MinGW compiler. When building the project it gets up to 77% and gives the following error on the file ""SMDLoader.cpp.obj"":</p>

<pre><code>C:\Dev\AssimpTest\cmake-build-debug\_deps\assimp-src\code\SMDLoader.cpp: In member function 'void Assimp::SMDImporter::GetAnimationFileList(const string&amp;, Assimp::IOSystem*, std::vector&lt;std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;)':
C:\Dev\AssimpTest\cmake-build-debug\_deps\assimp-src\code\SMDLoader.cpp:579:47: error: 'strtok_s' was not declared in this scope
 tok1 = strtok_s(&amp;buf[0], ""\r\n"", &amp;context1);
                                           ^
_deps\assimp-build\code\CMakeFiles\assimp.dir\build.make:2246: recipe for target '_deps/assimp-build/code/CMakeFiles/assimp.dir/SMDLoader.cpp.obj' failed
</code></pre>

<p>This is the CMakeLists.txt file i'm using:</p>

<pre><code>cmake_minimum_required(VERSION 3.13)
project(AssimpTest)

set(CMAKE_CXX_STANDARD 11)

find_package(assimp 4.1.0 QUIET)

if (NOT assimp_FOUND)
include(FetchContent)

FetchContent_Declare(
        assimp
        URL https://github.com/assimp/assimp/archive/master.tar.gz
)

FetchContent_GetProperties(raylib)
if (NOT assimp_POPULATED)
    set(FETCHCONTENT_QUIET NO)
    FetchContent_Populate(assimp)

    set(CMAKE_BUILD_TYPE release CACHE STRING """" FORCE)
    set(ASSIMP_BUILD_TESTS OFF CACHE BOOL """" FORCE)

    add_subdirectory(${assimp_SOURCE_DIR} ${assimp_BINARY_DIR})

endif()

endif()

add_executable(AssimpTest main.cpp)
target_link_libraries(${PROJECT_NAME} assimp)
</code></pre>

<p>Here's the main file i'm trying to compile, just in case:</p>

<pre><code>#include &lt;assimp/Importer.hpp&gt;
#include &lt;assimp/scene.h&gt;
#include &lt;assimp/postprocess.h&gt;

int main() {
    Assimp::Importer importer;

    const char* pFile = R""(C:\Dev\raycast\models\teapot.fbx)"";

    const aiScene* scene = importer.ReadFile( pFile,
                                          aiProcess_CalcTangentSpace       |
                                          aiProcess_Triangulate            |
                                          aiProcess_JoinIdenticalVertices  |
                                          aiProcess_SortByPType);
    if( !scene)
    {
        printf(importer.GetErrorString());
        return -1;
    }
    printf(""Num meshes: %i"", scene-&gt;mNumMeshes);

    return 0;
}
</code></pre>

<p>The main reason i'm trying to use Assimp is to import .fbx models into my program, so if there is any way to optimize all of this setup just for that,   that would be really helpful! 
The information i found about the usage of this library with MinGW on the internet was really scarce.</p>

<p>Anyway thanks for help in advance.</p>
","","","1","746","3","1","0","2019-01-20 20:56:43","","2019-12-23 09:04:29",""
"54282817","CMake Could NOT find OpenMP in Clion","<macos><gcc><openmp><clion>","<p>I am trying to compile an OpenMP prject in Clion on Mac.</p>

<p>I have tried </p>

<p><a href=""https://stackoverflow.com/questions/40531078/how-to-set-up-basic-openmp-project-in-clion/40534056#40534056"">How to set up basic openMP project in CLion</a></p>

<p><a href=""https://stackoverflow.com/questions/12399422/how-to-set-linker-flags-for-openmp-in-cmakes-try-compile-function/12404666#12404666"">How to set linker flags for OpenMP in CMake&#39;s try_compile function</a></p>

<p><a href=""https://stackoverflow.com/questions/17633513/cmake-cannot-find-openmp"">CMake cannot find OpenMP</a></p>

<p>But they all don't work for me. Clion just says:</p>

<p>-- Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES) </p>

<p>-- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) </p>

<p>-- Could NOT find OpenMP (missing: OpenMP_C_FOUND OpenMP_CXX_FOUND) </p>

<p>I also tried compile it using ""gcc -o main -fopenmp main.c"" in the command line and it works fine.</p>

<p>Here is the code:</p>

<pre><code>#include &lt;stdio.h&gt;
#include &lt;omp.h&gt;
int main() {
printf(""Hello, World!\n"");
#pragma omp parallel
printf(""Hello world from thread %d\n"",omp_get_thread_num());
return 0;
}
</code></pre>
","","","3","1160","0","2","","2019-01-21 02:27:04","","2019-01-21 02:27:04",""